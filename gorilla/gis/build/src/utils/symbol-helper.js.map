{"version":3,"sources":["../../../src/utils/symbol-helper.js"],"names":["log","require","getLogger","CREATOR","MARKER","GisMarker","SPOT","GisSpot","POLYLINE","GisPolyline","POLYGON","GisPolygon","RECTANGLE","GisRectangle","CIRCLE","GisCircle","GEOJSON","GisGeoJSON","_createSymbol","item","_symbols","id","warn","ERROR","INVALID_ID","type","map","_map","symbolObj","mergedProps","sMergedProps","_","forEach","_symbolOptions","opt","match","props","selectedProps","omit","selected","INVALID_TYPE","NewSymbol","toUpper","symbol","SYMBOL_TYPE","CUSTOM","isEmpty","tooltip","setInfo","popup","_visible","isSelected","_selected","includes","layer","addTo","clusterId","cluster","isNotExit","isBoolean","_clusters","_gCluster","options","chain","_clusterOptions","filter","el","reduce","acc","merge","value","renderCluster","call","_icon","addLayer","group","groupId","_groups","renderGroup","children","push","_updateSymbol","set","origCluster","hasClusterLyr","hasLayer","removeLayer","origGroup","remove","getSymbol","ifOutputData","path","undefined","symbols","refined","isString","isArray","length","ids","isPlainObject","transformed","data","get","omitBy","isNil","isMatch","isFunction","key","toArray","INVALID_ARGS","result","p","val","field","replace","getDeepestDom","targetDom","selector","lowestLevel","doms","querySelectorAll","deepest","elm","depth","getTrackInstance","tracks","sbl","EXTRA_SYMBOL_TYPE","TRACK","renderSymbol","updateClusterSymbol","_layout","LAYOUT","STANDARD","refreshClusters","_clusterSymbols","childrenIds","getAllChildMarkers","shouldBeRemoved","_childClusters","_props","count","fire"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\n/**\r\n * This fle defines and implements all symbol-related base functions.\r\n *\r\n * @file   Functions related to symbol creation, update, and getter.\r\n * @author Liszt\r\n */\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { convertRawDataToSymbolObj, isMatch } from './data-helper';\r\nimport { renderCluster, renderGroup} from './render-helper';\r\nimport { mergeProps as combineProps } from './merge-helper';\r\nimport { GIS_ERROR as ERROR } from './gis-exception';\r\n\r\n// import GisPopup from '../symbols/popup'\r\nimport GisMarker from '../symbols/marker';\r\nimport GisSpot from '../symbols/spot';\r\nimport GisPolyline from '../symbols/polyline';\r\nimport GisPolygon from '../symbols/polygon';\r\nimport GisRectangle from '../symbols/rectangle';\r\nimport GisCircle from '../symbols/circle';\r\nimport GisGeoJSON from '../symbols/geojson';\r\nimport { SYMBOL_TYPE, EXTRA_SYMBOL_TYPE, LAYOUT } from '../consts/dictionary';\r\n\r\nconst log = require('loglevel').getLogger('gis/utils/symbol-helper');\r\n\r\nconst CREATOR = {\r\n  // POPUP: GisPopup,\r\n  MARKER: GisMarker,\r\n  SPOT: GisSpot,\r\n  POLYLINE: GisPolyline,\r\n  POLYGON: GisPolygon,\r\n  RECTANGLE: GisRectangle,\r\n  CIRCLE: GisCircle,\r\n  GEOJSON: GisGeoJSON\r\n};\r\n\r\n/**\r\n * Creates a new symbol on the map\r\n *\r\n * @param {Object} item     The symbol raw data\r\n */\r\nfunction _createSymbol(item) {\r\n  if (this._symbols[item.id]) {\r\n    log.warn(ERROR.INVALID_ID, item.id, `${item.type} ${item.id} which Id duplicates, please rename it`);\r\n    return;\r\n  }\r\n\r\n  const map = this._map;\r\n  let symbolObj = convertRawDataToSymbolObj(item);\r\n  let mergedProps = {};\r\n  let sMergedProps = {};\r\n\r\n  _.forEach(this._symbolOptions, (opt) => {\r\n    if (!opt.match || isMatch(item, opt.match)) {\r\n      mergedProps = combineProps(symbolObj, [mergedProps, opt.props]);\r\n      sMergedProps = combineProps(symbolObj, [sMergedProps, opt.selectedProps]);\r\n    }\r\n  });\r\n\r\n  mergedProps = combineProps(symbolObj, [mergedProps, symbolObj.props]);\r\n  sMergedProps = combineProps(symbolObj, [sMergedProps, symbolObj.selectedProps]);\r\n\r\n  symbolObj = {\r\n    ...symbolObj,\r\n    type: symbolObj.type || mergedProps.type,\r\n    props: _.omit(mergedProps, 'type'),\r\n    selectedProps: sMergedProps,\r\n    selected: symbolObj.selected || false\r\n  };\r\n\r\n  if (!symbolObj.type) {\r\n    log.warn(\r\n      ERROR.INVALID_TYPE,\r\n      `${symbolObj.id}: ${symbolObj.type}`,\r\n      'Please set valid symbol type in input data or symbolOptions.props'\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  // const {id, type, props, selected, selectedProps} = convertRawDataToSymbolObj(itemToCvt)\r\n  const { id, type, props, selected, selectedProps } = symbolObj;\r\n\r\n  // TBD: How to handle custom symbol?\r\n  const NewSymbol = CREATOR[_.toUpper(type)];\r\n  const symbol = type !== SYMBOL_TYPE.CUSTOM\r\n    ? new NewSymbol(id, props, selected, selectedProps)\r\n    : new CREATOR.MARKER(id, props, selected, selectedProps);\r\n\r\n  // Bind tooltip to layer\r\n  if (!_.isEmpty(props.tooltip)) {\r\n    const tooltip = selected ? (selectedProps.tooltip || props.tooltip) : props.tooltip;\r\n    symbol.setInfo('tooltip', tooltip);\r\n  }\r\n\r\n  // Bind popup to layer\r\n  if (!_.isEmpty(props.popup)) {\r\n    symbol.setInfo('popup', props.popup);\r\n  }\r\n\r\n  this._symbols[id] = symbol;\r\n  this._visible[id] = true;\r\n\r\n  if (symbol.isSelected()) {\r\n    this._selected[id] = true;\r\n  }\r\n\r\n  if (!_.includes(['marker', 'spot'], type)) {\r\n    symbol.layer.addTo(map);\r\n  } else {\r\n    const clusterId = props.cluster;\r\n\r\n    if (clusterId) {\r\n      // Check the cluster exist or not. If not, create one\r\n      const isNotExit = (!_.isBoolean(clusterId) && !this._clusters[clusterId]) || (clusterId === true && !this._gCluster);\r\n\r\n      if (isNotExit) {\r\n        const options = _.chain(this._clusterOptions)\r\n          .filter((el) => { return el.id === clusterId || !el.id; })\r\n          .reduce((acc, el) => { return _.merge(acc, el); }, {})\r\n          .value();\r\n\r\n        renderCluster.call(\r\n          this,\r\n          clusterId,\r\n          options,\r\n          clusterId === true ? {} : symbol._icon\r\n        );\r\n      }\r\n\r\n      // Add to global cluster when cluster is set as *true*\r\n      if (clusterId === true) {\r\n        this._gCluster.layer.addLayer(symbol.layer);\r\n      } else {\r\n        this._clusters[clusterId].layer.addLayer(symbol.layer);\r\n      }\r\n    } else {\r\n      symbol.layer.addTo(map);\r\n    }\r\n  }\r\n\r\n  // Group symbols if group is specified\r\n  if (props.group) {\r\n    const groupId = props.group;\r\n\r\n    if (!this._groups[groupId]) {\r\n      renderGroup.call(this, groupId);\r\n    }\r\n\r\n    /*\r\n      If a clustered symbol is added to layerGroup, it will keep on the map with layerGroup.\r\n      This makes cluster meaningless\r\n    */\r\n    this._groups[groupId].children.push(symbol.id);\r\n    if (!symbol.props.cluster) {\r\n      this._groups[groupId].layer.addLayer(symbol.layer);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Updates the target symbol. The id & type should match the existed symbol.\r\n *\r\n * @param {Object} item     The symbol data (GIS formatted, that is, symbol features should be contained in the key \"props\").\r\n */\r\nfunction _updateSymbol(item) {\r\n  const map = this._map;\r\n  // const symbol = _.cloneDeep(this._symbols[item.id])\r\n  const symbol = this._symbols[item.id];\r\n  const symbolObj = {\r\n    id: symbol.id,\r\n    type: symbol.type,\r\n    selected: symbol.selected,\r\n    selectedProps: symbol.selectedProps,\r\n    props: symbol.props\r\n  };\r\n\r\n  const { props, selected, selectedProps } = convertRawDataToSymbolObj(item);\r\n\r\n  const mergedProps = combineProps(symbolObj, [symbol.props, props]);\r\n  const sMergedProps = combineProps(symbolObj, [symbol.selectedProps, selectedProps]);\r\n\r\n  symbol.set(mergedProps, selected, sMergedProps);\r\n\r\n  // Set cluster/group if changed\r\n  if (mergedProps.cluster !== symbol.props.cluster) {\r\n    const clusterId = mergedProps.cluster;\r\n    const origCluster = symbol.props.cluster;\r\n\r\n    /*\r\n      If map.hasLayer(cluster layer), map is under standard mode.\r\n      This means cluster is visible on the map.\r\n    */\r\n    const hasClusterLyr = _.isBoolean(symbol.props.cluster) ?\r\n      (symbol.props.cluster ? map.hasLayer(this._gCluster.layer) : false) :\r\n      map.hasLayer(this._clusters[origCluster].layer);\r\n\r\n    if (_.isBoolean(clusterId)) {\r\n      // Remove from cluster when new props is *false*\r\n      if (!clusterId) {\r\n        this._clusters[origCluster] &&\r\n        this._clusters[origCluster].layer.removeLayer(symbol.layer);\r\n\r\n        // Add the symbol to map if it's visible on the map\r\n        hasClusterLyr &&\r\n        this._visible[symbol.id] &&\r\n        map.addLayer(symbol.layer);\r\n      }\r\n      // Add to default cluster\r\n      else {\r\n        const options = _.chain(this._clusterOptions)\r\n          .filter(el => { return !el.id; })\r\n          .reduce((acc, el) => { return _.merge(acc, el); }, {})\r\n          .value();\r\n\r\n        // Create it if global cluster is not exist\r\n        if (!this._gCluster) {\r\n          renderCluster.call(this, true, options);\r\n        }\r\n\r\n        hasClusterLyr &&\r\n        this._visible[symbol.id] &&\r\n        this._gCluster.layer.addLayer(symbol.layer);\r\n      }\r\n    }\r\n    // Create a new cluster\r\n    else if (clusterId && !this._clusters[clusterId]) {\r\n      const options = _.chain(this._clusterOptions)\r\n        .filter(el => { return el.id === clusterId || !el.id; })\r\n        .reduce((acc, el) => { return _.merge(acc, el); }, {})\r\n        .value();\r\n\r\n      renderCluster.call(this, clusterId, options, symbol._icon);\r\n      this._clusters[clusterId].layer.addLayer(symbol.layer);\r\n    }\r\n    // Move the cluster to the other one, or add to a cluster\r\n    else if (clusterId && this._clusters[clusterId]) {\r\n      this._clusters[origCluster] && this._clusters[origCluster].layer.removeLayer(symbol.layer);\r\n      this._clusters[clusterId].layer.addLayer(symbol.layer);\r\n    }\r\n  }\r\n\r\n  if (mergedProps.group !== symbol.props.group) {\r\n    const groupId = mergedProps.group;\r\n    const origGroup = symbol.props.group;\r\n\r\n    // Remove from group when new props is undefined or null\r\n    if (groupId === false && this._groups[origGroup]) {\r\n      this._groups[origGroup].layer.removeLayer(symbol.layer);\r\n      _.remove(this._groups[origGroup].children, id => { return id === symbol.id; });\r\n    }\r\n    // Create a new group\r\n    else if (groupId && !this._groups[groupId]) {\r\n      renderGroup.call(this, groupId);\r\n\r\n      this._groups[groupId].children.push(symbol.id);\r\n      !symbol.props.cluster && this._groups[groupId].layer.addLayer(symbol.layer);\r\n    }\r\n    // Move the group to the other one, or add to a group\r\n    else if (groupId && this._groups[groupId]) {\r\n      this._groups[origGroup] && this._groups[origGroup].layer.removeLayer(symbol.layer);\r\n      this._groups[origGroup] && _.remove(this._groups[origGroup].children, id => { return id === symbol.id; });\r\n\r\n      this._groups[groupId].children.push(symbol.id);\r\n      !symbol.props.cluster && this._groups[groupId].layer.addLayer(symbol.layer);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Gets symbols' instances or raw data according to given filter.\r\n *\r\n * @param {String | String[] | Object | Function | undefined | null} filter                 Filter to get the symbols. If it's a String or String[], find symbols by ids; if it's a Object, searches symbols by all the attributes in symbols; if it's a Function, filters symbols by the given callback(Symbol symbol, String id, Object gis._symbols)\r\n * @param {Boolean}                                                  [ifOutputData=false]   Output as raw data or not.\r\n * @param {String | String[] | undefined}                            [path=undefined]       Which keys should be output? Works when ifOutputData=true. If it's a String, returns a array of value of symbol[path]; if it's a String[], returns a symbol data object with target fields(path); if it's undefined, returns all the fields of the symbol\r\n *\r\n * @return {Symbol[] | type[] | Object[]}  The filtered symbol data\r\n */\r\nexport function getSymbol(filter, ifOutputData=false, path=undefined) {\r\n  const symbols = this._symbols;\r\n  let refined = [];\r\n\r\n  if (_.isString(filter)) {\r\n    // Use id to find\r\n    refined = _.filter(symbols, ({ id }) => id === filter);\r\n  } else if (_.isArray(filter) && filter.length > 0) {\r\n    // Use ids[] to find\r\n    const ids = _.reduce(filter, (acc, id) => {\r\n      acc[id] = id;\r\n      return acc;\r\n    }, {});\r\n\r\n    // refined = _.filter(symbols, el => _.includes(filter, el.id))\r\n    refined = _.filter(symbols, el => !!ids[el.id]);\r\n  } else if (_.isPlainObject(filter)) {\r\n    // Use attributes, like id/type/props/... to find\r\n    // Apr 26, 2018 Update: Filter can directly set 'data' key as rule, like {id, data:{....}}\r\n    // May 21, 2018 Update: Filter can directly set 'group' key as rule, like {id, group, data:{....}}\r\n    const transformed = filter.data || filter.group\r\n      ? {\r\n        ..._.omit(filter, ['data', 'group']),\r\n        props: {\r\n          ..._.get(filter, 'props', {}),\r\n          data: _.get(filter, 'data'),\r\n          group: _.get(filter, 'group')\r\n        }\r\n      }\r\n      : filter;\r\n\r\n    transformed.props = _.omitBy(transformed.props, _.isNil);\r\n    refined = _.filter(symbols, el => _.isMatch(el, transformed));\r\n  } else if (_.isFunction(filter)) {\r\n    // Use filter function to find, with parameters, such as id, props, type, etc.\r\n    refined = _.filter(symbols, (el, key) => filter(el, key, symbols));\r\n  } else if (_.isNil(filter) || _.isEmpty(filter)) {\r\n    refined = _.toArray(symbols);\r\n  } else {\r\n    log.warn(ERROR.INVALID_ARGS, filter, 'Filter should be String, String[], Object, or Function');\r\n    return [];\r\n  }\r\n\r\n  // Convert refined symbols to text data when ifOutputData is given\r\n  if (ifOutputData && refined.length > 0) {\r\n    let data = [];\r\n    if (_.isString(path)) {\r\n      data = _.map(refined, el => {\r\n        return _.get(el, path);\r\n      });\r\n    } else if (_.isArray(path)) {\r\n      data = _.map(refined, el => {\r\n        return _.reduce(path, (result, p) => {\r\n          const val = _.get(el, p);\r\n          const field = p.replace('props.', '');\r\n\r\n          result[field] = val;\r\n          return result;\r\n        }, {});\r\n      });\r\n    } else if (_.isNil(path)) {\r\n      data = _.map(refined, ({ id, type, props, selected, selectedProps }) => {\r\n        return {\r\n          id,\r\n          type,\r\n          selected,\r\n          selectedProps,\r\n          ...props\r\n        };\r\n      });\r\n    } else {\r\n      log.warn(ERROR.INVALID_ARGS, path, 'Path should be a String, String[], or empty');\r\n    }\r\n\r\n    return data;\r\n  } else {\r\n    return refined;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the deepest and the last node within a DOM.\r\n * If no childNodes is found, return the DOM itself.\r\n *\r\n * @param {HTMLElement} targetDom       The target DOM to be tarversed.\r\n * @param {String}      [selector='*']  Output as raw data or not.\r\n *\r\n * @return {HTMLElement}   The deepest node in the target DOM\r\n */\r\nexport function getDeepestDom(targetDom, selector='*') {\r\n  let lowestLevel = 0; // relative lowest depth\r\n\r\n  const doms = targetDom.querySelectorAll(selector);\r\n  const deepest = _.reduce(doms, (acc, elm) => {\r\n    let depth = 0;   // relative depth\r\n    let el = elm;\r\n\r\n    while (el.children.length > 0) {\r\n      depth++;\r\n      el = getDeepestDom(el, '*');\r\n    }\r\n\r\n    if (depth >= lowestLevel) {\r\n      acc = el;\r\n      lowestLevel = depth;\r\n    }\r\n\r\n    return acc;\r\n  }, targetDom);\r\n\r\n  return deepest;\r\n}\r\n\r\n/**\r\n * Gets the Track instances according to filter\r\n *\r\n * @param {String | String[] | Object | Function | undefined | null}    filter     Filter to get the tracks. If it's a String or String[], find tracks by ids; if it's a Object, searches tracks by all the attributes in tracks; if it's a Function, filters tracks by the given callback(Symbol track, String id, Object gis._symbols)\r\n *\r\n * @return {Object}    All the Track instances matching the filter.\r\n */\r\nexport function getTrackInstance(filter) {\r\n  const symbols = getSymbol.call(this, filter);\r\n  const tracks = _.reduce(symbols, (acc, sbl) => {\r\n    if (sbl.type === EXTRA_SYMBOL_TYPE.TRACK) {\r\n      acc[sbl.id] = sbl;\r\n    }\r\n\r\n    return acc;\r\n  }, {});\r\n\r\n  return tracks;\r\n}\r\n\r\n/**\r\n * Creates or updates the symbol\r\n *\r\n * @param {Object} symbol   The symbol raw data.\r\n *\r\n */\r\nexport function renderSymbol(symbol) {\r\n  if (!this._symbols[symbol.id]) {\r\n    _createSymbol.call(this, symbol);\r\n  } else {\r\n    _updateSymbol.call(this, symbol);\r\n  }\r\n}\r\n\r\n/**\r\n * Updates the cluster data when the cluster should change, e.g., zoom in/out to change the cluste data or apperance.\r\n *\r\n */\r\nexport function updateClusterSymbol() {\r\n  if (this._layout !== LAYOUT.STANDARD) {\r\n    return;\r\n  }\r\n\r\n  if (this._gCluster) {\r\n    this._gCluster.layer.refreshClusters();\r\n  }\r\n\r\n  _.forEach(this._clusters, cluster => {\r\n    cluster.layer.refreshClusters();\r\n  });\r\n\r\n  // Update the cluster data\r\n  _.forEach(this._clusterSymbols, (sbl, id) => {\r\n    const childrenIds = _.map(sbl.layer.getAllChildMarkers(), '_gis_id');\r\n    // This cluster symbol has no children cluster, or no symbols are clustered under it\r\n    const shouldBeRemoved = sbl.layer._childClusters.length === 0 &&\r\n                childrenIds.length <= 1;\r\n\r\n    if (shouldBeRemoved) {\r\n      delete this._clusterSymbols[id];\r\n    } else {\r\n      sbl._props.data.ids = childrenIds;\r\n      sbl._props.data.count = childrenIds.length;\r\n    }\r\n  });\r\n\r\n  this._map.fire('clusterselectionChange');\r\n}\r\n\r\nexport default {\r\n  getSymbol,\r\n  getDeepestDom,\r\n  getTrackInstance,\r\n  renderSymbol,\r\n  updateClusterSymbol\r\n};"],"file":"symbol-helper.js"}