{"version":3,"sources":["../../../src/utils/render-helper.js"],"names":["log","require","getLogger","FACTOR","_convertSymbolToHeatspot","filter","map","_map","symbolData","getSymbol","call","spots","_","reduce","result","el","heatmap","id","type","symbol","_symbols","data","centroid","radius","HUNDRED_MILES_TO_METERS","_heatmapOptions","area","latlng","geojson","bbox","intensity","min","isPlainObject","isFunction","heatspot","isBoolean","SYMBOL_TYPE","RECTANGLE","POLYGON","layer","toGeoJSON","turf","Math","sqrt","PI","centerOfMass","geometry","coordinates","reverse","lat","lng","POLYLINE","props","directed","getLayers","minBy","point","distance","GEOJSON","flatten","MARKER","CIRCLE","CUSTOM","push","_resetMapBounds","resetZoom","overlays","_overlays","maxBounds","acc","xy","size","y","x","height","width","setMaxBounds","fitBounds","mapZoom","getZoom","forEach","zoom","isNil","hasLayer","removeLayer","_createClusterIcon","options","parentId","_leaflet_id","count","has","getChildCount","childrens","getAllChildMarkers","children","get","sblObj","cluster","ids","lyr","_gis_id","rootBackgroundColor","some","value","lowerBound","upperBound","backgroundColor","selectedProps","className","label","content","ParentNode","GisMarker","GisSpot","parent","omit","_type","EXTRA_SYMBOL_TYPE","CLUSTER","_origType","_layer","_clusterSymbols","L","divIcon","_icon","renderHeatmap","_heatmap","visible","keys","_visible","isEmpty","newHeatmap","Heatmap","setData","max","_layout","LAYOUT","HEATMAP","addLayer","renderTrack","_flagGroup","clearLayers","_flags","isTrack","TRACK","isStandard","STANDARD","interval","_interval","tracks","groups","chain","sbl","track","isNumber","ts","isArray","groupBy","grp","key","trackGrp","t","cloneDeep","_props","sortBy","startIdx","findIndex","length","endIdx","findLastIndex","isExist","isDuplicated","isSelected","selected","uniq","_selectedProps","_origProps","_origSelectedProps","isFlagMode","isEqual","set","warn","ERROR","INVALID_ID","trackObj","DEFAULT_TRACK_STYLE","DEFAULT_TRACK_SLT_STYLE","propsToUse","showInvisible","showOngoing","startSymbol","endSymbol","internalSymbols","selectedPropsToUse","_trackOptions","match","symbolName","showLabelOn","symbolProps","SPOT","route","slice","latlngs","currLast","last","next","offset","timeDiff","ratio","currPosition","GisPolyline","hasOngoingNode","Point","ongoingNodeId","random","toString","replace","substr","ongoingNode","start","head","end","hasFlag","startObj","endObj","startPropCfg","startSltPropCfg","endPropCfg","endSltPropCfg","isOngoingNode","internalProps","internalSltProps","origProps","origSelectedProps","internal","merge","selectedInternal","addTo","_tracks","renderContour","opts","undefined","_contour","markers","includes","_contourOptions","boundSW","boundNE","d","thresholds","cellSize","bandwidth","Infinity","flattened","item","color","find","colors","toNumber","DEFAULT_CONTOUR_STYLE","c","coords","contour","layerGroup","f","polyline","fill","weight","interactive","CONTOUR","renderPane","pane","isString","createPane","renderOverlay","overlay","resetMaxBounds","getBounds","url","ol","imageOverlay","_southWest","image","Image","src","addEventListener","naturalWidth","naturalHeight","bounds","latLngBounds","latLng","setBounds","opacity","setOpacity","renderSelectedCluster","_gCluster","_clusters","isVisibleParent","allChildren","_selected","setSelected","renderCluster","clusterLayer","globalCluster","isGlobalCluster","clusterOpt","chunkedLoading","showCoverageOnHover","animate","layers","markerClusterGroup","iconCreateFunction","clusterLyr","on","bind","addLayers","renderGroup","group","_groups"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\n/**\r\n * Render-related functions.\r\n *\r\n * @file   This file implements all GIS render-related functions.\r\n * @author Liszt\r\n * @todo   Modify after merge the codes from develop_mix-layer branch\r\n */\r\n\r\nimport _ from 'lodash';\r\nimport L from 'leaflet';\r\nimport 'leaflet.markercluster/dist/leaflet.markercluster';\r\nimport Heatmap from 'heatmap.js/plugins/leaflet-heatmap';\r\nimport * as turf from '@turf/turf';\r\nimport { contourDensity } from 'd3-contour';\r\n\r\nimport { convertLatlngToMeters, convertMetersToLatLng } from './gis-helper';\r\nimport { isValidArgType, isBetween } from './data-helper';\r\nimport { getSymbol } from './symbol-helper';\r\nimport { mergeProps } from './merge-helper';\r\n\r\nimport GisPolyline from '../symbols/polyline';\r\nimport GisMarker from '../symbols/marker';\r\nimport GisSpot from '../symbols/spot';\r\n\r\nimport { DEFAULT_TRACK_STYLE, DEFAULT_TRACK_SLT_STYLE, DEFAULT_CONTOUR_STYLE } from '../consts/style';\r\nimport { LAYOUT, SYMBOL_TYPE, EXTRA_SYMBOL_TYPE, HUNDRED_MILES_TO_METERS } from '../consts/dictionary';\r\n\r\nimport { GIS_ERROR as ERROR } from './gis-exception';\r\n\r\nconst log = require('loglevel').getLogger('gis/utils/render-helper');\r\n\r\nconst FACTOR = 10;\r\n\r\n/**\r\n * Converts symbol to heatspot.\r\n *\r\n * @param {String | String[] | Object | Function | undefined | null} filter     Filter to convert matched symbols to heatspot. If it's a String or String[], converts symbols by ids; if it's a Object, converts symbols by all the attributes in symbols; if it's a Function, converts symbols by the given callback(Symbol symbol, String id, Object gis._symbols)\r\n *\r\n */\r\nfunction _convertSymbolToHeatspot(filter) {\r\n  const map = this._map;\r\n  const symbolData = getSymbol.call(this, filter, true, [\r\n    'id', 'type', 'props.latlng', 'props.heatmap', 'props.radius', 'props.geojson'\r\n  ]);\r\n\r\n  const spots = _.reduce(symbolData, (result, el) => {\r\n    if (!el.heatmap) {\r\n      return result;\r\n    }\r\n\r\n    const { id, type, heatmap } = el;\r\n    const symbol = this._symbols[el.id];\r\n    let data = {};\r\n\r\n    let centroid = [];\r\n    let radius = el.radius\r\n      ? (el.radius / HUNDRED_MILES_TO_METERS)\r\n      : this._heatmapOptions.radius / HUNDRED_MILES_TO_METERS;\r\n\r\n    let area;\r\n    let latlng;\r\n    let geojson;\r\n    let bbox;\r\n\r\n    // Enhancement for issue #6. Replace props 'intensity' with 'heatmap',\r\n    // which is a Bool/Object/Function(Object *symbolObj*)\r\n    // If *heatmap* === true, use default min value;\r\n    // if *heatmap* is an Object, use *heatmap.intensity*;\r\n    // if *heatmap* is a function, it will return Bool or Object,\r\n    // and use the above rule to determine intensity\r\n    let intensity = this._heatmapOptions.min;\r\n    if (_.isPlainObject(heatmap)) {\r\n      intensity = heatmap.intensity || this._heatmapOptions.min;\r\n    } else if (_.isFunction(heatmap)) {\r\n      const heatspot = heatmap(getSymbol.call(this, id, true));\r\n\r\n      if (_.isBoolean(heatspot) && heatspot) {\r\n        intensity = this._heatmapOptions.min;\r\n      } else if (_.isPlainObject(heatspot)) {\r\n        intensity = heatspot.intensity;\r\n      }\r\n    }\r\n\r\n    switch (type) {\r\n      case SYMBOL_TYPE.RECTANGLE:\r\n      case SYMBOL_TYPE.POLYGON:\r\n        geojson = symbol.layer.toGeoJSON();\r\n\r\n        area = turf.area(geojson);\r\n        radius = Math.sqrt(area / Math.PI) / HUNDRED_MILES_TO_METERS;\r\n\r\n        // coordinates of geojson is [lng, lat]\r\n        centroid = turf.centerOfMass(geojson).geometry.coordinates;\r\n        centroid = _.reverse(centroid);\r\n\r\n        data = {\r\n          lat: centroid[0],\r\n          lng: centroid[1],\r\n          radius,\r\n          intensity: el.intensity || this._heatmapOptions.min\r\n        };\r\n        break;\r\n\r\n      // TBD: polyline & geojson heatspot\r\n      case SYMBOL_TYPE.POLYLINE:\r\n        geojson = symbol.props.directed\r\n          ? symbol.layer.getLayers()[0].toGeoJSON()\r\n          : symbol.layer.toGeoJSON();\r\n\r\n        // coordinates of geojson is [lng, lat]\r\n        centroid = turf.centerOfMass(geojson).geometry.coordinates;\r\n        centroid = _.reverse(centroid);\r\n\r\n        // Get the nearest point to the centroid,\r\n        // then calculating the distance to centroid as radius\r\n        latlng = _.minBy(geojson.geometry.coordinates, (point) => {\r\n          point = _.reverse(point);\r\n          return map.distance(centroid, point);\r\n        });\r\n\r\n        radius = map.distance(centroid, latlng) / HUNDRED_MILES_TO_METERS;\r\n\r\n        data = {\r\n          lat: centroid[0],\r\n          lng: centroid[1],\r\n          radius,\r\n          intensity\r\n        };\r\n        break;\r\n\r\n      case SYMBOL_TYPE.GEOJSON:\r\n        // Get the centroid and bbox of the geojson,\r\n        // then calculating distance from centroid to a vertex on bbox as radius\r\n        geojson = el.geojson.type !== 'FeatureCollection'\r\n          ? turf.flatten(el.geojson)\r\n          : el.geojson;\r\n\r\n        bbox = turf.bbox(geojson); // return [ minX, minY, maxX, maxY ]\r\n        latlng = [bbox[1], bbox[0]];\r\n\r\n        // coordinates of geojson is [lng, lat]\r\n        centroid = turf.centerOfMass(geojson).geometry.coordinates;\r\n        centroid = _.reverse(centroid);\r\n        radius = map.distance(centroid, latlng) / HUNDRED_MILES_TO_METERS;\r\n\r\n        data = {\r\n          lat: centroid[0],\r\n          lng: centroid[1],\r\n          radius,\r\n          intensity\r\n        };\r\n        break;\r\n\r\n      case SYMBOL_TYPE.MARKER:\r\n      case SYMBOL_TYPE.CIRCLE:\r\n      case SYMBOL_TYPE.CUSTOM:\r\n      default:\r\n        data = {\r\n          lat: el.latlng[0],\r\n          lng: el.latlng[1],\r\n          radius,\r\n          intensity\r\n        };\r\n    }\r\n\r\n    result.push(data);\r\n    return result;\r\n  }, []);\r\n\r\n  return spots;\r\n}\r\n\r\n/**\r\n * Resets map max bounds. Used in renderOverlay().\r\n *\r\n * @param {Boolean} [resetZoom=undefined]   Reset the zoom level after adjusting the max bounds or not.\r\n *\r\n */\r\nfunction _resetMapBounds(resetZoom) {\r\n  const map = this._map;\r\n  const overlays = this._overlays;\r\n  const maxBounds = _.reduce(overlays, (acc, { xy, size }) => {\r\n    if (xy.y < acc[0][0]) {\r\n      acc[0][0] = xy.y;\r\n    }\r\n\r\n    if (xy.x < acc[0][1]) {\r\n      acc[0][1] = xy.x;\r\n    }\r\n\r\n    if ((xy.y + size.height) > acc[1][0]) {\r\n      acc[1][0] = xy.y + size.height;\r\n    }\r\n\r\n    if ((xy.x + size.width) > acc[1][1]) {\r\n      acc[1][1] = xy.x + size.width;\r\n    }\r\n\r\n    return acc;\r\n  }, [[0, 0], [0, 0]]);\r\n\r\n  map.setMaxBounds(maxBounds);\r\n  resetZoom && this._map.fitBounds(maxBounds);\r\n\r\n  const mapZoom = map.getZoom();\r\n  _.forEach(overlays, ({ zoom, layer }) => {\r\n    if (!_.isNil(zoom) && zoom > mapZoom && map.hasLayer(layer)) {\r\n      map.removeLayer(layer);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Creates cluster icon.\r\n *\r\n * @param {String}          id                                               The leaflet internal id of cluster node\r\n * @param {Object}          options                                          Symbol options for this cluster node.\r\n * @param {Object}          options.symbol\r\n * @param {String}          options.symbol.sumBy                             count will use this key to sum. Ps. the __toSum is insert to child markers by the auto create setting in setup-helper\r\n * @param {Array}           options.symbol.renderCount                       only work while using spot type\r\n * @param {Number}          options.symbol.renderCount.lowerBound            count render lowerBound\r\n * @param {Number}          options.symbol.renderCount.upperBound            count render upperBound\r\n * @param {String}          [options.symbol.renderCount.backgroundColor]     backgroundColor in this range. Use symbol color by default.\r\n * @param {Number}          [options.symbol.renderCount.size]                size in this range. 15px by default.\r\n * @param {L.ClusterNode}   layer                                            The cluster node layer instance.\r\n *\r\n * @return {L.divIcon}     The created cluster icon\r\n */\r\nfunction _createClusterIcon(id, options, layer) {\r\n  // const parentId = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(1, 6)\r\n  const parentId = layer._leaflet_id;\r\n  let count = null;\r\n  if (!_.has(options, 'props.symbol.sumBy')) {\r\n    count = layer.getChildCount();\r\n  } else {\r\n    const childrens = layer.getAllChildMarkers();\r\n    count = 0;\r\n    _.forEach(childrens, (children) => {\r\n      count += _.get(children, ['options', 'icon', 'options', '__toSum'], 0);\r\n    });\r\n    //        count = Math.floor(count);\r\n  }\r\n  const sblObj = {\r\n    id: parentId,\r\n    // type: 'cluster' is used for filtering pseudo cluster symbol\r\n    // type: EXTRA_SYMBOL_TYPE.CLUSTER,\r\n    type: _.get(options, 'props.symbol.type', SYMBOL_TYPE.MARKER),\r\n    ..._.get(options, 'props.symbol', {}),\r\n    data: {\r\n      // ...options.props.symbol.data,\r\n      ..._.get(options, 'props.symbol.data', {}),\r\n      cluster: id,\r\n      count,\r\n      ids: _.map(layer.getAllChildMarkers(), (lyr) => {\r\n        return lyr._gis_id;\r\n      })\r\n    }\r\n  };\r\n  if (_.has(options, 'props.symbol.renderCount')) {\r\n    const rootBackgroundColor = _.get(options, 'props.symbol.backgroundColor');\r\n    _.get(options, 'props.symbol.renderCount').some((value) => {\r\n      const { lowerBound, upperBound, size = '15px', backgroundColor = rootBackgroundColor } = value;\r\n      if (lowerBound <= count && _.isNil(upperBound)) {\r\n        options.props.symbol.width = size;\r\n        options.props.symbol.height = size;\r\n        options.props.symbol.backgroundColor = backgroundColor;\r\n      } else if (_.isNil(lowerBound) && count <= upperBound) {\r\n        options.props.symbol.width = size;\r\n        options.props.symbol.height = size;\r\n        options.props.symbol.backgroundColor = backgroundColor;\r\n      } else if (lowerBound <= count && count <= upperBound) {\r\n        options.props.symbol.width = size;\r\n        options.props.symbol.height = size;\r\n        options.props.symbol.backgroundColor = backgroundColor;\r\n      }\r\n    });\r\n  }\r\n  const props = mergeProps(sblObj, [{ data: sblObj.data }, _.get(options, 'props.symbol')]);\r\n  const selectedProps = mergeProps(sblObj, [_.get(options, 'props.symbol.selectedProps')]);\r\n  props.className = `gis-cluster${_.get(props, 'className', '')}`;\r\n  props.label = props.label || { content: `* ${layer.getChildCount()}` };\r\n\r\n  const ParentNode = sblObj.type === SYMBOL_TYPE.MARKER ? GisMarker : GisSpot;\r\n  const parent = new ParentNode(parentId, _.omit(props, 'type'), false, selectedProps);\r\n\r\n  layer._gis_id = parentId;\r\n\r\n  parent._type = EXTRA_SYMBOL_TYPE.CLUSTER;\r\n  parent._origType = sblObj.type;\r\n  parent._layer = layer;\r\n\r\n  this._clusterSymbols[layer._leaflet_id] = parent;\r\n  return L.divIcon(parent._icon);\r\n}\r\n\r\n/**\r\n * Render heatmap.\r\n *\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md#measure-options\r\n *\r\n * @param {Object} [options]    Heatmap options. If undefined, apply the original heatmap options. For more info, see the link above.\r\n *\r\n */\r\nexport function renderHeatmap(options) {\r\n  this._heatmapOptions = { ...this._heatmapOptions, ...options };\r\n\r\n  const map = this._map;\r\n  const heatmap = this._heatmap;\r\n  const visible = _.keys(this._visible);\r\n\r\n  const data = _.isEmpty(visible) ? [] : _convertSymbolToHeatspot.call(this, visible);\r\n  const newHeatmap = new Heatmap(this._heatmapOptions);\r\n\r\n  newHeatmap.setData({\r\n    data,\r\n    min: options ? options.min : this._heatmapOptions.min,\r\n    max: options ? options.max : this._heatmapOptions.max\r\n  });\r\n\r\n  if (this._layout === LAYOUT.HEATMAP) {\r\n    if (heatmap && map.hasLayer(heatmap)) {\r\n      map.removeLayer(heatmap);\r\n    }\r\n\r\n    map.addLayer(newHeatmap);\r\n  }\r\n\r\n  this._heatmap = newHeatmap;\r\n}\r\n\r\n\r\n/**\r\n * Render tracks in track layout.\r\n *\r\n */\r\nexport function renderTrack() {\r\n  this._flagGroup.clearLayers();\r\n  this._flags = this._flags || {}; // For placing the ongoing nodes.\r\n\r\n  const isTrack = this._layout === LAYOUT.TRACK;\r\n  const isStandard = this._layout === LAYOUT.STANDARD;\r\n  const interval = this._interval;\r\n  const tracks = [];\r\n\r\n  // Group by track (\"track\" will be the key), then sorting by ts in each group\r\n  const groups = _.chain(this._symbols)\r\n    .filter((sbl) => {\r\n      return !!sbl.props.track && (_.isNumber(sbl.props.ts) || (_.isArray(sbl.props.ts) && !_.isEmpty(sbl.props.ts)));\r\n    })\r\n    .groupBy((sbl) => {\r\n      // Enhancement for issue #6\r\n      // Rename props \"trackId\" to \"track\",\r\n      // and type is String or Function(Object *symbolObj*) which will return a String\r\n      return (sbl.props.track && _.isFunction(sbl.props.track))\r\n        ? sbl.props.track(getSymbol.call(this, sbl.id, true))\r\n        : sbl.props.track;\r\n    })\r\n    .reduce((result, grp, key) => {\r\n      // Enhancement for issue #32.\r\n      // Support for *ts* is an array\r\n      const trackGrp = _.chain(grp)\r\n        .map((sbl) => {\r\n          return _.isArray(sbl.props.ts)\r\n            ? _.map(sbl.props.ts, (t) => {\r\n              const symbol = _.cloneDeep(sbl);\r\n              symbol._props.ts = t;\r\n\r\n              return symbol;\r\n            })\r\n            : sbl;\r\n        })\r\n        .flatten()\r\n      // .filter(sbl => interval.length === 0 || isBetween(sbl._props.ts, interval))\r\n        .sortBy(sbl => sbl.props.ts)\r\n        .map(({ id, props }) => { return { id, latlng: props.latlng, ts: props.ts }; })\r\n        .value();\r\n\r\n      result[key] = trackGrp;\r\n      return result;\r\n    }, {})\r\n    .value();\r\n\r\n  _.forEach(groups, (grp, key) => {\r\n    // Find the first and last visible marker/spot, and draw the track between two points\r\n    const startIdx = _.findIndex(grp, ({ id, ts }) => this._visible[id] && (interval.length === 0 || isBetween(ts, interval)));\r\n    const endIdx = _.findLastIndex(grp, ({ id, ts }) => this._visible[id] && (interval.length === 0 || isBetween(ts, interval)));\r\n    const isExist = this._symbols[key] && this._symbols[key].type === EXTRA_SYMBOL_TYPE.TRACK;\r\n    const isDuplicated = this._symbols[key] && this._symbols[key].type !== EXTRA_SYMBOL_TYPE.TRACK;\r\n    let isSelected = false;\r\n\r\n    // For redrawing track\r\n    if (isExist) {\r\n      isSelected = this._symbols[key].selected;\r\n      this._map.removeLayer(this._symbols[key].layer);\r\n      _.forEach(_.uniq(grp), ({ id }) => {\r\n        const { _props, _selectedProps, _origProps, _origSelectedProps, selected } = this._symbols[id];\r\n        const isFlagMode = !_.isEqual(_props, _origProps) || !_.isEqual(_selectedProps, _origSelectedProps);\r\n\r\n        // Reset all markers/spots which is changed as flag\r\n        // This is for preventing they keep as flag when they shouldn't be.\r\n        if (isFlagMode) {\r\n          this._symbols[id].set(_origProps, selected, _origSelectedProps);\r\n        }\r\n\r\n        this._map.hasLayer(this._symbols[id].layer)\r\n        && this._map.removeLayer(this._symbols[id].layer);\r\n      });\r\n\r\n      delete this._symbols[key];\r\n    }\r\n\r\n    // Do not draw track if trackId duplicates with any symbol\r\n    if (isDuplicated) {\r\n      log.warn(\r\n        ERROR.INVALID_ID,\r\n        key,\r\n        `track ${key} which Id duplicates with a symbol, please rename it`\r\n      );\r\n    } else if ((startIdx !== -1) && (endIdx !== -1)) {\r\n      // Enhancement for issue #31\r\n      // Get style from config, and later styles get higher priority\r\n      // Cfgs without \"match\" key will be applied to all tracks\r\n      const trackObj = {\r\n        id: key,\r\n        type: EXTRA_SYMBOL_TYPE.TRACK,\r\n        latlng: _.map(grp, 'latlng'),\r\n        ...DEFAULT_TRACK_STYLE,\r\n        selected: false,\r\n        selectedProps: DEFAULT_TRACK_SLT_STYLE\r\n      };\r\n      let propsToUse = { showInvisible: false, showOngoing: false, startSymbol: {}, endSymbol: {}, internalSymbols: false };\r\n      let selectedPropsToUse = { startSymbol: {}, endSymbol: {} };\r\n\r\n      _.forEach(this._trackOptions, ({ match, props, selectedProps }) => {\r\n        if ((match && match.id === key) || !match) {\r\n          propsToUse = mergeProps(trackObj, [DEFAULT_TRACK_STYLE, propsToUse, props]);\r\n          selectedPropsToUse = mergeProps(trackObj, [DEFAULT_TRACK_SLT_STYLE, selectedPropsToUse, selectedProps]);\r\n        }\r\n      });\r\n\r\n      propsToUse = ['startSymbol', 'endSymbol'].reduce(({ showLabelOn = false, ...props }, symbolName) => {\r\n        const { label, type = SYMBOL_TYPE.MARKER, ...symbolProps } = props[symbolName];\r\n        const { content = '', className = '' } = 'string' === typeof label ? { content: label } : (label || {});\r\n\r\n        return SYMBOL_TYPE.SPOT !== type ? { showLabelOn, ...props } : {\r\n          showLabelOn,\r\n          ...props,\r\n          [ symbolName ]: {\r\n            type,\r\n            ...(symbolProps || {}),\r\n            ...(!label || !showLabelOn ? {} : {\r\n              label: 'TracksEnd' === showLabelOn ? content : { content, className }\r\n            })\r\n          }\r\n        };\r\n      }, propsToUse);\r\n\r\n      const showOngoing = propsToUse.showOngoing && (endIdx !== grp.length - 1);\r\n\r\n      const route = _(grp)\r\n        .slice(startIdx, endIdx + 1)\r\n        .filter(({ id }) => propsToUse.showInvisible || this._visible[id])\r\n        .value();\r\n\r\n      const latlngs = _.map(route, 'latlng');\r\n      /*\r\n        The extra point's location depends on the GisInterval\r\n        In other words, this works if used with time-related functionality if\r\n        you'd like to see the track animation\r\n      */\r\n      if (showOngoing && _.isArray(interval) && interval.length === 2) {\r\n        const currLast = _.last(route);\r\n        const next = grp[endIdx + 1];\r\n        const offset = [next.latlng[0] - currLast.latlng[0], next.latlng[1] - currLast.latlng[1]];\r\n        const timeDiff = next.ts - currLast.ts;\r\n        const ratio = (interval[1] - currLast.ts) / timeDiff;\r\n        const currPosition = [currLast.latlng[0] + offset[0] * ratio, currLast.latlng[1] + offset[1] * ratio];\r\n        latlngs.push(currPosition);\r\n      }\r\n\r\n      const track = new GisPolyline(key, {\r\n        latlng: latlngs,\r\n        ...propsToUse,\r\n        route\r\n      }, isSelected, selectedPropsToUse);\r\n\r\n      track._type = EXTRA_SYMBOL_TYPE.TRACK;\r\n      track._origType = SYMBOL_TYPE.POLYLINE;\r\n\r\n      this._symbols[key] = track;\r\n      this._visible[key] = true;\r\n      tracks.push(key);\r\n\r\n      const hasOngoingNode = showOngoing\r\n                  && !_.isEqual(_.last(latlngs), _.get(_.last(route), 'props.latlng'));\r\n\r\n      const Point = _.get(propsToUse, 'endSymbol.type') === SYMBOL_TYPE.SPOT ? GisSpot : GisMarker;\r\n      const ongoingNodeId = _.get(propsToUse, 'endSymbol.id', `${key}_${Math.random().toString(36).replace(/[^a-z]+/g, '').substr(1, 6)}`);\r\n      const ongoingNode = new Point(\r\n        // Math.random().toString(36).replace(/[^a-z]+/g, '').substr(1, 6),\r\n        ongoingNodeId,\r\n        { latlng: _.last(latlngs), data: { track: key }, ..._.get(propsToUse, 'endSymbol') },\r\n        this._flags[ongoingNodeId] && this._flags[ongoingNodeId].selected,\r\n        _.get(propsToUse, 'endSymbol.selectedProps', {})\r\n      );\r\n\r\n      delete this._flags[ongoingNodeId];\r\n\r\n      const start = this._symbols[_.get(_.head(route), 'id')];\r\n      let end = hasOngoingNode ? ongoingNode : this._symbols[_.get(_.last(route), 'id')];\r\n      if (this._layout === LAYOUT.TRACK) {\r\n        this._map.addLayer(track.layer);\r\n\r\n        const hasFlag = _.get(propsToUse, 'startSymbol') || _.get(propsToUse, 'endSymbol');\r\n\r\n        if (hasFlag) {\r\n          if (hasOngoingNode && (this._symbols[end.id] || this._flags[end.id])) {\r\n            log.warn(\r\n              ERROR.INVALID_ID,\r\n              end.id,\r\n              `ongoing node ${end.id} which Id duplicates with a symbol or track, please rename it`\r\n            );\r\n\r\n            end = this._symbols[_.get(_.last(route), 'id')];\r\n          }\r\n\r\n          const startObj = {\r\n            id: start.id,\r\n            type: start.type,\r\n            props: start.props,\r\n            selectedProps: start.selectedProps,\r\n            selected: start.selected\r\n          };\r\n\r\n          const endObj = {\r\n            id: end.id,\r\n            type: end.type,\r\n            props: end.props,\r\n            selectedProps: end.selectedProps,\r\n            selected: end.selected\r\n          };\r\n\r\n          const startPropCfg = mergeProps(startObj, [start._origProps, _.get(propsToUse, 'startSymbol', {})]);\r\n          const startSltPropCfg = mergeProps(startObj, [start._origSelectedProps, _.get(propsToUse, 'startSymbol.selectedProps', {})]);\r\n          const endPropCfg = mergeProps(endObj, [end._origProps, _.get(propsToUse, 'endSymbol', {})]);\r\n          const endSltPropCfg = mergeProps(endObj, [end._origSelectedProps, _.get(propsToUse, 'endSymbol.selectedProps', {})]);\r\n\r\n          if (!_.isEmpty(startPropCfg) || !_.isEmpty(startSltPropCfg)) {\r\n            start.set(startPropCfg, start.selected, startSltPropCfg);\r\n          }\r\n\r\n          if (!_.isEmpty(endPropCfg) || !_.isEmpty(endSltPropCfg)) {\r\n            end.set(endPropCfg, end.selected, endSltPropCfg);\r\n          }\r\n\r\n          if (end === ongoingNode) {\r\n            this._flags[ongoingNodeId] = end;\r\n          }\r\n        }\r\n      }\r\n\r\n      ongoingNode._props.isOngoingNode = true;\r\n\r\n      if (isStandard || propsToUse.internalSymbols === true) {\r\n        _.forEach(route, ({ id }) => {\r\n          this._visible[id]\r\n          && !this._map.hasLayer(this._symbols[id])\r\n          && this._map.addLayer(this._symbols[id].layer);\r\n        });\r\n      } else if (isTrack) {\r\n        _.forEach(route, ({ id }) => {\r\n          if (id === start.id || id === end.id) {\r\n            this._visible[id]\r\n            && !this._map.hasLayer(this._symbols[id])\r\n            && this._map.addLayer(this._symbols[id].layer);\r\n          } else if (_.get(propsToUse, 'internalSymbols.enabled', true) === true) {\r\n            this._visible[id]\r\n            && !this._map.hasLayer(this._symbols[id])\r\n            && this._map.addLayer(this._symbols[id].layer);\r\n\r\n            if (id !== start.id || id !== end.id) {\r\n              const internalProps = _.get(propsToUse, 'internalSymbols.props', {});\r\n              const internalSltProps = _.get(propsToUse, 'internalSymbols.selectedProps', {});\r\n\r\n              const origProps = _.cloneDeep(this._symbols[id]._origProps);\r\n              const origSelectedProps = _.cloneDeep(this._symbols[id]._origSelectedProps);\r\n\r\n              const internal = _.merge({}, origProps, internalProps);\r\n              const selectedInternal = _.merge({}, origSelectedProps, internalSltProps);\r\n\r\n              this._symbols[id].set(internal, this._symbols[id].selected, selectedInternal);\r\n            }\r\n          }\r\n          // If internalSymbols is false, hide all internal symbols\r\n          else if (propsToUse.internalSymbols === false) {\r\n            this._map.hasLayer(this._symbols[id])\r\n            && this._map.removeLayer(this._symbols[id].layer);\r\n          }\r\n        });\r\n      }\r\n\r\n      // Add the extra point to the end\r\n      if (this._layout === LAYOUT.TRACK && hasOngoingNode && this._flags[ongoingNodeId]) {\r\n        ongoingNode.layer.addTo(this._flagGroup);\r\n      }\r\n    }\r\n  });\r\n\r\n  this._tracks = tracks;\r\n}\r\n\r\n/**\r\n * Render contour.\r\n *\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md#contour-options\r\n *\r\n * @param {Object} [opts]                                                               Contour options. If undefined, apply the original options. For more info, see the link above.\r\n * @param {String | String[] | Object | Function | undefined | null} [filter=undefined] Filter to convert matched symbols to contour. If it's a String or String[], converts symbols by ids; if it's a Object, converts symbols by all the attributes in symbols; if it's a Function, converts symbols by the given callback(Symbol symbol, String id, Object gis._symbols)\r\n *\r\n */\r\nexport function renderContour(opts, filter = undefined) {\r\n  if (this._contour && this._map.hasLayer(this._contour)) {\r\n    this._map.removeLayer(this._contour);\r\n  }\r\n\r\n  /* Only visible markers can be transferred to contours */\r\n  const markers = _(getSymbol.call(this, filter))\r\n    .filter((el) => {\r\n      return _.includes([SYMBOL_TYPE.MARKER, SYMBOL_TYPE.SPOT], el.type) && this._visible[el.id];\r\n    })\r\n    .map(({ props }) => { return { lat: props.latlng[0], lng: props.latlng[1] }; })\r\n    .value();\r\n\r\n  const options = { ...this._contourOptions, ...opts };\r\n  const { boundSW, boundNE } = options;\r\n\r\n  // TODO: how to handle the oversize?\r\n  /* size = [width, height] */\r\n  const size = [\r\n    convertLatlngToMeters([boundSW.lat, boundSW.lng], [boundSW.lat, boundNE.lng]) / FACTOR,\r\n    convertLatlngToMeters([boundSW.lat, boundSW.lng], [boundNE.lat, boundSW.lng]) / FACTOR\r\n  ];\r\n\r\n  const result = contourDensity()\r\n    .x((d) => {\r\n      return convertLatlngToMeters([boundSW.lat, d.lng], [d.lat, d.lng]) / FACTOR;\r\n    })\r\n    .y((d) => {\r\n      return convertLatlngToMeters([d.lat, boundSW.lng], [d.lat, d.lng]) / FACTOR;\r\n    })\r\n    .thresholds(options.thresholds) // default is 20?\r\n    .cellSize(options.cellSize) // default is 4\r\n    .bandwidth(options.bandwidth)  // default is 20.4939...\r\n    .size(size)(markers);\r\n\r\n  const min = result.length ? result[0].value : Infinity;\r\n  const max = result.length ? _.last(result).value : 0;\r\n\r\n  const flattened = _.reduce(result, (acc, item) => {\r\n    const color = _.find(options.colors, (el, key) => ((item.value - min) / (max - min)) <= _.toNumber(key))\r\n           || DEFAULT_CONTOUR_STYLE.colors['0.00'];\r\n\r\n    return [\r\n      ...acc,\r\n      ..._.map(item.coordinates, (c) => {\r\n        return {\r\n          color,\r\n          coords: c[0]\r\n        };\r\n      })\r\n    ];\r\n  }, []);\r\n\r\n  const contour = L.layerGroup([]);\r\n\r\n  _.forEach(flattened, ({ color, coords: f }) => {\r\n    const latlngs = _.map(f, (coords) => {\r\n      return convertMetersToLatLng([boundSW.lat, boundSW.lng], coords[0] * FACTOR, coords[1] * FACTOR);\r\n    });\r\n\r\n    const polyline = L.polyline(latlngs, {\r\n      color,\r\n      fill: false,\r\n      weight: 2,\r\n      interactive: false\r\n    });\r\n\r\n    contour.addLayer(polyline);\r\n  });\r\n\r\n  if (this._layout === LAYOUT.CONTOUR) {\r\n    this._map.addLayer(contour);\r\n  }\r\n\r\n  this._contour = contour;\r\n}\r\n\r\n/**\r\n * Render leaflet pane.\r\n *\r\n * @param {String | String[]} pane  The names of map panes to create.\r\n *\r\n */\r\nexport function renderPane(pane) {\r\n  const map = this._map;\r\n\r\n  if (_.isString(pane)) {\r\n    map.createPane(pane);\r\n  } else if (isValidArgType(pane, [['string']])) {\r\n    _.forEach(pane, (el) => {\r\n      map.createPane(el);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Render overlays.\r\n *\r\n * @param {String | Object | Object[]} overlay                      Overlay image url or options.\r\n * @param {String}                     [overlay.id]                 Overlay id. If undefined, a random id will be generated.\r\n * @param {String}                     overlay.url                  Overlay image url.\r\n * @param {Object}                     [overlay.size]               The size of the overlay. Default is the image's natural size.\r\n * @param {Number}                     overlay.size.width           The x units of the overlay.\r\n * @param {Number}                     overlay.size.height          The y units of the overlay.\r\n * @param {Object}                     [overlay.xy]                 The position of the overlay. Default is the bottom-left of the map.\r\n * @param {Number}                     overlay.xy.x                 The start x coordinate of the overlay.\r\n * @param {Number}                     overlay.xy.y                 The start y coordinate of the overlay.\r\n * @param {Number}                     [overlay.opacity=1.0]        Overlay opacity.\r\n * @param {Boolean}                    [resetMaxBounds=false]       Reset the map max bounds after setting the overlay.\r\n * @param {Boolean}                    [resetZoom=false]            Reset the map zoom level after setting the overlay.\r\n *\r\n */\r\nexport function renderOverlay(overlay, resetMaxBounds = false, resetZoom = false) {\r\n  const map = this._map;\r\n  const mapZoom = map.getZoom();\r\n  const maxBounds = map.getBounds();\r\n  const overlays = _.isString(overlay)\r\n    ? [{ url: overlay }]\r\n    : _.isPlainObject(overlay) ? [overlay] : overlay;\r\n\r\n  _.forEach(overlays, (ol) => {\r\n    if (!ol.url) {\r\n      return;\r\n    }\r\n\r\n    // If overlay is a url string, set the overlay Id as random Id\r\n    const id = ol.id || Math.random().toString(36).replace(/[^a-z]+/g, '').substr(1, 6);\r\n    const layer = L.imageOverlay(ol.url, [[0, 0], [0, 0]]).addTo(map);\r\n    const xy = _.get(ol, 'xy', { x: maxBounds._southWest.lng, y: maxBounds._southWest.lat });\r\n    let { size } = ol;\r\n\r\n    // Set the size as natural size if not specified\r\n    if (!size) {\r\n      const image = new Image();\r\n      image.src = ol.url;\r\n      image.addEventListener('load', () => {\r\n        size = {\r\n          width: image.naturalWidth,\r\n          height: image.naturalHeight\r\n        };\r\n\r\n        const bounds = L.latLngBounds(\r\n          L.latLng(xy.y, xy.x),\r\n          L.latLng(xy.y + size.height, xy.x + size.width)\r\n        );\r\n\r\n        layer.setBounds(bounds);\r\n        this._overlays[id] = {\r\n          url: ol.url,\r\n          zoom: ol.zoom || null,\r\n          opacity: !_.isNil(ol.opacity) ? ol.opacity : 1,\r\n          id,\r\n          xy,\r\n          size,\r\n          layer\r\n        };\r\n      });\r\n    } else {\r\n      const bounds = L.latLngBounds(\r\n        L.latLng(xy.y, xy.x),\r\n        L.latLng(xy.y + size.height, xy.x + size.width)\r\n      );\r\n\r\n      layer.setBounds(bounds);\r\n\r\n      this._overlays[id] = {\r\n        url: ol.url,\r\n        zoom: ol.zoom || null,\r\n        opacity: !_.isNil(ol.opacity) ? ol.opacity : 1,\r\n        id,\r\n        xy,\r\n        size,\r\n        layer\r\n      };\r\n    }\r\n\r\n    !_.isNil(ol.opacity) && layer.setOpacity(ol.opacity);\r\n    if (!_.isNil(ol.zoom) && ol.zoom > mapZoom && map.hasLayer(layer)) {\r\n      map.removeLayer(layer);\r\n    }\r\n  });\r\n\r\n  resetMaxBounds && _resetMapBounds.call(this, resetZoom);\r\n}\r\n\r\n/**\r\n * Re-renders the cluster nodes according to selected status.\r\n *\r\n */\r\nexport function renderSelectedCluster() {\r\n  if (this._layout !== LAYOUT.STANDARD || (_.isEmpty(this._gCluster) && _.isEmpty(this._clusters))) {\r\n    return;\r\n  }\r\n\r\n  _.forEach(this._clusterSymbols, (parent) => {\r\n    // For performance, filter visible clusters\r\n    const isVisibleParent = this._map.hasLayer(parent.layer);\r\n\r\n    if (isVisibleParent) {\r\n      // Change parents' selected status according to their chilldren selected status\r\n      const allChildren = parent.layer.getAllChildMarkers();\r\n      const isSelected = _.some(allChildren, lyr => this._selected[lyr._gis_id]);\r\n      parent.setSelected(isSelected);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Creates cluster layer group.\r\n *\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md#cluster-options\r\n *\r\n * @param {String} id           The cluster id.\r\n * @param {object} [options={}] The cluster options. For more info, see the link above.\r\n *\r\n */\r\nexport function renderCluster(id, options = {}) {\r\n  const map = this._map;\r\n  const clusterLayer = _.get(this._clusters, `${id}.layer`);\r\n  const globalCluster = _.get(this._gCluster, 'layer');\r\n\r\n  // If id is a Boolean, handle it as global cluster\r\n  const isGlobalCluster = id === true;\r\n\r\n  const clusterOpt = {\r\n    chunkedLoading: true,\r\n    showCoverageOnHover: false,\r\n    animate: true,\r\n    ..._.omit(options.props, 'symbol')\r\n  };\r\n\r\n  // markers or spots\r\n  let layers = [];\r\n  let cluster = {};\r\n\r\n  // Remove the original cluster layer. This is for reset\r\n  if (clusterLayer) {\r\n    layers = clusterLayer.getLayers();\r\n    map.hasLayer(clusterLayer) && map.removeLayer(clusterLayer);\r\n    delete this._clusters[id];\r\n  } else if (isGlobalCluster && globalCluster) {\r\n    layers = globalCluster.getLayers();\r\n    map.hasLayer(globalCluster) && map.removeLayer(globalCluster);\r\n    delete this._gCluster;\r\n  }\r\n\r\n  cluster = {\r\n    id,\r\n    layer: L.markerClusterGroup({\r\n      ...clusterOpt,\r\n      iconCreateFunction: clusterLyr => _createClusterIcon.call(this, id, options, clusterLyr)\r\n    }),\r\n    props: options.props\r\n  };\r\n\r\n  // Re-render the selected clusters' parents and children\r\n  cluster.layer.on('animationend', renderSelectedCluster.bind(this));\r\n\r\n  if (layers.length) {\r\n    cluster.layer.addLayers(layers);\r\n  }\r\n\r\n  // Only works in standard mode\r\n  if (this._layout === LAYOUT.STANDARD) {\r\n    map.addLayer(cluster.layer);\r\n  }\r\n\r\n  // Save the cluster as global cluster or not\r\n  if (isGlobalCluster) {\r\n    this._gCluster = cluster;\r\n  } else {\r\n    this._clusters[id] = cluster;\r\n  }\r\n}\r\n\r\n/**\r\n * Creates layer group.\r\n *\r\n * @param {String} id   The group id.\r\n *\r\n */\r\nexport function renderGroup(id) {\r\n  const map = this._map;\r\n  const group = _.get(this._groups, `${id}.layer`);\r\n  const children = _.get(this._groups, `${id}.children`, []);\r\n  let layers = [];\r\n\r\n  // Remove the original group for reset if necessary\r\n  if (group) {\r\n    layers = group.getLayers();\r\n    map.hasLayer(group) && map.removeLayer(group);\r\n    delete this._groups[id];\r\n  }\r\n\r\n  const layerGroup = L.layerGroup([]);\r\n  this._groups[id] = {\r\n    id,\r\n    children,\r\n    layer: layerGroup\r\n  };\r\n\r\n  if (layers.length) {\r\n    _.forEach(layers, (lyr) => {\r\n      layerGroup.addLayer(lyr);\r\n    });\r\n  }\r\n\r\n  // Group is only visible in standard/track\r\n  if (this._layout === LAYOUT.STANDARD || this._layout === LAYOUT.TRACK) {\r\n    map.addLayer(this._groups[id].layer);\r\n  }\r\n}\r\n\r\nexport default {\r\n  renderHeatmap,\r\n  renderTrack,\r\n  renderContour,\r\n  renderPane,\r\n  renderOverlay,\r\n  renderSelectedCluster,\r\n  renderCluster,\r\n  renderGroup\r\n};\r\n"],"file":"render-helper.js"}