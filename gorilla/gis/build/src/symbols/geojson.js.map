{"version":3,"sources":["../../../src/symbols/geojson.js"],"names":["log","require","getLogger","GeoJSON","id","props","selected","selectedProps","pointToLayer","feature","latlng","L","circleMarker","className","style","_getInitialStyle","bind","_layer","geoJSON","geojson","eachLayer","lyr","geometry","type","indexOf","_","forEach","getLayers","l","_gis_id","_id","GisSymbol"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,SAApB,CAA8B,qBAA9B,CAAV;AAEA;;;;;;;;;;;;;;;;;IAeMC,O;;;;;AACF,mBAAYC,EAAZ,EAAgBC,KAAhB,EAAuBC,QAAvB,EAAiCC,aAAjC,EAAgD;AAAA;;AAAA,6BACtCH,EADsC,EAClC,SADkC,EACvBC,KADuB,EAChBC,QADgB,EACNC,aADM,GAE5C;AACH;AAED;;;;;;;;;;;iCAOaF,K,EAAO;AAAA;;AAChB,UAAMG,YAAY,GAAG,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,MAA/B,EAAuC;AACxD,eAAOC,oBAAEC,YAAF,CAAeF,MAAf,EAAuB;AAACG,UAAAA,SAAS,EAAC;AAAX,SAAvB,CAAP;AACH,OAFD,CADgB,CAKhB;;;AACA,UAAMC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,eAAO,KAAKC,gBAAL,CAAsBV,KAAtB,CAAP;AACH,OAFa,CAEZW,IAFY,CAEP,IAFO,CAAd,CANgB,CAUhB;;;AACA,WAAKC,MAAL,GAAcN,oBAAEO,OAAF,CAAUb,KAAK,CAACc,OAAhB,EAAyB;AACnCX,QAAAA,YAAY,EAAZA,YADmC;AAEnCM,QAAAA,KAAK,EAALA;AAFmC,OAAzB,CAAd,CAXgB,CAgBhB;;AACA,WAAKG,MAAL,CAAYG,SAAZ,CAAsB,UAAAC,GAAG,EAAI;AACzB,YAAIA,GAAG,CAACZ,OAAJ,CAAYa,QAAZ,CAAqBC,IAArB,CAA0BC,OAA1B,CAAkC,YAAlC,IAAkD,CAAC,CAAvD,EAA0D;AACtDC,6BAAEC,OAAF,CAAUL,GAAG,CAACM,SAAJ,EAAV,EAA2B,UAAAC,CAAC,EAAI;AAC5BA,YAAAA,CAAC,CAACC,OAAF,GAAY,KAAI,CAACC,GAAjB;AACH,WAFD;AAGH,SAJD,MAKK;AACDT,UAAAA,GAAG,CAACQ,OAAJ,GAAc,KAAI,CAACC,GAAnB;AACH;AACJ,OATD;;AAWA,aAAO,KAAKb,MAAZ;AACH;;;;EA1CiBc,kB;;eA8CP5B,O","sourcesContent":["import _ from 'lodash'\r\nimport L from 'leaflet'\r\nimport GisSymbol from './symbol'\r\n\r\nlet log = require('loglevel').getLogger('gis/symbols/geojson')\r\n\r\n/**\r\n * A GeoJson symbol, inherits from class Symbol.\r\n * GeoJson symbol is a collection of features, e.g., marker, polygon, rectangle.\r\n * Each props will apply to all features in this collection.\r\n *\r\n * @see     Symbol\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/symbol.md\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/geojson.md\r\n *\r\n * @class\r\n * @param {String}  id              The geojson symbol id.\r\n * @param {Object}  props           The properties of the geojson.\r\n * @param {Boolean} selected        The selected status.\r\n * @param {Boolean} selectedProps   Properties will apply when symbol is selected.\r\n */\r\nclass GeoJSON extends GisSymbol {\r\n    constructor(id, props, selected, selectedProps) {\r\n        super(id, 'geojson', props, selected, selectedProps)\r\n        // supported props other than leaflet options: tooltip, popup, latlng, label, icon\r\n    }\r\n\r\n    /*\r\n     * Creates the leaflet geojson instance.\r\n     *\r\n     * @param {Object} props       The geojson props.\r\n     *\r\n     * @return {L.GeoJson}         The created leaflet geojson instance.\r\n     */\r\n    _createLayer(props) {\r\n        const pointToLayer = function pointToLayer(feature, latlng) {\r\n            return L.circleMarker(latlng, {className:'gis-point'})\r\n        }\r\n\r\n        // Fix issue #30\r\n        const style = function style() {\r\n            return this._getInitialStyle(props)\r\n        }.bind(this)\r\n\r\n        // Set the default geojson point as a small steelblue circle\r\n        this._layer = L.geoJSON(props.geojson, {\r\n            pointToLayer,\r\n            style\r\n        })\r\n\r\n        // Make the _eventCore can catch the symbol id\r\n        this._layer.eachLayer(lyr => {\r\n            if (lyr.feature.geometry.type.indexOf('Collection') > -1) {\r\n                _.forEach(lyr.getLayers(), l => {\r\n                    l._gis_id = this._id\r\n                })\r\n            }\r\n            else {\r\n                lyr._gis_id = this._id\r\n            }\r\n        })\r\n\r\n        return this._layer\r\n    }\r\n}\r\n\r\n\r\nexport default GeoJSON"],"file":"geojson.js"}