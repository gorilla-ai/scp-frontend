{"version":3,"sources":["../../../src/symbols/circle.js"],"names":["log","require","getLogger","Circle","id","props","selected","selectedProps","degree","angle","_convertToPositiveAngle","_layer","setStartAngle","setStopAngle","direction","size","setDirection","initProps","pick","STYLE_DICT","set","radius","startAngle","stopAngle","omit","_","isNil","value","_correctAngleProps","options","_getInitialStyle","L","semiCircle","latlng","prevProps","nextProps","fixNextProps","style","isEqual","setLatLng","isEmpty","setStyle","setRadius","_props","tooltip","_updateInfo","INFO_TYPE","TOOLTIP","merge","popup","POPUP","isNumber","im","GisSymbol"],"mappings":"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","sourcesContent":["import _ from 'lodash'\r\nimport L from 'leaflet'\r\nimport 'leaflet-semicircle'\r\nimport * as im from 'object-path-immutable'\r\n\r\nimport GisSymbol from './symbol'\r\nimport {INFO_TYPE, STYLE_DICT} from '../consts/dictionary'\r\n\r\nlet log = require('loglevel').getLogger('gis/symbols/circle')\r\n\r\n/**\r\n * A Circle symbol, inherits from class Symbol.\r\n *\r\n * @see     Symbol\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/symbol.md\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/circle.md\r\n *\r\n * @class\r\n * @param {String}  id              The circle symbol id.\r\n * @param {Object}  props           The properties of the circle.\r\n * @param {Boolean} selected        The selected status.\r\n * @param {Boolean} selectedProps   Properties will apply when symbol is selected.\r\n */\r\nclass Circle extends GisSymbol {\r\n    constructor(id, props, selected, selectedProps) {\r\n        super(id, 'circle', props, selected, selectedProps)\r\n        // supported props other than leaflet options: tooltip, popup, latlng\r\n    }\r\n\r\n    /*\r\n     * Sets the start angle for circle.\r\n     * This can change the shape to semi or full circle.\r\n     * Notice that this only changes the leaflet layer; symbol props will be unchanged.\r\n     *\r\n     * @param {Number} degree   The start angle in degree\r\n     *\r\n     * @return {this}\r\n     */\r\n    setStartAngle(degree) {\r\n        const angle = this._convertToPositiveAngle(degree)\r\n        this._layer.setStartAngle(angle)\r\n        return this\r\n    }\r\n\r\n    /*\r\n     * Sets the stop angle for circle.\r\n     * This can change the shape to semi or full circle.\r\n     * Notice that this only changes the leaflet layer; symbol props will be unchanged.\r\n     *\r\n     * @param {Number} degree   The stop angle in degree\r\n     *\r\n     * @return {this}\r\n     */\r\n    setStopAngle(degree) {\r\n        const angle = this._convertToPositiveAngle(degree)\r\n        this._layer.setStopAngle(angle)\r\n        return this\r\n    }\r\n\r\n    /*\r\n     * Sets the startAngle to (direction - (0.5*size)) and the stopAngle to (direction + (0.5*size)).\r\n     * Notice that this only changes the leaflet layer; symbol props will be unchanged.\r\n     *\r\n     * @param {Number} direction   The intermediate angle in degree between start and stop angle.\r\n     * @param {Number} size        The angle in degree of the fan will be.\r\n     *\r\n     * @return {this}\r\n     */\r\n    setDirection(direction, size) {\r\n        this._layer.setDirection(direction, size)\r\n        return this\r\n    }\r\n\r\n    /*\r\n     * Filters the circle props.\r\n     *\r\n     * @param {Object} initProps   The input props.\r\n     *\r\n     * @return {Object}            The filtered props of circle.\r\n     */\r\n    _getInitialStyle(initProps) {\r\n        return _(initProps)\r\n            .pick(STYLE_DICT)\r\n            .set('radius', initProps.radius)\r\n            .set('startAngle', initProps.startAngle)\r\n            .set('stopAngle', initProps.stopAngle)\r\n            .omit(_.isNil)\r\n            .value()\r\n    }\r\n\r\n    /*\r\n     * Creates the leaflet circle instance.\r\n     *\r\n     * @param {Object} props       The circle props.\r\n     *\r\n     * @return {L.Circle}          The created leaflet circle instance.\r\n     */\r\n    _createLayer(props) {\r\n        // Correct the angles\r\n        const initProps = this._correctAngleProps(props)\r\n        const options = this._getInitialStyle(initProps)\r\n\r\n        this._layer = L.semiCircle(initProps.latlng, options)\r\n        return this._layer\r\n    }\r\n\r\n    /*\r\n     * Updates the leaflet circle instance.\r\n     *\r\n     * @param {Object} prevProps   The original props.\r\n     * @param {Object} nextProps   The new props to apply.\r\n     *\r\n     * @return {L.Circle}          The updated leaflet circle instance.\r\n     */\r\n    _updateLayer(prevProps, nextProps) {\r\n        // Correct the angles\r\n        const fixNextProps = this._correctAngleProps(nextProps)\r\n\r\n        // Props like radius, tooltip, popup, and label, can't be set by setStyle\r\n        const style = _.pick(fixNextProps, STYLE_DICT)\r\n\r\n        // Set the location\r\n        if (fixNextProps.latlng && !_.isEqual(prevProps.latlng, fixNextProps.latlng)) {\r\n            this._layer.setLatLng(fixNextProps.latlng)\r\n        }\r\n\r\n        if (!_.isEmpty(style)) {\r\n            this._layer.setStyle(style)\r\n        }\r\n\r\n        // Set circle radius\r\n        if (!_.isNil(fixNextProps.radius)) {\r\n            this._layer.setRadius(fixNextProps.radius)\r\n        }\r\n\r\n        // Set circle angle\r\n        if (!_.isNil(fixNextProps.startAngle)) {\r\n            this._layer.setStartAngle(fixNextProps.startAngle)\r\n        }\r\n\r\n        if (!_.isNil(fixNextProps.stopAngle)) {\r\n            this._layer.setStopAngle(fixNextProps.stopAngle)\r\n        }\r\n\r\n        // Set tooltip\r\n        if (!_.isNil(this._props.tooltip) && !_.isNil(fixNextProps.tooltip)) {\r\n            this._updateInfo(INFO_TYPE.TOOLTIP, _.merge({}, this._props.tooltip, nextProps.tooltip))\r\n        }\r\n\r\n        // Set popup\r\n        if (!_.isNil(this._props.popup) && !_.isNil(fixNextProps.popup)) {\r\n            this._updateInfo(INFO_TYPE.POPUP, _.merge({}, this._props.popup, nextProps.popup))\r\n        }\r\n\r\n        return this._layer\r\n    }\r\n\r\n    /*\r\n     * Normalizes the input angle within [0, 360].\r\n     *\r\n     * @param {Number} degree   The angle in degree.\r\n     *\r\n     * @return {Number}         The normalized angle in degree.\r\n     */\r\n    _convertToPositiveAngle(degree) {\r\n        const angle = (degree % 360 < 0) ? (degree % 360) + 360 : degree % 360\r\n        return angle\r\n    }\r\n\r\n    /*\r\n     * Normalizes the start and stop angle within [0, 360] if circle props contains one of them.\r\n     *\r\n     * @param {Object} props   The circle props.\r\n     *\r\n     * @return {Object}        The circle props with normalized start & stop angles.\r\n     */\r\n    _correctAngleProps(props) {\r\n        if (!_.isNil(props.startAngle) && _.isNumber(props.startAngle)) {\r\n            props = im.set(props, 'startAngle', this._convertToPositiveAngle(props.startAngle))\r\n        }\r\n\r\n        if (!_.isNil(props.stopAngle) && _.isNumber(props.stopAngle)) {\r\n            props = im.set(props, 'stopAngle', this._convertToPositiveAngle(props.stopAngle))\r\n        }\r\n\r\n        return props\r\n    }\r\n}\r\n\r\n\r\nexport default Circle"],"file":"circle.js"}