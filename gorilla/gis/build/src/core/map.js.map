{"version":3,"sources":["../../../src/core/map.js"],"names":["log","require","getLogger","_setLayout","layout","map","_map","symbols","_symbols","visible","_visible","currLayout","_layout","heatmap","_heatmap","contour","_contour","isValidLayout","_","includes","LAYOUT","STANDARD","TRACK","forEach","id","layer","removeLayer","_groups","el","_clusters","_gCluster","_flagGroup","clearLayers","HEATMAP","CONTOUR","addLayer","symbol","props","selectedProps","type","_origProps","_origSelectedProps","cluster","isPoint","SYMBOL_TYPE","MARKER","SPOT","isClustered","isSimpleType","EXTRA_SYMBOL_TYPE","isFlagMode","isEqual","set","selected","hasLayer","sh","updateClusterSymbol","call","rh","renderHeatmap","addTo","renderTrack","renderContour","warn","ERROR","INVALID_TYPE","values","_setRegionType","regionType","circleSelector","disable","rectangleSelector","isValidType","REGION_TYPE","toUpper","_regionType","_dragMode","DRAG_MODE","REGION","enable","_setDrawType","drawType","drawConfig","DRAW_TYPE","editableIds","getSymbol","get","shouldAddToDrawn","CLUSTER","GEOJSON","isArray","_editableIds","reduce","acc","isString","shouldEnanble","DRAW","_drawType","drawMode","enabled","setDrawType","_setDragMode","dragMode","featureType","isValidMode","RECTANGLE","PAN","dragging","measureMode","MEASURE","_setMaxBounds","corner1","corner2","fitBounds","crs","options","isEPSG3857","L","CRS","EPSG3857","project","latLngToLayerPoint","bind","projection","isValid","dh","isValidArgType","isNumber","lat","lng","c1","pick","c2","c1LatLng","latLng","c2LatLng","p1","p2","bounds","Simple","y","x","latLngBounds","setMaxBounds","mapZoom","getZoom","_overlays","zoom","INVALID_ARGS","_setGisInterval","term","length","_interval","_zoomToFit","filter","fitSymbols","clusterLayer","centerOfSymbols","isLine","POLYLINE","isCircle","CIRCLE","Polyline","getBounds","featureGroup","eachLayer","lyr","_latlng","getLatLng","_clear","group","setData","data","_tracks","_clusterSymbols","_selected","_flags"],"mappings":"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","sourcesContent":["/**\r\n * Map related functions.\r\n *\r\n * @file   This file is the collection of map-related, or global operation functions.\r\n * @author Liszt\r\n */\r\n\r\nimport _ from 'lodash'\r\nimport L from 'leaflet'\r\n\r\nimport {GIS_ERROR as ERROR} from '../utils/gis-exception'\r\nimport dh from '../utils/data-helper'\r\nimport rh from '../utils/render-helper'\r\nimport sh from '../utils/symbol-helper'\r\nimport {\r\n    LAYOUT, DRAG_MODE, REGION_TYPE,\r\n    DRAW_TYPE, SYMBOL_TYPE, EXTRA_SYMBOL_TYPE\r\n} from '../consts/dictionary'\r\n\r\nlet log = require('loglevel').getLogger('gis/core/map')\r\n\r\n\r\n/**\r\n * Changes map's layout.\r\n * It will remove all layer on the map first, and add back according to new setting.\r\n *\r\n * In branch 'develop_mix-layer', add a parameter 'filter' which can change part of the symbols to target layout.\r\n * Moreover, the behavior in this function also changes. All the layer out will repaint instead of adding the layer back.\r\n *\r\n * @param   {String}  layout    Map's layout, which can be standard, heatmap, track, or contour.\r\n *\r\n */\r\nexport function _setLayout(layout) {\r\n    const map = this._map\r\n    const symbols = this._symbols\r\n    const visible = this._visible\r\n    const currLayout = this._layout\r\n\r\n    let heatmap = this._heatmap // heatmap is a leaflet Layer\r\n    // let tracks = this._tracks   // tracks is an array of tracks' Ids\r\n    let contour = this._contour // contour is a L.LayerGroup instance\r\n\r\n    // Check if the layout is valid\r\n    const isValidLayout = _.includes(LAYOUT, layout)\r\n\r\n    if (isValidLayout && layout !== currLayout) {\r\n        // Clear current layout\r\n        if ((currLayout === LAYOUT.STANDARD) || (currLayout === LAYOUT.TRACK)) {\r\n            _.forEach(symbols, ({id, layer}) => {\r\n                visible[id] && map.removeLayer(layer)\r\n            })\r\n\r\n            _.forEach(this._groups, el => {\r\n                map.removeLayer(el.layer)\r\n            })\r\n\r\n            if (currLayout === LAYOUT.STANDARD) {\r\n                _.forEach(this._clusters, el => {\r\n                    map.removeLayer(el.layer)\r\n                })\r\n\r\n                if (this._gCluster) {\r\n                    map.removeLayer(this._gCluster.layer)\r\n                }\r\n            }\r\n            else {\r\n                this._flagGroup.clearLayers()\r\n            }\r\n        }\r\n        else if (currLayout === LAYOUT.HEATMAP && heatmap) {\r\n            map.removeLayer(heatmap)\r\n        }\r\n        else if (currLayout === LAYOUT.CONTOUR && contour) {\r\n            map.removeLayer(contour)\r\n        }\r\n\r\n        // Set new layout\r\n        this._layout = layout\r\n        if (layout === LAYOUT.STANDARD) {\r\n            // Cluster only works in standard mode\r\n            if (this._gCluster) {\r\n                map.addLayer(this._gCluster.layer)\r\n            }\r\n\r\n            _.forEach(this._clusters, el => {\r\n                map.addLayer(el.layer)\r\n            })\r\n\r\n            _.forEach(this._groups, el => {\r\n                map.addLayer(el.layer)\r\n            })\r\n\r\n            _.forEach(symbols, symbol => {\r\n                const {id, props, selectedProps, layer, type, _origProps, _origSelectedProps} = symbol\r\n                const cluster = props.cluster\r\n\r\n                const isPoint = type === SYMBOL_TYPE.MARKER || type === SYMBOL_TYPE.SPOT\r\n                const isClustered = isPoint && cluster && visible[id]\r\n                const isSimpleType = type !== EXTRA_SYMBOL_TYPE.TRACK\r\n                const isFlagMode = isPoint &&\r\n                                (!_.isEqual(props, _origProps) || !_.isEqual(selectedProps, _origSelectedProps))\r\n\r\n                if (isFlagMode) {\r\n                    symbol.set(_origProps, symbol.selected, _origSelectedProps)\r\n                }\r\n\r\n                if (isClustered && cluster === true) {\r\n                    !this._gCluster.layer.hasLayer(layer) &&\r\n                    this._gCluster.layer.addLayer(layer)\r\n                }\r\n                else if (isClustered) {\r\n                    !this._clusters[cluster].layer.hasLayer(layer) &&\r\n                    this._clusters[cluster].layer.addLayer(layer)\r\n                }\r\n                else if (visible[id] && isSimpleType) {\r\n                    !map.hasLayer(layer) && map.addLayer(layer)\r\n                }\r\n            })\r\n\r\n            sh.updateClusterSymbol.call(this)\r\n        }\r\n        else if (layout === LAYOUT.HEATMAP) {\r\n            if (!heatmap) {\r\n                rh.renderHeatmap.call(this)\r\n                heatmap = this._heatmap\r\n            }\r\n            else {\r\n                heatmap.addTo(map)\r\n            }\r\n        }\r\n        else if (layout === LAYOUT.TRACK) {\r\n            // (!tracks || (tracks && tracks.length === 0)) && rh.renderTrack.call(this)\r\n\r\n            // _.forEach(symbols, ({id, type, props:{track}, layer}) => {\r\n            //     const isOnTrack = visible[id] && track\r\n            //     const isTrack = visible[id] && type === EXTRA_SYMBOL_TYPE.TRACK\r\n\r\n            //     if (isOnTrack || isTrack) {\r\n            //         !map.hasLayer(layer) && map.addLayer(layer)\r\n            //     }\r\n            // })\r\n\r\n            rh.renderTrack.call(this)\r\n        }\r\n        else if (layout === LAYOUT.CONTOUR) {\r\n            if (!contour) {\r\n                rh.renderContour.call(this)\r\n                contour = this._contour\r\n            }\r\n            else {\r\n                contour.addTo(map)\r\n            }\r\n        }\r\n    }\r\n    else if (!isValidLayout) {\r\n        log.warn(ERROR.INVALID_TYPE, layout, `Please set a valid layout type: ${_.values(LAYOUT)}`)\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the region selection type, which can be circle or rectangle.\r\n *\r\n * @see     setRegionType in GIS document.\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md#methods\r\n *\r\n * @param   {String}  regionType    Region-selection type, which can be circle or rectangle.\r\n */\r\nexport function _setRegionType(regionType) {\r\n    this._map.circleSelector.disable()\r\n    this._map.rectangleSelector.disable()\r\n\r\n    const isValidType = !!REGION_TYPE[_.toUpper(regionType)]\r\n    if (isValidType) {\r\n        this._regionType = regionType\r\n        if (this._dragMode === DRAG_MODE.REGION) {\r\n            this._map[`${regionType}Selector`].enable()\r\n        }\r\n    }\r\n    else {\r\n        log.warn(ERROR.INVALID_TYPE, regionType, `Please set a valid region type: ${_.values(REGION_TYPE)}`)\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the draw type and draw config.\r\n *\r\n * @see     setDrawType in GIS document.\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md#methods\r\n *\r\n * @param   {String}  drawType      Map drag mode, it can be pan, region, measure, or draw.\r\n * @param   {Object} [drawConfig]   Draw configs. It contains key \"editableIds\", which makes symbols editable (all symbols are editable by default). See setDrawType() in GIS document.\r\n */\r\nexport function _setDrawType(drawType, drawConfig={}) {\r\n    const isValidType = _.includes(DRAW_TYPE, drawType)\r\n    const editableIds = _.map(sh.getSymbol.call(this, _.get(drawConfig, 'editableIds')), 'id')\r\n\r\n    const shouldAddToDrawn = symbol => {\r\n        return symbol &&\r\n            symbol.type !== EXTRA_SYMBOL_TYPE.TRACK &&\r\n            symbol.type !== EXTRA_SYMBOL_TYPE.CLUSTER &&\r\n            symbol.type !== SYMBOL_TYPE.GEOJSON\r\n    }\r\n\r\n    if (editableIds) {\r\n        if (_.isArray(editableIds)) {\r\n            this._editableIds = _.reduce(editableIds, (acc, el) => {\r\n                if (shouldAddToDrawn(this._symbols[el])) {\r\n                    acc[el] = true\r\n                }\r\n\r\n                return acc\r\n            }, {})\r\n        }\r\n        else if (_.isString(editableIds)) {\r\n            if (shouldAddToDrawn(this._symbols[editableIds])) {\r\n                this._editableIds = {[editableIds]:true}\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        this._editableIds = _.reduce(this._symbols, (acc, el) => {\r\n            if (shouldAddToDrawn(this._symbols[el])) {\r\n                acc[el.id] = true\r\n            }\r\n\r\n            return acc\r\n        }, {})\r\n    }\r\n\r\n    if (isValidType) {\r\n        const shouldEnanble = this._dragMode === DRAG_MODE.DRAW &&\r\n                            (this._layout === LAYOUT.STANDARD || this._layout === LAYOUT.TRACK)\r\n\r\n        this._drawType = drawType\r\n\r\n        if (shouldEnanble && !this._map.drawMode.enabled()) {\r\n            this._map.drawMode.enable()\r\n        }\r\n        else if (shouldEnanble && this._map.drawMode.enabled()) {\r\n            this._map.drawMode.setDrawType(drawType)\r\n        }\r\n    }\r\n    else {\r\n        log.warn(ERROR.INVALID_TYPE, drawType, `Please set a valid draw type: ${_.values(DRAW_TYPE)}`)\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the drag mode.\r\n *\r\n * @see     _setRegionType above\r\n * @see     _setDrawType above\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md#methods\r\n *\r\n * @param   {String}  dragMode      Map drag mode, it can be pan, region, measure, or draw.\r\n * @param   {String}  featureType   For region and draw. Decides what handler to use, .e.g, circle or rectangle selection.\r\n * @param   {Object} [drawConfig]   Draw configs. See setDrawType() in GIS document.\r\n */\r\nexport function _setDragMode(dragMode, featureType, drawConfig={}) {\r\n    const isValidMode = _.includes(DRAG_MODE, dragMode)\r\n\r\n    if (isValidMode) {\r\n        this._dragMode = dragMode\r\n    }\r\n    else {\r\n        log.warn(ERROR.INVALID_TYPE, dragMode, `Please set a valid drag mode: ${_.values(DRAG_MODE)}`)\r\n        return\r\n    }\r\n\r\n    if (dragMode === DRAG_MODE.REGION) {\r\n        _setRegionType.call(\r\n            this,\r\n            featureType ||\r\n            this._regionType ||\r\n            REGION_TYPE.RECTANGLE\r\n        )\r\n    }\r\n    else if (dragMode === DRAG_MODE.DRAW) {\r\n        _setDrawType.call(\r\n            this,\r\n            featureType ||\r\n            this._drawType ||\r\n            DRAW_TYPE.MARKER,\r\n            drawConfig\r\n        )\r\n    }\r\n    else {\r\n        if (dragMode === DRAG_MODE.PAN) {\r\n            this._map.dragging.enable()\r\n            this._map.measureMode.disable()\r\n            this._map.drawMode.disable()\r\n        }\r\n        else if (dragMode === DRAG_MODE.MEASURE) {\r\n            this._map.measureMode.enable()\r\n        }\r\n\r\n        this._map.circleSelector.disable()\r\n        this._map.rectangleSelector.disable()\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the max-bound of map.\r\n * The corner coordinates depend on the map CRS, i.e., set the corner according to current CRS.\r\n *\r\n * @param   {Object}  corner1               The south-west point of the map, formatter as {lat, lng}.\r\n * @param   {Object}  corner2               The north-east point of the map, formatter as {lat, lng}.\r\n * @param   {Boolean} [fitBounds=false]     Reset the map view to fit the max bounds or not.\r\n */\r\nexport function _setMaxBounds(corner1, corner2, fitBounds=false) {\r\n    const map = this._map\r\n    const crs = map.options.crs\r\n    const isEPSG3857 = crs === L.CRS.EPSG3857\r\n\r\n    const project = isEPSG3857 ?\r\n                    map.latLngToLayerPoint.bind(map) :\r\n                    crs.projection.project.bind(crs.projection)\r\n\r\n    // const unproject = isEPSG3857\r\n    //                 ? map.layerPointToLatLng.bind(map)\r\n    //                 : crs.projection.unproject.bind(crs.projection)\r\n\r\n    const isValid = dh.isValidArgType(corner1, 'plainObject') &&\r\n                     _.isNumber(corner1.lat) &&\r\n                     _.isNumber(corner1.lng) &&\r\n                    dh.isValidArgType(corner2, 'plainObject') &&\r\n                     _.isNumber(corner2.lat) &&\r\n                     _.isNumber(corner2.lng)\r\n\r\n    if (isValid) {\r\n        const c1 = _.pick(corner1, ['lat', 'lng'])\r\n        const c2 = _.pick(corner2, ['lat', 'lng'])\r\n\r\n        const c1LatLng = L.latLng(c1)\r\n        const c2LatLng = L.latLng(c2)\r\n\r\n        const p1 = project(c1LatLng)\r\n        const p2 = project(c2LatLng)\r\n\r\n        const bounds = crs === L.CRS.Simple ?\r\n                    [[p1.y, p1.x], [p2.y, p2.x]] :\r\n                    L.latLngBounds(c1LatLng, c2LatLng)\r\n\r\n        map.setMaxBounds(bounds)\r\n\r\n        if (fitBounds) {\r\n            map.fitBounds(bounds)\r\n            const mapZoom = map.getZoom()\r\n\r\n            _.forEach(this._overlays, ({layer, zoom}) => {\r\n                if (_.isNumber(zoom) && zoom > mapZoom && map.hasLayer(layer)) {\r\n                    map.removeLayer(layer)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    else {\r\n        log.warn(\r\n            ERROR.INVALID_ARGS,\r\n            {corner1, corner2},\r\n            'Please input valid arguments (corner1={lat=Number, lng=Number}, corner2={lat=Number, lng=Number})'\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the GIS interval.\r\n *\r\n * @param   {Number}  term     The GIS interval, formatted as [start timestamp, end timestamp]\r\n */\r\nexport function _setGisInterval(term) {\r\n    const isValid = (_.isArray(term) && term.length === 0) ||\r\n                    (dh.isValidArgType(term, [['number']]) && term.length === 2 && term[0] <= term[1])\r\n\r\n    if (isValid) {\r\n        this._interval = term\r\n    }\r\n    else {\r\n        log.warn(ERROR.INVALID_ARGS, term, 'Please input valid interval: [Int start, Int end], or []')\r\n        this._interval = this._interval\r\n    }\r\n}\r\n\r\n/**\r\n * Moves and zooms the map view to the region of symbols matching the filter.\r\n * If no symbol matches, won't move the map view.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of symbols within the view. If it's a String or String[], finds symbols by ids; if it's a Object, searches symbols by all the props; if it's a Function, gets symbols by the given callback(Symbol symbol, String id, Object gis._symbols)\r\n */\r\nexport function _zoomToFit(filter) {\r\n    const map = this._map\r\n\r\n    // Only zoom to the symbols whch exist on the map or visible cluster\r\n    const fitSymbols = _.filter(sh.getSymbol.call(this, filter), ({id, layer, props}) => {\r\n        // Heatmap & contour has no symbol layer on map, so filter by visible\r\n        if (this._layout === LAYOUT.HEATMAP || this._layout === LAYOUT.CONTOUR) {\r\n            return this._visible[id]\r\n        }\r\n\r\n        const cluster = props.cluster\r\n        const clusterLayer = cluster === true ?\r\n                            _.get(this._gCluster, 'layer') :\r\n                            _.get(this._clusters, `${cluster}.layer`)\r\n\r\n        return map.hasLayer(layer) || (clusterLayer && map.hasLayer(clusterLayer))\r\n    })\r\n\r\n    if (!fitSymbols.length) {\r\n        return\r\n    }\r\n\r\n    // When only a non-marker symbol is selected, pan to fit the symbol's bound\r\n    const centerOfSymbols = _.map(fitSymbols, symbol => {\r\n        // Polyline need to handle because pattern in directed polyline has no getLatLng()\r\n        const isLine = symbol.type === SYMBOL_TYPE.POLYLINE || symbol.type === EXTRA_SYMBOL_TYPE.TRACK\r\n        const isPoint = symbol.type === SYMBOL_TYPE.MARKER || symbol.type === SYMBOL_TYPE.SPOT\r\n        const isCircle = symbol.type === SYMBOL_TYPE.CIRCLE\r\n\r\n        if (isLine) {\r\n            if (symbol.layer instanceof L.Polyline) {\r\n                return symbol.layer.getBounds()\r\n            }\r\n            else {\r\n                const featureGroup = L.featureGroup([])\r\n                symbol.layer.eachLayer(lyr => {\r\n                    (lyr instanceof L.Polyline) && featureGroup.addLayer(lyr)\r\n                })\r\n\r\n                return featureGroup.getBounds()\r\n            }\r\n        }\r\n        else if (isCircle) {\r\n            return symbol.layer._latlng\r\n        }\r\n        else if (!isPoint) {\r\n            return symbol.layer.getBounds()\r\n        }\r\n        else {\r\n            return symbol.layer.getLatLng()\r\n        }\r\n    })\r\n\r\n    map.fitBounds(centerOfSymbols)\r\n}\r\n\r\n/**\r\n * Clear all symbols, clusters, tracks, groups, heatmap, and contour from the map.\r\n *\r\n */\r\nexport function _clear() {\r\n    // Remove all symbols/tarcks & heatmap from the map\r\n    if (this._gCluster) {\r\n        this._gCluster.layer.clearLayers()\r\n        this._map.removeLayer(this._gCluster.layer)\r\n    }\r\n\r\n    _.forEach(this._clusters, cluster => {\r\n        cluster.layer.clearLayers()\r\n        this._map.removeLayer(cluster.layer)\r\n    })\r\n\r\n    _.forEach(this._symbols, symbol => {\r\n        this._map.removeLayer(symbol.layer)\r\n    })\r\n\r\n    _.forEach(this._groups, group => {\r\n        this._map.removeLayer(group.layer)\r\n    })\r\n\r\n    // Instead of removing heatmap/track/contour layer, remove the data\r\n    !!this._heatmap && this._heatmap.setData({data:[]})\r\n    !!this._contour && this._contour.clearLayers()\r\n    !!this._tracks && _.forEach(this._tracks, id => {\r\n        this._map.hasLayer(this._symbols[id].layer) &&\r\n        this._map.removeLayer(this._symbols[id].layer)\r\n    })\r\n    this._flagGroup.clearLayers()\r\n\r\n    this._symbols = {}\r\n    this._clusterSymbols = {}\r\n    this._groups = {}\r\n    this._visible = {}\r\n    // Fix issue #25\r\n    this._selected = {}\r\n    this._clusters = {}\r\n    this._tracks = []\r\n    this._flags = {}\r\n    delete this._gCluster\r\n}\r\n\r\nexport default {\r\n    _setLayout,\r\n    _setDragMode,\r\n    _setDrawType,\r\n    _setRegionType,\r\n    _setMaxBounds,\r\n    _setGisInterval,\r\n    _zoomToFit,\r\n    _clear\r\n}"],"file":"map.js"}