{"version":3,"sources":["../../../src/core/symbol.js"],"names":["log","require","getLogger","_collectEmpties","collections","collectionType","_","isEmpty","path","reserved","reduce","_symbols","acc","sbl","val","get","shouldAdd","keys","length","forEach","id","layer","_map","hasLayer","removeLayer","_collectEmptyClusters","countGlobal","_gCluster","filter","undefined","call","_clusters","_collectEmptyGroups","_groups","_setSymbol","item","items","isArray","cloneDeep","currLayout","_layout","simpleTypes","omit","SYMBOL_TYPE","origSymbolCount","el","type","toUpper","isSimpleType","EXTRA_SYMBOL_TYPE","isPoint","MARKER","SPOT","_truncateLabels","isFlagMode","isEqual","_origProps","_props","LAYOUT","TRACK","set","selected","_origSelectedProps","sh","renderSymbol","warn","ERROR","INVALID_TYPE","values","_selectedProps","drawMode","enabled","_drawType","setDragMode","setTimeout","STANDARD","_tracks","_heatmap","_contour","setLayout","_eventMap","evt","exclude","excludeIds","uniq","excld","concat","getSymbol","updateClusterSymbol","_removeSymbol","rmSymbolIds","isFunction","needClusterCollection","needGroupCollection","sblLayer","group","props","cluster","isGlobalCluster","clusterLayer","getLayers","_visible","remove","children","sblId","_selected","fire","rh","renderHeatmap","renderTrack","renderContour"],"mappings":"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","sourcesContent":["/**\r\n * Symbol related functions.\r\n *\r\n * @file   This file is the collection of symbol-related functions.\r\n * @author Liszt\r\n */\r\n\r\nimport _ from 'lodash'\r\n\r\nimport rh from '../utils/render-helper'\r\nimport sh from '../utils/symbol-helper'\r\nimport {GIS_ERROR as ERROR} from '../utils/gis-exception'\r\nimport {LAYOUT, SYMBOL_TYPE, EXTRA_SYMBOL_TYPE} from '../consts/dictionary'\r\n\r\nlet log = require('loglevel').getLogger('gis/core/symbol')\r\n\r\n/**\r\n * Removes the empty cluster or group layers for performance.\r\n *\r\n * @param {Object[]} collections        Cluster/LayerGroup collections.\r\n * @param {String}   collectionType     The collection's type, group or cluster.\r\n */\r\nfunction _collectEmpties(collections, collectionType) {\r\n    if ((collectionType !== 'group' && collectionType !== 'cluster') || _.isEmpty(collections)) {\r\n        return\r\n    }\r\n\r\n    const path = `_props.${collectionType}`\r\n    // Interate to get all the collections which should be reserved\r\n    const reserved = _.reduce(this._symbols, (acc, sbl) => {\r\n        const val = _.get(sbl, path)\r\n        const shouldAdd = val && collections[val] && !acc[val]\r\n\r\n        if (shouldAdd) {\r\n            acc[val] = true\r\n        }\r\n\r\n        return acc\r\n    }, {})\r\n\r\n    // If reserved's length is not the same as the original one, some collections must be empty.\r\n    // That is, they should be removed from map\r\n    if (_.keys(collections).length !== _.keys(reserved).length) {\r\n        _.forEach(collections, ({id, layer}) => {\r\n            if (!reserved[id]) {\r\n                this._map.hasLayer(layer) && this._map.removeLayer(layer)\r\n                delete collections[id]\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Removes the empty cluster layers for performance.\r\n *\r\n */\r\nfunction _collectEmptyClusters() {\r\n    const countGlobal = this._gCluster ?\r\n                        _.filter(this._symbols, sbl => _.get(sbl, '_props.cluster') === true).length :\r\n                        undefined\r\n\r\n    if (countGlobal === 0) {\r\n        this._map.hasLayer(this._gCluster.layer) && this._map.removeLayer(this._gCluster.layer)\r\n        delete this._gCluster\r\n    }\r\n\r\n    _collectEmpties.call(this, this._clusters, 'cluster')\r\n}\r\n\r\n/**\r\n * Removes the empty layerGroup layers for performance.\r\n *\r\n */\r\nfunction _collectEmptyGroups() {\r\n    _collectEmpties.call(this, this._groups, 'group')\r\n}\r\n\r\n/**\r\n * Creates/updates symbols.\r\n *\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/gis.md\r\n * @link    https://git.gorilla-technology.com/gorilla/gis/blob/master/docs/symbol.md\r\n *\r\n * @param {Object | Object[]}   item        Symbol objects, formatted as {id, type, latlng, selected......}\r\n *\r\n */\r\nexport function _setSymbol(item) {\r\n    const items = _.isArray(item) ? _.cloneDeep(item) : [_.cloneDeep(item)]\r\n    const currLayout = this._layout\r\n    const simpleTypes = _.omit(SYMBOL_TYPE, ['POPUP', 'CUSTOM'])\r\n    const origSymbolCount = _.keys(this._symbols).length\r\n\r\n    _.forEach(items, el => {\r\n        const type = _.toUpper(el.type)\r\n        const isSimpleType = !!simpleTypes[type] || !!EXTRA_SYMBOL_TYPE[type]\r\n        const isPoint = el.type === SYMBOL_TYPE.MARKER || el.type === SYMBOL_TYPE.SPOT\r\n        const sbl = (el.type === SYMBOL_TYPE.MARKER) || (el.type === SYMBOL_TYPE.SPOT)\r\n                ? {...el, _truncateLabels:this._truncateLabels}\r\n                : el\r\n\r\n        // Reset the start/end flag to the original props/selectedProps\r\n        const isFlagMode = isPoint &&\r\n                            _.get(this._symbols, `${el.id}._origProps`) &&\r\n                            !_.isEqual(this._symbols[el.id]._origProps, this._symbols[el.id]._props)\r\n\r\n        if (this._symbols[el.id] && isFlagMode && this._layout === LAYOUT.TRACK) {\r\n            this._symbols[el.id].set(\r\n                this._symbols[el.id]._origProps,\r\n                this._symbols[el.id].selected,\r\n                this._symbols[el.id]._origSelectedProps\r\n            )\r\n        }\r\n\r\n        // Symbol type can be determined in symbolOptions if matched\r\n        if (isSimpleType || !el.type) {\r\n            sh.renderSymbol.call(this, sbl)\r\n        }\r\n        // else if (sbl.type === SYMBOL_TYPE.POPUP) {\r\n        //     // TBD\r\n        // }\r\n        // else if (sbl.type === SYMBOL_TYPE.CUSTOM) {\r\n        //     // TBD\r\n        // }\r\n        else {\r\n            log.warn(\r\n                ERROR.INVALID_TYPE,\r\n                `${el.id}: ${el.type}`,\r\n                `Please input valid symbol type: ${_.values(SYMBOL_TYPE)}`\r\n            )\r\n        }\r\n\r\n        // Clone the props/selectedProps in standard mode\r\n        // This is for switching back to standard style when set layout from 'track' to 'standard'\r\n        if (isPoint) {\r\n            this._symbols[el.id]._origProps = _.cloneDeep(this._symbols[el.id]._props)\r\n            this._symbols[el.id]._origSelectedProps = _.cloneDeep(this._symbols[el.id]._selectedProps)\r\n        }\r\n    })\r\n\r\n    // Create new symbols as virtual ones or update virtual symbols in draw mode\r\n    if (this._map.drawMode.enabled() && this._drawType === 'edit') {\r\n        // Set to other mode also disable the drawMode\r\n        this.setDragMode('pan')\r\n        setTimeout(() => this.setDragMode('draw', this._drawType), 500)\r\n    }\r\n\r\n    // Repaint the map\r\n    // TODO: a better solution?\r\n    this._layout = LAYOUT.STANDARD\r\n    if (this._tracks) {\r\n        delete this._tracks\r\n    }\r\n\r\n    if (this._heatmap) {\r\n        this._map.hasLayer(this._heatmap) && this._map.removeLayer(this._heatmap)\r\n        delete this._heatmap\r\n    }\r\n\r\n    if (this._contour) {\r\n        this._map.hasLayer(this._contour) && this._map.removeLayer(this._contour)\r\n        delete this._contour\r\n    }\r\n\r\n    if (currLayout !== LAYOUT.STANDARD) {\r\n        this.setLayout(currLayout)\r\n    }\r\n\r\n    // Reset the exclude ids of events\r\n    if (origSymbolCount !== _.keys(this._symbols).length) {\r\n        _.forEach(this._eventMap, evt => {\r\n            if (evt.exclude) {\r\n                evt.excludeIds = _.uniq(_.reduce(evt.exclude, (acc, excld) => {\r\n                    return _.concat(acc, sh.getSymbol.call(this, excld, true, 'id'))\r\n                }, []))\r\n            }\r\n        })\r\n    }\r\n\r\n    // Symbols' cluster or group may be changed\r\n    _collectEmptyClusters.call(this)\r\n    _collectEmptyGroups.call(this)\r\n\r\n    sh.updateClusterSymbol.call(this)\r\n}\r\n\r\n/**\r\n * Removes symbols which match the filter.\r\n *\r\n * @param {String | String[] | Object | Function}   Filter      Filter of symbols to be removed.\r\n *\r\n */\r\nexport function _removeSymbol(filter) {\r\n    const rmSymbolIds = (!_.isFunction(filter) && _.isEmpty(filter))\r\n                    ? []\r\n                    : _.filter(sh.getSymbol.call(this, filter, true, 'id'), id => {\r\n                        return this._symbols[id].type !== EXTRA_SYMBOL_TYPE.TRACK\r\n                    })\r\n\r\n    if (rmSymbolIds.length > 0) {\r\n        let needClusterCollection = false\r\n        let needGroupCollection = false\r\n\r\n        _.forEach(rmSymbolIds, id => {\r\n            const sblLayer = this._symbols[id].layer\r\n            const group = this._symbols[id].props.group\r\n            const cluster = this._symbols[id].props.cluster\r\n            const isGlobalCluster = cluster === true\r\n\r\n            if (cluster) {\r\n                const clusterLayer = isGlobalCluster ?\r\n                                    this._gCluster.layer :\r\n                                    this._clusters[cluster].layer\r\n\r\n                clusterLayer.removeLayer(sblLayer)\r\n                needClusterCollection = clusterLayer.getLayers().length === 0\r\n            }\r\n\r\n            if (this._visible[id]) {\r\n                delete this._visible[id]\r\n                // Removing a layer from layerGroup will also remove from it from map\r\n                if (group) {\r\n                    this._groups[group].layer.removeLayer(sblLayer)\r\n                    _.remove(this._groups[group].children, sblId => id === sblId)\r\n                }\r\n                else {\r\n                    this._map.removeLayer(sblLayer)\r\n                }\r\n            }\r\n\r\n            if (group) {\r\n                needGroupCollection = this._groups[group].children.length === 0\r\n            }\r\n\r\n            // Fix issue #25\r\n            if (this._selected[id]) {\r\n                delete this._selected[id]\r\n            }\r\n\r\n            // Remove layer from layerGroup won't fire map's removelayer event\r\n            // (we have a removelayer event in map to remove virtual layers)\r\n            // Need directly remove the virtual ones in group\r\n            this._map.fire('virtualremove', {layer:sblLayer})\r\n\r\n            delete this._symbols[id]\r\n        })\r\n\r\n        if (this._heatmap) {\r\n            rh.renderHeatmap.call(this)\r\n        }\r\n\r\n        if (this._tracks) {\r\n            rh.renderTrack.call(this)\r\n        }\r\n\r\n        if (this._contour) {\r\n            rh.renderContour.call(this)\r\n        }\r\n\r\n        // Reset the exclude ids of events\r\n        _.forEach(this._eventMap, evt => {\r\n            if (evt.exclude) {\r\n                evt.excludeIds = _.uniq(_.reduce(evt.exclude, (acc, excld) => {\r\n                    return _.concat(acc, sh.getSymbol.call(this, excld, true, 'id'))\r\n                }, []))\r\n            }\r\n        })\r\n\r\n        // Empty clusters/groups collection\r\n        needClusterCollection && _collectEmptyClusters.call(this)\r\n        needGroupCollection && _collectEmptyGroups.call(this)\r\n\r\n        sh.updateClusterSymbol.call(this)\r\n    }\r\n}\r\n\r\nexport default {\r\n    _setSymbol,\r\n    _removeSymbol\r\n}"],"file":"symbol.js"}