{"version":3,"sources":["../../../src/core/track.js"],"names":["log","require","getLogger","_toggleOngoingNodes","trackIds","action","_","isEmpty","transform","reduce","acc","id","group","_flagGroup","flags","filter","_flags","flag","trackId","get","_props","shouldHide","toggleFn","forEach","hasLayer","layer","_setTrack","item","symbols","_symbols","tracks","_tracks","items","isArray","cloneDeep","setTrackInstance","props","selected","selectedProps","track","type","mergedProps","sMergedProps","set","elm","dh","convertRawDataToSymbolObj","isGlobol","isNil","el","warn","ERROR","INVALID_ID","_showTrack","_layout","LAYOUT","TRACK","INVALID_TYPE","map","_map","sh","getTrackInstance","call","sbl","toShow","_visible","addLayer","_hideTrack","toHide","removeLayer","_filterTrack","difference"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\n/**\r\n * Track related functions.\r\n *\r\n * @file   This file is the collection of track-related functions.\r\n * @author Liszt\r\n */\r\n\r\nimport _ from 'lodash';\r\n\r\nimport sh from '../utils/symbol-helper';\r\nimport dh from '../utils/data-helper';\r\nimport { mergeProps as combineProps } from '../utils/merge-helper';\r\nimport { GIS_ERROR as ERROR } from '../utils/gis-exception';\r\nimport { LAYOUT } from '../consts/dictionary';\r\n\r\nconst log = require('loglevel').getLogger('gis/core/track');\r\n\r\n\r\n/**\r\n * Shows/hides the ongoing nodes on the track.\r\n *\r\n * @param {String[]} trackIds   Ids of tracks which ongoing nodes will be manipulated.\r\n * @param {String}   action     Action type to be excuted, e.g., show or hide.\r\n */\r\nfunction _toggleOngoingNodes(trackIds, action = 'show') {\r\n  if (_.isEmpty(trackIds) || (action !== 'show' && action !== 'hide')) {\r\n    return;\r\n  }\r\n\r\n  const transform = _.reduce(trackIds, (acc, id) => {\r\n    acc[id] = true;\r\n    return acc;\r\n  }, {});\r\n\r\n  const group = this._flagGroup;\r\n\r\n  // Filter flags by props.data.track\r\n  const flags = _.filter(this._flags, (flag) => {\r\n    const trackId = _.get(flag._props, 'data.track');\r\n    return trackId && transform[trackId];\r\n  });\r\n\r\n  const shouldHide = action === 'hide';\r\n  const toggleFn = action === 'show' ? 'addLayer' : 'removeLayer';\r\n\r\n  _.forEach(flags, (flag) => {\r\n    (shouldHide === group.hasLayer(flag.layer)) &&\r\n    group[toggleFn](flag.layer);\r\n  });\r\n}\r\n\r\n/**\r\n * Updates the tracks.\r\n * The behavior is similar to setSymbol, which will merge global trackOptions first, then ordering the props, finally set tracks.\r\n * Tracks are created as Polyline in GIS, which type is 'track'.\r\n *\r\n * @param {Object | Object[]}   item   Track configs to apply.\r\n */\r\nexport function _setTrack(item) {\r\n  const symbols = this._symbols;\r\n  const tracks = this._tracks;\r\n  const items = _.isArray(item) ? _.cloneDeep(item) : [_.cloneDeep(item)];\r\n\r\n  const setTrackInstance = (id, { props = {}, selected, selectedProps = {} }) => {\r\n    const track = {\r\n      id: symbols[id].id,\r\n      type: symbols[id].type,\r\n      props: symbols[id].props,\r\n      selected: symbols[id].selected,\r\n      selectedProps: symbols[id].selectedProps\r\n    };\r\n\r\n    const mergedProps = combineProps(track, [track.props, props]);\r\n    const sMergedProps = combineProps(track, [track.selectedProps, selectedProps]);\r\n\r\n    symbols[id].set(\r\n      mergedProps,\r\n      selected,\r\n      sMergedProps\r\n    );\r\n  };\r\n\r\n  _.forEach(items, (elm) => {\r\n    const { id, props, selected, selectedProps } = dh.convertRawDataToSymbolObj(elm);\r\n    const isGlobol = _.isNil(id);\r\n\r\n    if (!isGlobol && symbols[id]) {\r\n      setTrackInstance(id, { props, selected, selectedProps });\r\n    } else if (isGlobol && tracks) {\r\n      _.forEach(tracks, (el) => {\r\n        setTrackInstance(el, { props, selected, selectedProps });\r\n      });\r\n    } else {\r\n      log.warn(ERROR.INVALID_ID, `${elm.id}`, 'Please input valid track Id or build GIS tracks first');\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Shows tracks matching the filter.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of tracks to show. If it's a String or String[], shows tracks by ids; if it's a Object, shows tracks by all the attributes in tracks; if it's a Function, shows tracks by the given callback(Symbol track, String id, Object gis._symbols)\r\n */\r\nexport function _showTrack(filter) {\r\n  // Only works in track mode\r\n  if (this._layout !== LAYOUT.TRACK) {\r\n    log.warn(ERROR.INVALID_TYPE, this._layout, 'Please change to track mode before calling this method');\r\n    return;\r\n  }\r\n\r\n  const map = this._map;\r\n  const tracks = sh.getTrackInstance.call(this, filter);\r\n\r\n  _.forEach(tracks, (sbl) => {\r\n    const toShow = !this._visible[sbl.id] && !map.hasLayer(sbl.layer);\r\n    if (toShow) {\r\n      map.addLayer(sbl.layer);\r\n      this._visible[sbl.id] = true;\r\n    }\r\n  });\r\n\r\n  _toggleOngoingNodes.call(this, _.map(tracks, 'id'), 'show');\r\n}\r\n\r\n/**\r\n * Hides tracks matching the filter.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of tracks to hide. If it's a String or String[], hides tracks by ids; if it's a Object, hides tracks by all the attributes in tracks; if it's a Function, hides tracks by the given callback(Symbol track, String id, Object gis._symbols)\r\n */\r\nexport function _hideTrack(filter) {\r\n  // Only works in track mode\r\n  if (this._layout !== LAYOUT.TRACK) {\r\n    log.warn(ERROR.INVALID_TYPE, this._layout, 'Please change to track mode before calling this method');\r\n    return;\r\n  }\r\n\r\n  const map = this._map;\r\n  const tracks = sh.getTrackInstance.call(this, filter);\r\n\r\n  _.forEach(tracks, (sbl) => {\r\n    const toHide = this._visible[sbl.id] && map.hasLayer(sbl.layer);\r\n    if (toHide) {\r\n      map.removeLayer(sbl.layer);\r\n      delete this._visible[sbl.id];\r\n    }\r\n  });\r\n\r\n  _toggleOngoingNodes.call(this, _.map(tracks, 'id'), 'hide');\r\n}\r\n\r\n/**\r\n * Shows tracks matching the filter.\r\n * Tracks not match the filter will be hidden.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of tracks to show. If it's a String or String[], shows tracks by ids; if it's a Object, shows tracks by all the attributes in tracks; if it's a Function, shows tracks by the given callback(Symbol track, String id, Object gis._symbols)\r\n */\r\nexport function _filterTrack(filter) {\r\n  // Only works in track mode\r\n  if (this._layout !== LAYOUT.TRACK) {\r\n    log.warn(ERROR.INVALID_TYPE, this._layout, 'Please change to track mode before calling this method');\r\n    return;\r\n  }\r\n\r\n  const map = this._map;\r\n  const tracks = sh.getTrackInstance.call(this, filter);\r\n  const trackIds = _.map(tracks, 'id');\r\n\r\n  // Hide all tracks if the filter is undefined\r\n  if (_.isEmpty(filter) && filter !== true) {\r\n    _.forEach(this._tracks, (id) => {\r\n      map.hasLayer(tracks[id].layer) && map.removeLayer(tracks[id].layer);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  _.forEach(this._tracks, (id) => {\r\n    const track = tracks[id];\r\n    const toShow = track && !map.hasLayer(track.layer);\r\n    const toHide = !track && map.hasLayer(this._symbols[id].layer);\r\n\r\n    if (toShow) {\r\n      map.addLayer(track.layer);\r\n      this._visible[id] = true;\r\n    } else if (toHide) {\r\n      map.removeLayer(this._symbols[id].layer);\r\n      delete this._visible[id];\r\n    }\r\n  });\r\n\r\n  _toggleOngoingNodes.call(this, trackIds, 'show');\r\n  _toggleOngoingNodes.call(this, _.difference(this._tracks, trackIds), 'hide');\r\n}\r\n\r\nexport default {\r\n  _setTrack,\r\n  _showTrack,\r\n  _hideTrack,\r\n  _filterTrack\r\n};\r\n"],"file":"track.js"}