{"version":3,"sources":["../../../src/core/filter.js"],"names":["_filterIdsByTimestamp","filterIds","interval","_","isArray","length","forEach","val","sblId","symbol","_symbols","isExcluded","props","ts","dh","isBetween","_showSymbol","filter","map","_map","symbols","shownIds","sh","getSymbol","call","id","type","EXTRA_SYMBOL_TYPE","TRACK","layer","cluster","group","isClustered","_layout","LAYOUT","STANDARD","isStdOrTrk","track","hasLayer","_groups","addLayer","_gCluster","_clusters","addTo","_visible","drawMode","enabled","fire","_contour","rh","renderContour","_heatmap","renderHeatmap","_tracks","renderTrack","_hideSymbol","hiddenIds","removeLayer","_filterSymbol","isFunction","isEmpty","reduce","acc","isShown","_group","layerMgr","remove"],"mappings":"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","sourcesContent":["/**\r\n * Filter related functions.\r\n *\r\n * @file   This file is the collection of filter-related functions.\r\n * @author Liszt\r\n *\r\n */\r\n\r\nimport _ from 'lodash'\r\n\r\nimport dh from '../utils/data-helper'\r\nimport sh from '../utils/symbol-helper'\r\nimport rh from '../utils/render-helper'\r\nimport {LAYOUT, EXTRA_SYMBOL_TYPE} from '../consts/dictionary'\r\n\r\n/**\r\n * Filters symbols' ids by timestamp.\r\n *\r\n * @param   {Object[]}  filterIds   The symbols' ids to be filtered. Formatted as {[symbolId]:true}.\r\n * @param   {Number[]}  interval    GIS interval, formatted as [start timestamp, end timestamp].\r\n *\r\n */\r\nexport function _filterIdsByTimestamp(filterIds, interval) {\r\n    if (_.isArray(interval) && interval.length === 2 && interval[0] <= interval[1]) {\r\n        _.forEach(filterIds, (val, sblId) => {\r\n            const symbol = this._symbols[sblId]\r\n            const isExcluded = !symbol.props.ts ||\r\n                                (_.isArray(symbol.props.ts) && symbol.props.ts.length === 0) ||\r\n                                !dh.isBetween(symbol.props.ts, interval)\r\n\r\n            if (isExcluded) {\r\n                delete filterIds[sblId]\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * Show symbols matched the filter within the interval.\r\n * If interval is not defined, it won't filter symbols by time.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of symbols to show. If a String or String[], it's symbols' ids; Object is for symbols' props; Function should return Boolean to get symbols; undefined will apply to all symbols.\r\n * @param   {Number[]}                               interval   GIS interval, formatted as [start timestamp, end timestamp].\r\n *\r\n */\r\nexport function _showSymbol(filter, interval=[]) {\r\n    const map = this._map\r\n    const symbols = this._symbols\r\n    const shownIds = _.filter(sh.getSymbol.call(this, filter, true, 'id'), id => {\r\n        return symbols[id].type !== EXTRA_SYMBOL_TYPE.TRACK\r\n    })\r\n\r\n    if (_.isArray(interval) && interval.length === 2) {\r\n        _filterIdsByTimestamp.call(this, shownIds, interval)\r\n    }\r\n\r\n    _.forEach(shownIds, id => {\r\n        const layer = symbols[id].layer\r\n        const {cluster, group} = symbols[id].props\r\n\r\n        const isClustered = this._layout === LAYOUT.STANDARD && cluster\r\n\r\n        const isStdOrTrk = ((this._layout === LAYOUT.STANDARD) ||\r\n                            (this._layout === LAYOUT.TRACK && symbols[id].props.track)) &&\r\n                            !map.hasLayer(layer)\r\n\r\n        group &&\r\n        (!cluster && isStdOrTrk) &&\r\n        this._groups[group] &&\r\n        !this._groups[group].layer.hasLayer(layer) &&\r\n        this._groups[group].layer.addLayer(layer)\r\n\r\n        if (cluster === true && isClustered && this._gCluster) {\r\n            !this._gCluster.layer.hasLayer(layer) && this._gCluster.layer.addLayer(layer)\r\n        }\r\n        else if (isClustered && this._clusters[cluster]) {\r\n            !this._clusters[cluster].layer.hasLayer(layer) && this._clusters[cluster].layer.addLayer(layer)\r\n        }\r\n        else if (isStdOrTrk) {\r\n            layer.addTo(map)\r\n        }\r\n\r\n        this._visible[id] = true\r\n        this._map.drawMode.enabled() && this._map.fire('virtualadd', {layer})\r\n    })\r\n\r\n    !!this._contour && rh.renderContour.call(this)\r\n    !!this._heatmap && rh.renderHeatmap.call(this)\r\n    if (this._tracks) {\r\n        rh.renderTrack.call(this)\r\n    }\r\n\r\n    // Need to update the cluster data and their labels\r\n    map.fire('clusterselectionChange')\r\n}\r\n\r\n/**\r\n * Hide symbols matched the filter within the interval.\r\n * If interval is not defined, it won't filter symbols by time.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of symbols to hide. If a String or String[], it's symbols' ids; Object is for symbols' props; Function should return Boolean to get symbols; undefined will apply to all symbols.\r\n * @param   {Number[]}                               interval   GIS interval, formatted as [start timestamp, end timestamp].\r\n *\r\n */\r\nexport function _hideSymbol(filter, interval=[]) {\r\n    const map = this._map\r\n    const symbols = this._symbols\r\n    const hiddenIds = _.filter(sh.getSymbol.call(this, filter, true, 'id'), id => {\r\n        return symbols[id].type !== EXTRA_SYMBOL_TYPE.TRACK\r\n    })\r\n\r\n    if (_.isArray(interval) && interval.length === 2) {\r\n        _filterIdsByTimestamp.call(this, hiddenIds, interval)\r\n    }\r\n\r\n    _.forEach(hiddenIds, id => {\r\n        const layer = this._symbols[id].layer\r\n        const {cluster, group} = this._symbols[id].props\r\n\r\n        delete this._visible[id]\r\n\r\n        group &&\r\n        this._groups[group] &&\r\n        this._groups[group].layer.hasLayer(layer) &&\r\n        this._groups[group].layer.removeLayer(layer)\r\n\r\n        if (cluster === true) {\r\n            this._gCluster &&\r\n            this._gCluster.layer.hasLayer(layer) &&\r\n            this._gCluster.layer.removeLayer(layer)\r\n        }\r\n        else {\r\n            this._clusters[cluster] &&\r\n            this._clusters[cluster].layer.hasLayer(layer) &&\r\n            this._clusters[cluster].layer.removeLayer(layer)\r\n        }\r\n\r\n        map.hasLayer(layer) && map.removeLayer(layer)\r\n        this._map.drawMode.enabled() && this._map.fire('virtualremove', {layer})\r\n    })\r\n\r\n    this._contour && rh.renderContour.call(this)\r\n    this._heatmap && rh.renderHeatmap.call(this)\r\n    if (this._tracks) {\r\n        rh.renderTrack.call(this)\r\n    }\r\n\r\n    // Need to update the cluster data and their labels\r\n    map.fire('clusterselectionChange')\r\n}\r\n\r\n/**\r\n * Filter symbols matched the filter within the interval.\r\n * Symbols which don't match the filter will be hidden.\r\n * If interval is not defined, it won't filter symbols by time.\r\n *\r\n * @param   {String | String[] | Object | Function}  filter     Filter of symbols to show. If a String or String[], it's symbols' ids; Object is for symbols' props; Function should return Boolean to get symbols; undefined will apply to all symbols.\r\n * @param   {Number[]}                               interval   GIS interval, formatted as [start timestamp, end timestamp].\r\n *\r\n */\r\nexport function _filterSymbol(filter, interval=[]) {\r\n    const { _map: map, _layout } = this\r\n    const symbols = this._symbols\r\n    const filterIds = (!_.isFunction(filter) && (filter !== true && _.isEmpty(filter)))\r\n                    ? {}\r\n                    : _.reduce(sh.getSymbol.call(this, filter, true, 'id'), (acc, id) => {\r\n                        if (symbols[id].type !== EXTRA_SYMBOL_TYPE.TRACK) {\r\n                            acc[id] = true\r\n                        }\r\n\r\n                        return acc\r\n                    }, {})\r\n\r\n    if (_.isArray(interval) && interval.length === 2) {\r\n        _filterIdsByTimestamp.call(this, filterIds, interval)\r\n    }\r\n\r\n    if (!_.isEmpty(filterIds)) {\r\n        _.forEach(symbols, ({ id, layer, props: { cluster, group }}) => {\r\n            const isShown = !!filterIds[id];\r\n            const { _groups: {[ group ]: _group }} = this;\r\n            const layerMgr = _layout !== LAYOUT.STANDARD ? null : !cluster ? map : ((cluster === true ? this._gCluster : this._clusters[cluster]) || {}).layer;\r\n\r\n            if (_group && !cluster && this._layout === LAYOUT.STANDARD)\r\n              _group.layer[ isShown && !_group.layer.hasLayer(layer) ? 'addLayer' : 'removeLayer' ](layer);\r\n\r\n            if (layerMgr && layerMgr.hasLayer(layer) === !isShown)\r\n              layerMgr[ isShown ? 'addLayer' : 'removeLayer' ](layer);\r\n            else if (!isShown)\r\n              layer.remove();\r\n\r\n            if (isShown)\r\n              this._visible[id] = true;\r\n            else\r\n              delete this._visible[id];\r\n\r\n            map.drawMode.enabled() && map.fire(isShown ? 'virtualadd' : 'virtualremove', { layer });\r\n        })\r\n\r\n        if (this._heatmap) {\r\n            rh.renderHeatmap.call(this)\r\n        }\r\n\r\n        if (this._tracks) {\r\n            rh.renderTrack.call(this)\r\n        }\r\n\r\n        if (this._contour) {\r\n            rh.renderContour.call(this)\r\n        }\r\n    }\r\n    else {\r\n        // Hide all symbols when filter is empty\r\n        _hideSymbol.call(this)\r\n    }\r\n\r\n    // Need to update the cluster data and their labels\r\n    map.fire('clusterselectionChange')\r\n}\r\n\r\nexport default {\r\n    _filterIdsByTimestamp,\r\n    _showSymbol,\r\n    _hideSymbol,\r\n    _filterSymbol\r\n}"],"file":"filter.js"}