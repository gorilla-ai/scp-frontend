{"version":3,"sources":["../../../src/plugins/events.js"],"names":["createGisClickHandler","L","that","Handler","extend","addHooks","mapContainer","_map","getContainer","DomEvent","on","_onMouseDown","_onMouseMove","_onMouseUp","removeHooks","_isPanning","_clientX","_clientY","off","e","stop","map","_isOnMap","target","clientX","clientY","selected","_selected","_","forEach","val","id","sbl","_symbols","_flags","setSelected","isEmpty","fire","createGisZoomendHandler","_onZoomEnd","_active","_interval","_delta","getWheelDelta","_onWheelStart","_onWheel","_delta2","setTimeout","_onWheelEnd","zoom","getZoom","changedOverlays","filter","_overlays","ol","isInteger","hasLayer","layer","addTo","bringToFront","removeLayer"],"mappings":"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","sourcesContent":["/**\r\n * This file defines & implements the GIS default events, including click and zoom.\r\n *\r\n * @file   Defines & implements GIS default events, including click and zoom\r\n * @author Liszt\r\n */\r\n\r\nimport _ from 'lodash'\r\n\r\n/**\r\n * Defines default click behavior. When clicking on map or symbol/cluster, map should fire selectionChange.\r\n *\r\n * @param {Leaflet} L   Leaflet module\r\n *\r\n * @return {Leaflet handler}    The GIS click handler, which can trigger selectionChange by clicking.\r\n */\r\nexport function createGisClickHandler(L) {\r\n    const that = this\r\n\r\n    return L.Handler.extend({\r\n        addHooks() {\r\n            const mapContainer = this._map.getContainer()\r\n            L.DomEvent.on(mapContainer, 'mousedown', this._onMouseDown, this)\r\n                .on(mapContainer, 'mousemove', this._onMouseMove, this)\r\n                .on(mapContainer, 'mouseup', this._onMouseUp, this)\r\n        },\r\n\r\n        removeHooks() {\r\n            const mapContainer = this._map.getContainer()\r\n\r\n            delete this._isPanning\r\n            delete this._clientX\r\n            delete this._clientY\r\n\r\n            L.DomEvent.off(mapContainer, 'mousedown', this._onMouseDown, this)\r\n                .off(mapContainer, 'mousemove', this._onMouseMove, this)\r\n                .off(mapContainer, 'mouseup', this._onMouseUp, this)\r\n        },\r\n\r\n        _onMouseDown(e) {\r\n            L.DomEvent.stop(e)\r\n\r\n            const map = this._map\r\n            const mapContainer = map.getContainer()\r\n\r\n            this._isOnMap = e.target === mapContainer\r\n            this._isPanning = false\r\n            this._clientX = e.clientX\r\n            this._clientY = e.clientY\r\n        },\r\n\r\n        _onMouseMove(e) {\r\n            L.DomEvent.stop(e)\r\n            this._isPanning = this._clientX - e.clientX !== 0 || this._clientY - e.clientY !== 0\r\n        },\r\n\r\n        _onMouseUp(e) {\r\n            L.DomEvent.stop(e)\r\n\r\n            const map = this._map\r\n            const selected = that._selected\r\n\r\n            if (!this._isPanning && this._isOnMap) {\r\n                _.forEach(selected, (val, id) => {\r\n                    const sbl = that._symbols[id] || that._flags[id]\r\n                    sbl.setSelected(false)\r\n                })\r\n\r\n                if (!_.isEmpty(selected)) {\r\n                    that._selected = {}\r\n                    map.fire('selectionChange')\r\n                        .fire('clusterselectionChange')\r\n                }\r\n            }\r\n\r\n            this._isPanning = false\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * Defines zoom behavior for imageovelay. Each overlay has property \"zoom\".\r\n * If map's zoom level is less than this value, the overlay will hide.\r\n *\r\n * @param {Leaflet} L           Leaflet module\r\n *\r\n * @return {Leaflet handler}    The zoom handler, which can hide/show overlay by zooming.\r\n */\r\nexport function createGisZoomendHandler(L) {\r\n    const that = this\r\n\r\n    return L.Handler.extend({\r\n        addHooks() {\r\n            const mapContainer = this._map.getContainer()\r\n            L.DomEvent.on(mapContainer, 'wheel', this._onZoomEnd, this)\r\n            this._active = true\r\n            this._interval = 350\r\n        },\r\n        removeHooks() {\r\n            const mapContainer = this._map.getContainer()\r\n            L.DomEvent.off(mapContainer, 'wheel', this._onZoomEnd, this)\r\n        },\r\n        _onZoomEnd(e) {\r\n            this._delta = L.DomEvent.getWheelDelta(e)\r\n            if (this._active) {\r\n                this._onWheelStart()\r\n            }\r\n        },\r\n        _onWheelStart() {\r\n            this._active = false\r\n            this._onWheel()\r\n        },\r\n        _onWheel() {\r\n            this._delta2 = this._delta\r\n\r\n            setTimeout(() => {\r\n                if (this._delta2 === this._delta) {\r\n                    this._onWheelEnd()\r\n                }\r\n                else {\r\n                    this._onWheel()\r\n                }\r\n            }, this._interval)\r\n        },\r\n        _onWheelEnd() {\r\n            const map = this._map\r\n            const zoom = this._map.getZoom()\r\n            const changedOverlays = _.filter(that._overlays, ol => {\r\n                return _.isInteger(ol.zoom)\r\n            })\r\n\r\n            // Show the overlay when specified zoom value <= current zoom level\r\n            _.forEach(changedOverlays, ol => {\r\n                if ((ol.zoom <= zoom) && !map.hasLayer(ol.layer)) {\r\n                    ol.layer.addTo(map)\r\n                    ol.layer.bringToFront()\r\n                }\r\n                else if ((ol.zoom > zoom) && map.hasLayer(ol.layer)) {\r\n                    map.removeLayer(ol.layer)\r\n                }\r\n            })\r\n\r\n            this._active = true\r\n        }\r\n    })\r\n}\r\n\r\nexport default {\r\n    createGisClickHandler,\r\n    createGisZoomendHandler\r\n}"],"file":"events.js"}