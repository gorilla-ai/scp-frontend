* {
	box-sizing: border-box;
}

.fg {
	font-size: 1.4rem;
	display: inline-block;
	&:before {
		color: unset;
	}

	&.large {
		font-size: 2rem;
	}
}

html,body {
	font-family: "微軟正黑體", "Segoe UI", "新細明體";
    font-size: 1em;
	color: @g-standard-font-color;
}

a[disabled] {
   pointer-events: none;
   cursor: default;
}

ul, ol {
	margin:0;
	padding:0;
	list-style-type: none;
}


.c-margin {
	margin: 5px;
}
.c-margin-l {
	margin: 15px;
}

.c-padding {
	padding: 5px;
}

.c-border {
	border: 1px solid @g-border-color;
	border-radius: 5px;
}

.c-flex {
	display:flex;
	&.inline {
		display: inline-flex;
	}
	&.fdr {
		flex-direction: row;
	}
	&.fdc {
		flex-direction: column;
	}
	&.aic {
		align-items: center;
	}
	&.ais {
		align-items: stretch;
	}
	&.aifs {
		align-items: flex-start;
	}
	&.aife {
		align-items: flex-end;
	}
	&.acfs {
		align-content: flex-start;
	}
	&.acc {
		align-content: center;
	}
	&.acs {
		align-content: stretch;
	}
	&.jcc {
		justify-content: center;
	}
	&.jcsa {
		justify-content: space-around;
	}
	&.jcsb {
		justify-content: space-between;
	}
	&.jcfs {
		justify-content: flex-start;
	}
	&.jcfe {
		justify-content: flex-end;
	}
	> .asc {
		align-self: center;
	}
	> .asfe {
		align-self: flex-end;
	}
	> .fba {
		flex-basis: auto !important;
	}
	&.fww {
		flex-wrap: wrap;
	}
	> .grow {
		flex-grow: 1;
	}
	> .fixed {
		flex-grow: 0;
		flex-shrink: 0;
	}
	> .end {
		margin-left:auto;
	}
	> .center {
		margin-left:auto;
		&:last-child {
			margin-right:auto;
		}
	}
}
.c-link, a {
	&:not(.c-flex) {
    	display:inline-block;
	}
	text-decoration: none;
    color: inherit;
    cursor:pointer;
}

.c-info {
	min-height: 40px;
	font-weight:bold;
	font-style: italic;
	padding-top:5px;
	padding-bottom:5px;
}
.c-error {
	color: @g-error-color;
    font-style: italic;
}
.c-large {
	font-size:1.1em;
}
.c-center {
	.c-flex;
	.jcc;
	.aic;
	position: absolute;
	height: 100%;
	width: 100%;

	&.c-modal.show {
		.c-flex;
	}
	
	&.global {
		position:fixed;
		top:0;
		left:0;
	}
}


.c-split-vertical-fn(@spacing: 6px) {
	> *:not(:last-child) {
		margin-right: @spacing;
	}
}

.c-split-horizontal-fn(@spacing: 6px) {
	> *:not(:last-child) {
		margin-bottom: @spacing;
	}
}

.c-bullet {
	// make border shape appear like a semi-circle
	// setting radius to as large as possible to accomodate all heights
	border-radius: 300px~"/"300px;
	text-align: center;
}

.c-split {
	> *:not(.inner) {
		.c-border;
	}
	&.vertical {
		.c-split-vertical-fn();
	}
	&.horizontal {
		.c-split-horizontal-fn();
	}
}
.c-join {

	&:not(.inner) {
		.c-border;
	}
	> * {
		border: none !important;
		border-radius: 0 !important;
		//background-color: transparent;
	}
	&.vertical {
		> *:not(:last-child) {
			border-right: 1px solid @g-border-color !important;
		}
	}
	&.horizontal {
		> *:not(:last-child) {
			border-bottom: 1px solid @g-border-color !important;
		}
	}
}

// works best if c-flex contains either c-flex(es) or c-box(es)
.c-boxes(@spacing, @padding:6px) {
	padding: @padding;

	&, .c-flex {
		> * {
			flex-basis: 200px;
		}
	}

	&:not(.fdc), .c-flex:not(.fdc) {
		.c-split-vertical-fn(@spacing);
		
	}
	&.fdc, .c-flex.fdc {
		.c-split-horizontal-fn(@spacing);
	}	
}
.c-flex.boxes:not(.joint) {
	.c-boxes(6px);
}
.c-flex.boxes.joint {
	.c-boxes(-1px);
	*:not(.c-flex) {
		border-radius:0;
	}
}
.c-fullscreen {
	position: fixed !important;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: #ffffff;
}



.c-extend {
	position: absolute;
	margin: 8px;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;

	&.full {
		margin: 0;
	}
}
.c-fill {
	position: relative;
	> * {
		.c-extend;
	}

	&.full > * {
		margin: 0;
	}
}



.c-pool {
	padding: 8px;
	.c-border;

	> span {
		display:inline-flex;
		align-items: center;
	    padding: 4px;
	    background-color: @g-primary-color;
	    color: @g-primary-font-color;
	    border-radius: 3px;
    	margin: 0 5px 5px 0;

		> i {
			margin-left:5px;
		}
	}
}

.c-toolbar {
	background-color: #969fae;
    padding-right: 10px;
    > * {
    	padding: 8px 10px;
    	color: white;
    }
}
.fg-loading-2{
  	-webkit-animation: fg-spins 2s infinite linear;
  	animation: fg-spins 2s infinite linear;
}

@-webkit-keyframes fg-spins {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@keyframes fg-spins {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}

.dayContainer{
	span.flatpickr-day.selected{
		background: @g-secondary-color;
		border-color: @g-secondary-color;
	}
}