{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./../src/components/button-group.js","webpack:///./../src/components/checkbox-group.js","webpack:///./../src/components/checkbox.js","webpack:///./../src/components/combobox.js","webpack:///./../src/components/contextmenu.js","webpack:///./../src/components/date-picker.js","webpack:///./../src/components/date-range.js","webpack:///./../src/components/dropdown.js","webpack:///./../src/components/file-input.js","webpack:///./../src/components/form.js","webpack:///./../src/components/grid.js","webpack:///./../src/components/hierarchy.js","webpack:///./../src/components/image-gallery.js","webpack:///./../src/components/image.js","webpack:///./../src/components/index.js","webpack:///./../src/components/input.js","webpack:///./../src/components/list.js","webpack:///./../src/components/modal-dialog.js","webpack:///./../src/components/multi-input.js","webpack:///./../src/components/page-nav.js","webpack:///./../src/components/popover.js","webpack:///./../src/components/popup-dialog.js","webpack:///./../src/components/progress.js","webpack:///./../src/components/radio-group.js","webpack:///./../src/components/range-calendar.js","webpack:///./../src/components/search.js","webpack:///./../src/components/slider.js","webpack:///./../src/components/table.js","webpack:///./../src/components/tabs.js","webpack:///./../src/components/text.js","webpack:///./../src/components/textarea.js","webpack:///./../src/components/tiles.js","webpack:///./../src/components/timeline.js","webpack:///./../src/components/toggle-button.js","webpack:///./../src/components/tree.js","webpack:///./../src/consts/prop-types.js","webpack:///./../src/hoc/list-normalizer.js","webpack:///./../src/hoc/paginator.js","webpack:///./../src/hoc/prop-wire.js","webpack:///./../src/mixins/linked-state-mixins.js","webpack:///./../src/utils/ajax-helper.js","webpack:///./../src/utils/date.js","webpack:///./../src/utils/error-helper.js","webpack:///./../src/utils/grid-event.js","webpack:///./../src/utils/input-helper.js","webpack:///./../src/utils/outside-event.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app.js","webpack:///./src/css.js","webpack:///./src/example-factory.js","webpack:///./src/form-advanced.js","webpack:///./src/form.js","webpack:///./src/hierarchy.js","webpack:///./src/list.js","webpack:///./src/modal.js","webpack:///./src/routes.js","webpack:///./src/table.js","webpack:///./src/tabs.js","webpack:///./src/tiles.js"],"names":["log","require","getLogger","ButtonGroup","handleSelect","newVal","props","onChange","multi","value","_","includes","without","id","list","disabled","className","map","itemValue","itemText","text","itemClassName","selected","isDisabled","isBoolean","isArray","bind","React","Component","propTypes","PropTypes","string","arrayOf","shape","SIMPLE_VALUE_PROP","node","oneOfType","SIMPLE_ARRAY_PROP","bool","func","defaultProps","CheckboxGroup","getDisabledItems","disabledItems","getSelectableItems","handleChange","checked","curValue","newValue","handleToggleAll","selectableItems","disabledSelectedItems","intersection","toggleAll","toggleAllText","numSelected","length","numSelectable","partial","children","indexOf","isRequired","Checkbox","getLabelForCheckbox","parent","find","evt","stopPropagation","on","off","ref","PopupList","onClickOutside","target","onSelect","data","focusSearchInput","searchComp","_component","focus","handler","onOutside","unsubscribe","search","multiSelect","info","infoClassName","infoText","isFunction","enabled","LIST_PROP","object","Combobox","state","isListOpen","searchText","searchIsSelected","cachedValueText","multiSelectable","setState","input","onInput","getListPosition","getBoundingClientRect","x","left","y","bottom","showList","updateOnly","onSearch","enableSearch","popupWidth","width","filter","item","toLowerCase","Popover","open","enableClear","interactive","handleListClickOutside","pointy","style","minWidth","borderWidth","borderColor","borderStyle","borderRadius","padding","backgroundColor","color","overflowX","clearIcon","toggleIcon","toggleList","formatDisplayText","items","itemsToShow","take","join","formatted","selectedItem","nextProps","nextValue","nextList","valueChanged","JSON","stringify","listChanged","debug","reduce","acc","v","get","prevProps","prevState","delaySearch","prevSearchText","wasListOpen","timer","clearTimeout","setTimeout","close","name","required","placeholder","displayText","clearable","invalid","_str","isBlank","number","globalContextMenu","Contextmenu","onClickInside","targetId","menu","targetMenuItem","action","position","isOpen","isEmpty","addHandler","onInside","top","idx","itemId","isHeader","header","preventDefault","document","createElement","body","appendChild","ReactDOM","render","getElementById","pageX","pageY","DATE_TIME_SUFFIX","daySuffix","timeSuffix","DatePicker","strToTimestamp","str","enableTime","parsedStr","replace","momentFormat","FORMAT","date","time","valueOf","handleInputChange","newDate","parseDate","isValid","validateDateFormat","errMsg","generateErrorMsg","isNaN","datePicker","jumpToDate","setDate","handleBlur","prevDate","dateStr","t","datePattern","timePattern","pattern","ih","validateField","type","et","dateFormat","timeFormat","enableAMPM","allowInput","allowKeyIn","locale","loc","zh","time_24hr","set","destroy","readOnly","DATE_PROP_TYPE","from","to","DateRange","dateFrom","dateTo","closeId","checkCross","openId","field","prevFrom","prevTo","isAfter","isBefore","autoComplete","Dropdown","size","defaultText","found","FileInput","file","isInvalid","e","fileInput","fileSub","validate","files","error","validateFile","handleClick","params","msg","btnText","hasFile","extension","max","Form","key","merge","iValue","actions","eventInfo","isComplete","isObject","mergeWith","objValue","srcValue","undefined","im","completeAction","triggerOnComplete","isAligned","formClassName","split","renderField","fieldCfg","dataSet","fieldDefaultClassName","createContainer","label","fieldClassName","formatter","editor","fieldContent","propValueName","isString","has","FormElements","content","renderRow","fields","rowKey","renderedFields","fieldKey","keys","renderForm","extraFormClassName","columns","aligned","groupBy","k","i","Math","floor","row","keyBy","footer","controlClassName","actionNodes","actionKey","clearForm","hasActions","__html","objectOf","Grid","Hierarchy","getLeafNodeIds","path","pathIgnoringRoot","first","index","tail","nodePath","currentNode","ids","flatten","child","handleToggleNode","opened","onToggleOpen","newOpened","handleSelectLabel","isBranch","onLabelClick","handleHoverLabel","onLabelMouseOver","handleSelectNode","onSelectionChange","newSelected","uniq","renderNode","foldable","openBranch","current","selectable","selection","layout","asTree","isCurrent","childrenIds","paddingLeft","last","indent","renderHierarchy","root","parentPath","indentCfg","level","disableLayer","layerFoldable","layerIndent","currentPath","shouldOpen","rootId","oneOf","array","defaultValue","changeHandlerName","ImageGallery","createTimer","autoPlay","interval","clearTimer","setInterval","slide","clearInterval","backward","resetAutoPlay","start","onMove","repeat","total","numTiles","tiles","maxTiles","itemsToMove","newStart","step","forceUpdate","base","hasPrev","hasNext","tilesProps","showPrev","showNext","slice","height","itemProps","itemSize","spacing","unit","onClick","onMouseOver","onMouseOut","Image","done","timeout","handleDone","success","preload","src","prevSrc","alt","hasError","Input","List","ModalDialog","MultiInput","PageNav","PopupDialog","Progress","RadioGroup","RangeCalendar","Search","Slider","Table","Tabs","Text","Textarea","Tiles","Timeline","ToggleButton","Tree","context","validateInput","maxLength","changeHandler","blurHandler","keyHandler","min","instanceOf","RegExp","patternReadable","nextTime","keyCode","oldVal","handleToggleSelection","curSelected","renderListItem","itemStyle","_itemClassName","_itemStyle","itemSelected","itemIdField","show","toggle","focusAction","defaultAction","useTransition","modalContent","title","closeActionKey","closeAction","contentClassName","dialogStyle","opacity","draggable","global","dialogContent","handle","SIMPLE_OBJECT_PROP","result","modifyInput","addInput","defaultItemValue","push","removeInput","del","baseProps","expand","inline","boxed","persistKeys","groupClassName","addText","removeText","editable","extend","any","gotoPage","page","renderThumb","thumbnails","pages","endThumbs","midThumbs","midStart","midEnd","lastSkipped","forEach","range","handles","GLOBAL_POPOVER_ID","display","cfg","setDragBounds","boundBy","boundLeft","boundRight","right","boundTop","boundBottom","popLeft","popRight","popTop","popBottom","_dragBounds","snapToBounds","popWidth","popHeight","boundWidth","pick","_actualPosition","defaultX","maxWidth","aroundTop","aroundBottom","aboveSpace","belowSpace","maxHeight","popoverContent","pos","defaults","rect","TYPES","ALERT","CONFIRM","PROMPT","GLOBAL_POPUP_ID","cancelText","confirmText","act","toUpperCase","handleConfirm","findDOMNode","p","then","handleError","catch","err","message","handleCancel","confirm","cancel","args","openIdIf","condition","alert","alertId","confirmId","confirmIf","confirmIdIf","prompt","promptId","globalProgress","INITIAL_STATE","loaded","clone","setDisplay","setProgress","Shield","showProgress","shieldOnly","ReactDom","startProgress","startSpin","fontSize","margin","startShield","delay","handleKeyDown","handleSearch","force","trim","isIncrease","val","parseFloat","isPlus","numArr","toString","decimal","tmp","toFixed","onPlus","onMinus","prgs","prgsBar","Row","formatItem","isValidElement","template","options","inputFormat","format","listTransform","valueField","textField","rowData","onInputChange","formatArrayItem","assign","onDoubleClick","onContextMenu","hide","keyPath","fieldStyle","fieldsSize","getRowId","rowIdField","formatField","resizeFields","tableHeaderNode","each","isAutoLayout","formatFields","mapValues","selector","rid","rowSelected","handleRowSelect","handleWindowResize","handleSort","onSort","sort","sortField","sortDesc","desc","newSortField","currentTarget","sortObj","handleRowClick","onRowClick","handleRowDoubleClick","onRowDoubleClick","handleRowMouseOver","onRowMouseOver","handleRowMouseOut","onRowMouseOut","handleContextMenu","onRowContextMenu","window","addEventListener","prevData","prevClassName","removeEventListener","caption","rows","rowClassName","rowStyle","forceRefresh","onScroll","autoLayout","refreshAll","sortable","orderBy","sortKeyPath","end","sum","values","fieldWidth","_className","_rowStyle","isPlainObject","element","handleTabChange","defaultContents","defaultContent","tabClassName","line","autoScrollComingUp","disableAutoScroll","store","listen","nextState","maxLines","scrollIntoView","lines","cols","containerWidth","containerHeight","updateDimension","renderItem","overlay","tileStyle","marginTop","marginLeft","marginRight","marginBottom","isLast","tile","tileOverlay","renderOverlay","eventArgs","itemWidth","itemHeight","tileSize","el","onTimeChange","onIntervalChange","eventGroups","events","group","zoom","autoRun","getLabelForToggle","onText","offText","selectNode","allowToggle","idIndex","findIndex","isSelected","renderTree","normalize","listPropName","transformPropName","transform","listToTransform","transformCfg","omit","mapKeys","invert","withPaginate","wrapperClassName","pageSize","paginate","enablePagination","pageNavProps","propsToPass","ceil","defaultName","wireSet","wire","wireValue","wireChecked","propsCfg","propName","linkName","enforceHandler","capitalize","masterDefaultValue","valueLink","isControlled","eventData","before","displayName","requestChange","curVal","propsToIgnore","newProps","LinkedStateMixin","linkState","LinkedDeepStateMixin","requestDeepChange","linkDeepState","createInstance","getInstance","defaultFailParser","json","code","errors","defaultSuccessParser","defaultGt","mapping","one","req","prefix","parseFail","parseSuccess","eh","globalEh","url","Promise","resolve","$","ajax","xhr","responseJSON","responseText","status","tOptions","Error","getMsg","res","all","reqArr","reqItem","series","gt","some","HTMLInputElement","FormData","formData","append","contentType","processData","progress","reject","iframe","doc","contentDocument","innerHTML","firstChild","nodeValue","removeChild","parse","form","method","enctype","encoding","insertAfter","cloneNode","submit","Ajaxer","setupPrefix","setupResponseParser","setupErrorHandler","instances","newInstance","ah","flatpickrToMomentToken","defaultEt","codes","_getMsg","ft","getSystemMsg","ErrorHandler","setupErrorTranslate","subscribe","columnLayout","up","down","register","which","tr","closest","td","targetItem","prev","next","column","isInteger","retrieveFormData","getErrorMessage","validateData","validateForm","UNIT_BYTE","n","Number","inputs","inputType","errCode","errParams","test","parsedValue","hasMin","hasMax","extName","toLower","extname","mimeType","Array","lowerCaseExt","isPass","isRangedExt","formatToCheck","warn","contains","initialState","envCfg","env","Routes","default","Examples","formatXml","xml","reg","pad","match","Buttons","isPress","click","newPress","len","$test","Radios","console","Menus","Lists","Navs","SubNavs","example","updateStateInfo","component","omitBy","startsWith","isHtml","movie","tv","producers","api_key","query","results","total_results","fail","phones","movies","actors","forms","field1","settings","renderDemoSettings","newSettings","layoutProp","accept","field2","field3","field4","Query","app","APPLICATIONS","MultiInputCustom","queries","BasicForm","year","director","languages","reviews","genre","notes","scores","imdb","rottenTomatoes","withActions","classNames","c","cn","clear","directedIn","ComplexForm","summary","misc","enableAll","handleDemoSettingChange","types","a","b","age","email","interest","job","feedback","datetime","Datepicker","value1","subscribe1","subscribe2","subscribe3","handleChangeName","INITIAL_DATA","showRoot","handleLabelClick","handleSelectChange","l","Panels","selectEntry","toggleOpen","setPath","newData","ListWithPageNav","multicols","handleSelectionChange","defaultCurrent","movieId","RateMovieDialog","onDone","mixins","getInitialState","rating","changed","rateMovie","showRating","dialog","confirmed","openChild","openParent","openPopover","closePopover","fetchMovieDetails","source","menuItems","MENU","advancedForm","table","tabs","hierarchy","modal","cssDemo","NoMatch","handleThemeChange","theme","location","pathname","currentTheme","tag","FIELDS","adult","true","false","original_language","lang","popularity","release_date","PagedTable","loadList","newState","sortBy","total_pages","rate","SelectableTable","clicked","DataGrid","addGridEvent","removeGridEvent","currentTab","oldie","newTab","renderActors","renderDirectors","directors","renderTabContent","IMAGES","DivBase","FixedNumberedTiles","hasMore","AutoImageTiles","ImageGalleryStaticDataWithAutoPlayAndRepeat","prevStart","moveBackward","handleMove","Poster","PosterGalleryDynamicData","_data","poster_path"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAA0C;AAC1C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8E;;;;;;;;;;;;;;;;;;;;AC7QA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,mBAAAC,CAAQ,0DAAR,EAAoBC,SAApB,CAA8B,kCAA9B,CAAZ;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsEMC,W;;;;;;;;;;;;;;oMA0BFC,Y,GAAe,UAACC,MAAD,EAAY;AAAA,8BACU,MAAKC,K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","file":"app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./af\": \"../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport { SIMPLE_VALUE_PROP, SIMPLE_ARRAY_PROP } from '../consts/prop-types'\r\nimport {wire} from '../hoc/prop-wire'\r\nimport normalizeList from '../hoc/list-normalizer'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/button-group')\r\n\r\n\r\n/**\r\n * A React Button Group\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {Array.<object>} list - List of options\r\n * @param {string | number} list.value - item value\r\n * @param {string} list.text - item display text\r\n * @param {string} list.className - classname for item button\r\n * @param {string} [className] - Classname for the container\r\n * @param {string|number|Array.<string|number>} [defaultValue] - Default selected value (array if multi=true)\r\n * @param {string|number|Array.<string|number>} [value] - Current selected value (array if multi=true)\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean|Array.<string|number>} [disabled=false] - Is selection disabled?\r\n * @param {boolean} [multi=false] - Allow multi-selection?\r\n * @param {function} [onChange] - Callback function when value is selected. <br> Required when value prop is supplied\r\n * @param {string|number|Array.<string|number>} onChange.value - selected value (array if multi=true)\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string|number|Array.<string|number>} onChange.eventInfo.before - previously selected value (array if multi=true)\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {ButtonGroup} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            type: 'movie',\r\n            types: ['tv']\r\n        }\r\n    },\r\n    handleChange(name, val) {\r\n        this.setState({[name]:val})\r\n    },\r\n    render() {\r\n        const {type, types} = this.state\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label>Select a type</label>\r\n                <ButtonGroup\r\n                    id='type'\r\n                    className='column'\r\n                    list={[\r\n                        {value:'movie', text:'Movie'},\r\n                        {value:'tv', text:'TV'},\r\n                        {value:'actors', text:'Actors'}\r\n                    ]}\r\n                    onChange={this.handleChange.bind(this,'type')}\r\n                    value={type} />\r\n            </div>\r\n            <div>\r\n                <label>Select multiple types (movie disabled)</label>\r\n                <ButtonGroup\r\n                    id='types'\r\n                    className='column'\r\n                    list={[\r\n                        {value:'movie', text:'Movie'},\r\n                        {value:'tv', text:'TV'},\r\n                        {value:'actors', text:'Actors'}\r\n                    ]}\r\n                    multi\r\n                    disabled={['movie']}\r\n                    onChange={this.handleChange.bind(this,'types')}\r\n                    value={types} />\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass ButtonGroup extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        list: PropTypes.arrayOf(PropTypes.shape({\r\n            value: SIMPLE_VALUE_PROP,\r\n            text: PropTypes.node,\r\n            className: PropTypes.string\r\n        })),\r\n        className: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            SIMPLE_VALUE_PROP,\r\n            SIMPLE_ARRAY_PROP\r\n        ]),\r\n        disabled: PropTypes.oneOfType([\r\n            PropTypes.bool,\r\n            SIMPLE_ARRAY_PROP\r\n        ]),\r\n        multi: PropTypes.bool,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n        multi: false\r\n    };\r\n\r\n    handleSelect = (newVal) => {\r\n        const {onChange, multi, value} = this.props\r\n        onChange(multi ?\r\n            (_.includes(value, newVal)?_.without(value, newVal):[...value, newVal])\r\n            : newVal)\r\n    };\r\n\r\n    render() {\r\n        const {id, list, value, disabled, multi, className} = this.props\r\n\r\n        return <div id={id} className={cx('c-button-group', className)}>\r\n            {\r\n                _.map(list, ({value:itemValue, text:itemText, className:itemClassName}) => {\r\n                    const selected = multi ? _.includes(value, itemValue) : value===itemValue\r\n                    const isDisabled = (\r\n                        (_.isBoolean(disabled) && disabled) ||\r\n                        (_.isArray(disabled) && _.includes(disabled, itemValue))\r\n                    )\r\n                    return <button\r\n                        key={itemValue}\r\n                        className={cx('thumb', {selected}, itemClassName)}\r\n                        onClick={this.handleSelect.bind(this, itemValue)}\r\n                        disabled={isDisabled}>\r\n                        {itemText}\r\n                    </button>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default wire(normalizeList(ButtonGroup), 'value', ({multi})=>(multi?[]:''))","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport { SIMPLE_VALUE_PROP, SIMPLE_ARRAY_PROP } from '../consts/prop-types'\r\nimport { wire } from '../hoc/prop-wire'\r\nimport normalizeList from '../hoc/list-normalizer'\r\nimport Checkbox from './checkbox'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/checkbox-group')\r\n\r\n/**\r\n * A React Checkbox Group\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {Array.<object>} list - List of items\r\n * @param {string | number} list.value - item value\r\n * @param {renderable} list.text - item display text\r\n * @param {string} list.className - item classname\r\n * @param {renderable} [list.children] - things to render after the label\r\n * @param {string} [className] - Classname for the container\r\n * @param {Array.<string|number>} [defaultValue] - Default checked values\r\n * @param {Array.<string|number>} [value] - Current checked values\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean|Array.<string|number>} [disabled=false] - true/false if disable all checkboxes, or array of values to disable specific checkboxes\r\n * @param {boolean} [toggleAll=false] - Show toggle all checkbox?\r\n * @param {string} [toggleAllText='All'] - Text shown in toggle all label\r\n * @param {function} [onChange] - Callback function when any of the checkboxes is ticked/unticked. <br> Required when value prop is supplied\r\n * @param {Array.<string|number>} onChange.values - current checked values\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {Array.<string|number>} onChange.eventInfo.before - previously checked values\r\n * @param {string|number} onChange.eventInfo.value - which value triggered change?\r\n * @param {boolean} onChange.eventInfo.checked - checked or unchecked?\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {CheckboxGroup} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movies:[1]\r\n        }\r\n    },\r\n    handleChange(movies) {\r\n        this.setState({movies})\r\n    },\r\n    render() {\r\n        let {movies} = this.state;\r\n        return <div>\r\n            <label>Select movies</label>\r\n            <CheckboxGroup\r\n                list={[\r\n                    {value:1,text:'1d - Finding Dory (selected by default, cannot deselect)'},\r\n                    {value:2,text:'2 - Wizard of Oz'},\r\n                    {value:3,text:'3 - Citizen Kane'}\r\n                ]}\r\n                onChange={this.handleChange}\r\n                value={movies}\r\n                disabled={[1]}/>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass CheckboxGroup extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        list: PropTypes.arrayOf(PropTypes.shape({\r\n            value: SIMPLE_VALUE_PROP,\r\n            text: PropTypes.node,\r\n            className: PropTypes.string,\r\n            children: PropTypes.node\r\n        })).isRequired,\r\n        className: PropTypes.string,\r\n        value: SIMPLE_ARRAY_PROP,\r\n        disabled: PropTypes.oneOfType([\r\n            PropTypes.bool,\r\n            SIMPLE_ARRAY_PROP\r\n        ]),\r\n        toggleAll: PropTypes.bool,\r\n        toggleAllText: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n        toggleAll: false,\r\n        toggleAllText: 'All'\r\n    };\r\n\r\n    getDisabledItems = () => {\r\n        const {disabled, list} = this.props\r\n        let disabledItems = []\r\n        if (_.isBoolean(disabled)) {\r\n            if (disabled) {\r\n                disabledItems = _.map(list, 'value')\r\n            }\r\n            else {\r\n                disabledItems = []\r\n            }\r\n        }\r\n        else if (_.isArray(disabled)) {\r\n            disabledItems = disabled\r\n        }\r\n        return disabledItems\r\n    };\r\n\r\n    getSelectableItems = () => {\r\n        const {list} = this.props\r\n        return _.without(_.map(list, 'value'), ...this.getDisabledItems())\r\n    };\r\n\r\n    handleChange = (value, checked) => {\r\n        const {value:curValue, onChange} = this.props\r\n        const newValue = (checked ? [...curValue, value] : _.without(curValue, value))\r\n        onChange(newValue, {value, checked})\r\n    };\r\n\r\n    handleToggleAll = (checked) => {\r\n        const {onChange, value} = this.props\r\n        const disabledItems = this.getDisabledItems()\r\n        const selectableItems = this.getSelectableItems()\r\n        const disabledSelectedItems = _.intersection(disabledItems, value)\r\n        const newValue = (checked ? [...selectableItems, ...disabledSelectedItems] : disabledSelectedItems)\r\n        onChange(newValue, {checked})\r\n    };\r\n\r\n    render() {\r\n        const {id, toggleAll, toggleAllText, className, list, value} = this.props\r\n        const disabledItems = this.getDisabledItems()\r\n        const numSelected = _.without(value, ...disabledItems).length\r\n        const numSelectable = this.getSelectableItems().length\r\n\r\n        return <div id={id} className={cx('c-checkbox-group', className)}>\r\n            {\r\n                toggleAll && numSelectable>0 && <span className='all list-item'>\r\n                    <Checkbox\r\n                        id={id+'-_all'}\r\n                        checked={numSelected>0}\r\n                        className={cx({partial:numSelected>0 && numSelected<numSelectable})}\r\n                        onChange={this.handleToggleAll} />\r\n                    <label htmlFor={id+'-_all'}>{toggleAllText}</label>\r\n                </span>\r\n            }\r\n            {\r\n                _.map(list, ({value:itemValue, text:itemText, className:itemClassName, children}) => {\r\n                    return <span className={cx('list-item', itemClassName)} key={itemValue}>\r\n                        <Checkbox\r\n                            id={id+'-'+itemValue}\r\n                            onChange={this.handleChange.bind(this, itemValue)}\r\n                            value={itemValue}\r\n                            checked={value.indexOf(itemValue)>=0}\r\n                            disabled={_.includes(disabledItems, itemValue)} />\r\n                        <label htmlFor={id+'-'+itemValue}>{itemText}</label>\r\n                        {children}\r\n                    </span>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default wire(normalizeList(CheckboxGroup), 'value', [])","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport $ from 'jquery'\r\n\r\nimport {wireChecked} from '../hoc/prop-wire'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/checkbox')\r\n\r\n/**\r\n * A React Checkbox\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {boolean} [defaultChecked] - Default checked value\r\n * @param {boolean} [checked] - Current checked value\r\n * @param {object} [checkedLink] - Link to update check value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} checkedLink.value - value to update\r\n * @param {function} checkedLink.requestChange - function to request check value change\r\n * @param {boolean} [disabled=false] - Is checkbox disabled?\r\n * @param {function} onChange  - Callback function when checkbox is ticked/unticked. <br> Required when value prop is supplied\r\n * @param {boolean} onChange.checked - checked?\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {boolean} onChange.eventInfo.before - was checked or unchecked?\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {Checkbox} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {subscribe:false}\r\n    },\r\n    handleChange(subscribe) {\r\n        this.setState({subscribe})\r\n    },\r\n    render() {\r\n        const {subscribe} = this.state;\r\n        return <div className='c-flex aic'>\r\n            <label htmlFor='subscribe'>Would you like to subscribe to this newsletter?</label>\r\n            <Checkbox id='subscribe'\r\n                onChange={this.handleChange}\r\n                checked={subscribe}/>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass Checkbox extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        checked: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.id && !this.props.disabled) {\r\n            this.getLabelForCheckbox().on('click', (evt) => {\r\n                this.handleChange(evt)\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.getLabelForCheckbox().off()\r\n    }\r\n\r\n    getLabelForCheckbox = () => {\r\n        return $(this.node).parent().find('label[for=\"'+this.props.id+'\"]')\r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        evt.stopPropagation()\r\n        const {onChange, checked} = this.props\r\n        onChange(!checked)\r\n    };\r\n\r\n    render() {\r\n        const {id, className, checked, disabled} = this.props\r\n        return <i\r\n            id={id}\r\n            ref={ref=>{ this.node=ref }}\r\n            onClick={disabled?null:this.handleChange}\r\n            className={cx('c-checkbox', 'fg', checked?'fg-checkbox':'fg-checkbox-outline', {disabled}, className)} />\r\n    }\r\n}\r\n\r\n\r\nexport default wireChecked(Checkbox)","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport _str from 'underscore.string'\r\n\r\nimport { LIST_PROP, SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport {wire} from '../hoc/prop-wire'\r\nimport normalizeList from '../hoc/list-normalizer'\r\nimport Popover from './popover'\r\nimport Search from './search'\r\nimport CheckboxGroup from './checkbox-group'\r\nimport {subscribe} from '../utils/outside-event'\r\n\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/combobox')\r\n\r\nclass PopupList extends React.Component {\r\n    static propTypes = {\r\n        info: PropTypes.oneOfType([\r\n            PropTypes.node,\r\n            PropTypes.func\r\n        ]),\r\n        infoClassName: PropTypes.string,\r\n        list: LIST_PROP,\r\n        selected: PropTypes.oneOfType([\r\n            PropTypes.arrayOf(SIMPLE_VALUE_PROP),\r\n            SIMPLE_VALUE_PROP\r\n        ]),\r\n        search: PropTypes.object,\r\n        multiSelect: PropTypes.object,\r\n        onSelect: PropTypes.func.isRequired,\r\n        onClickOutside: PropTypes.func.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        multiSelect: {enabled:false},\r\n        search: {enabled:false}\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handler = subscribe(this.node)\r\n            .onOutside(this.onClickOutside)\r\n\r\n        this.focusSearchInput()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusSearchInput()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.handler.unsubscribe()\r\n    }\r\n\r\n    onClickOutside = (target) => {\r\n        this.props.onClickOutside(target)\r\n    };\r\n\r\n    onSelect = (selected, data) => {\r\n        this.props.onSelect(selected, data)\r\n    };\r\n\r\n    focusSearchInput = () => {\r\n        if (this.searchComp) {\r\n            this.searchComp._component.focus()\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {selected, search, multiSelect, list, info, infoClassName} = this.props\r\n        const infoText = _.isFunction(info) ? info(list) : info\r\n\r\n        return <div ref={ref=>{ this.node=ref }} className='c-combo-list c-flex fdc'>\r\n            {search.enabled && <Search className='asc' ref={ref=>{ this.searchComp=ref }} {...search} />}\r\n            <div className='list'>\r\n                {\r\n                    multiSelect.enabled ? <CheckboxGroup\r\n                        {...multiSelect}\r\n                        list={list}\r\n                        onChange={this.onSelect}\r\n                        value={selected} />\r\n                    : <div className='c-flex fdc'>\r\n                        {\r\n                            _.map(list, ({value, text}) => {\r\n                                return <span\r\n                                    key={value}\r\n                                    className={cx('list-item', {selected:selected===value})}\r\n                                    onClick={this.onSelect.bind(this, value, {text})}>\r\n                                    {text}\r\n                                </span>\r\n                            })\r\n                        }\r\n                    </div>\r\n                }\r\n                {infoText && <div className={cx('c-info', infoClassName)}>{infoText}</div>}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n/**\r\n * A React Combobox that can dynamically load (via callback function) and update list when user types into input.<br>\r\n * Can be seen as a dropdown with typing/filtering feature.\r\n * @constructor\r\n * @param {string} [id] - Input element #id\r\n * @param {string} [name] - Input element name\r\n * @param {Array.<object>} list - List of items\r\n * @param {string | number} list.value - item value\r\n * @param {string} list.text - item display text\r\n * @param {string} [className] - Classname for the container\r\n * @param {renderable | function} [info] - React renderable object or function producing renderable object, display additional information about the list\r\n * @param {array.<object>} info.list - argument for **info** function, list of currently displayed items\r\n * @param {string} [infoClassName] - Assign className to info node\r\n * @param {string | number | Array.<string|number>} [defaultValue] - Default selected value\r\n * @param {string | number | Array.<string|number>} [value] - Current selected value\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with {@link module:linked-state-mixins linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {object} [multiSelect] - multi-select configuration\r\n * @param {boolean} [multiSelect.enabled=false] - Allow multi-select (checkbox)?\r\n * @param {boolean} [multiSelect.toggleAll=false] - Allow toggle all?\r\n * @param {string} [multiSelect.toggleAllText='All'] - Text to show on toggle all label\r\n * @param {object} [search] - search/filter configuration\r\n * @param {boolean} [search.enabled=false] - Allow search/filter list?\r\n * @param {string} [search.placeholder] - Placeholder for search input\r\n * @param {boolean} [search.enableClear=true] - Can this field be cleared?\r\n * @param {boolean} [search.interactive=true] - Determine if search is interactive\r\n * @param {number} [search.delaySearch=750] - If search is interactive, this setting will trigger onSearch event after *delaySearch* milliseconds<br>\r\n * true: onSearch event called as user types; <br>\r\n * false: onSearch event called when user hits enter\r\n * @param {function} [search.onSearch] - Callback function when search is changed. <br> Required when value prop is supplied\r\n * @param {string|number} search.onSearch.search - updated search value\r\n * @param {boolean} [required=false] - Is this field mandatory?\r\n * @param {boolean} [disabled=false] - Is this field disabled?\r\n * @param {boolean} [enableClear=true] - Can this field can be cleared?\r\n * @param {string} [placeholder] - Placeholder for input\r\n * @param {function} [onChange] - Callback function when item is selected. <br> Required when value prop is supplied\r\n * @param {string | number | Array.<string|number>} onChange.value - selected value(s)\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string | number | Array.<string|number>} onChange.eventInfo.before - previously selected value(s)\r\n * @param {string} onChange.eventInfo.text - currently selected text\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport $ from 'jquery'\r\nimport cx from 'classnames'\r\nimport {Combobox} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movie: {\r\n                selected: 'test',\r\n                eventInfo: null,\r\n                info: null,\r\n                error: false,\r\n                list: [{value:'test', text:'TEST'}]\r\n            },\r\n            tv: {\r\n                selected: [],\r\n                eventInfo: null,\r\n                info: null,\r\n                error: false,\r\n                list: []\r\n            }\r\n        }\r\n    },\r\n    handleChange(field, value, eventInfo) {\r\n        this.setState(\r\n            im(this.state)\r\n                .set(field+'.selected', value)\r\n                .set(field+'.eventInfo', eventInfo)\r\n                .value()\r\n        )\r\n    },\r\n    handleSearch(type, text) {\r\n        // ajax to fetch movies, but doesn't need to be ajax\r\n        this.setState(\r\n            im(this.state)\r\n                .set(type+'.list', [])\r\n                .set(type+'.error', false)\r\n                .set(type+'.info', 'Loading...')\r\n                .value(),\r\n            () => {\r\n                $.get(\r\n                    `https://api.themoviedb.org/3/${text?'search':'discover'}/${type}`,\r\n                    {\r\n                        api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                        query: text\r\n                    })\r\n                    .done(({results:list=[], total_results:total=0})=>{\r\n                        if (total <= 0) {\r\n                            this.setState(\r\n                                im(this.state)\r\n                                    .set(type+'.list', [])\r\n                                    .set(type+'.info', `No ${type} found`)\r\n                                    .value()\r\n                            )\r\n                        }\r\n                        else {\r\n                            this.setState(\r\n                                im(this.state)\r\n                                    .set(type+'.list', _.map(list, ({id, name, title})=>({value:id, text:title||name})))\r\n                                    .set(type+'.info', total>10 ? `There are ${total} results, only show the first 10 records` : null)\r\n                                    .value()\r\n                            )\r\n                        }\r\n                    })\r\n                    .fail((xhr)=>{\r\n                        this.setState(im.set(this.state, type+'.error', xhr.responseText))\r\n                    })\r\n            }\r\n        )\r\n    },\r\n    render() {\r\n        return <div className='c-form'>\r\n            {\r\n                ['movie', 'tv'].map(type=>{\r\n                    let {info, error, list, selected} = this.state[type]\r\n\r\n                    return <div key={type}>\r\n                        <label htmlFor={type}>Select {type}</label>\r\n                        <Combobox\r\n                            id={type}\r\n                            required={true}\r\n                            onChange={this.handleChange.bind(this, type)}\r\n                            search={{\r\n                                enabled: true,\r\n                                onSearch:this.handleSearch.bind(this, type)\r\n                            }}\r\n                            info={info}\r\n                            infoClassName={cx({'c-error':error})}\r\n                            list={list}\r\n                            placeholder={type}\r\n                            enableClear={type==='tv'}\r\n                            multiSelect={{\r\n                                enabled:type==='tv',\r\n                                toggleAll:true,\r\n                                toggleAllText:'All'\r\n                            }}\r\n                            value={selected} />\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n})\r\n\r\n */\r\nclass Combobox extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        list: LIST_PROP,\r\n        className: PropTypes.string,\r\n        info: PropTypes.oneOfType([\r\n            PropTypes.node,\r\n            PropTypes.func\r\n        ]),\r\n        infoClassName: PropTypes.string,\r\n        value: PropTypes.oneOfType([\r\n            SIMPLE_VALUE_PROP,\r\n            PropTypes.arrayOf(SIMPLE_VALUE_PROP)\r\n        ]),\r\n        multiSelect: PropTypes.shape({\r\n            enabled: PropTypes.bool,\r\n            toggleAll: PropTypes.bool,\r\n            toggleAllText: PropTypes.string\r\n        }),\r\n        search: PropTypes.shape({\r\n            enabled: PropTypes.bool,\r\n            placeholder: PropTypes.string,\r\n            onSearch: PropTypes.func,\r\n            interactive: PropTypes.bool,\r\n            enableClear: PropTypes.bool,\r\n            delaySearch: PropTypes.number\r\n        }),\r\n        required: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        enableClear: PropTypes.bool,\r\n        placeholder: PropTypes.string,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: [],\r\n        multiSelect: {\r\n            enabled: false\r\n        },\r\n        search: {\r\n            enabled: false\r\n        },\r\n        disabled: false,\r\n        enableClear: true,\r\n        required: false\r\n    };\r\n\r\n    state = {\r\n        isListOpen: false,\r\n        searchText: '',\r\n        searchIsSelected: true,\r\n        cachedValueText: {}\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {multiSelect:{enabled:multiSelectable}, value:nextValue, list:nextList} = nextProps\r\n        const {value, list} = this.props\r\n        const {searchIsSelected, cachedValueText} = this.state\r\n        const valueChanged = JSON.stringify(value) !== JSON.stringify(nextValue)\r\n        const listChanged = JSON.stringify(list) !== JSON.stringify(nextList)\r\n\r\n        if (valueChanged || listChanged) {\r\n            log.debug('componentWillReceiveProps::value/list changed', {value, nextValue, list, nextList})\r\n            this.setState({\r\n                searchIsSelected: valueChanged ? true : searchIsSelected,\r\n                cachedValueText: { // cache old text in case returned new list (via onSearch) does not include the old value\r\n                    ..._.reduce(multiSelectable ? value : [value], (acc, v)=>{\r\n                        return {\r\n                            ...acc,\r\n                            [v]: _.get(_.find(list, {value:v}), 'text', v)\r\n                        }\r\n                    }, {}),\r\n                    ...cachedValueText\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {search:{delaySearch=750, onSearch}} = this.props\r\n        const {searchIsSelected, searchText, isListOpen} = this.state\r\n        const {searchText:prevSearchText, isListOpen:wasListOpen} = prevState\r\n\r\n        log.debug('componentDidUpdate', prevState, this.state, prevProps, this.props)\r\n        if (isListOpen) {\r\n            log.debug('componentDidUpdate::isListOpen')\r\n            if (!wasListOpen) {\r\n                log.debug('componentDidUpdate::was closed')\r\n                if (onSearch) {\r\n                    log.debug('performing search when list is opened')\r\n                    onSearch(searchText)\r\n                }\r\n                else {\r\n                    this.showList()\r\n                }\r\n            }\r\n            else if (!searchIsSelected && searchText !== prevSearchText) {\r\n                log.debug('componentDidUpdate::search changed', {searchText, prevSearchText})\r\n                if (onSearch) {\r\n                    if (this.timer) {\r\n                        log.debug('clearing search timer')\r\n                        clearTimeout(this.timer)\r\n                        delete this.timer\r\n                    }\r\n                    this.timer = setTimeout(()=>{\r\n                        this.timer = null\r\n                        log.debug('performing search', searchText)\r\n                        onSearch(searchText)\r\n                    }, delaySearch)\r\n                }\r\n                else {\r\n                    this.showList(true)\r\n                }\r\n            }\r\n            else {\r\n                this.showList(true)\r\n            }\r\n        }\r\n        else if (wasListOpen) {\r\n            Popover.close()\r\n        }\r\n    }\r\n\r\n    onSelect = (selected, data) => {\r\n        const {onChange, multiSelect:{enabled:multiSelectable}} = this.props\r\n\r\n        if (multiSelectable) {\r\n            onChange(selected, data)\r\n        }\r\n        else {\r\n            this.setState({isListOpen:false, searchIsSelected:true}, () => {\r\n                onChange(selected, data)\r\n                this.input.focus()\r\n            })\r\n        }\r\n    };\r\n\r\n    onInput = (evt) => {\r\n        const searchText = evt.target ? evt.target.value : evt\r\n        this.setState({isListOpen:true, searchText, searchIsSelected:false})\r\n    };\r\n\r\n    getListPosition = () => {\r\n        const input = this.input.getBoundingClientRect()\r\n        return {x:input.left, y:input.bottom}\r\n    };\r\n\r\n    showList = (updateOnly) => {\r\n        const {searchText} = this.state\r\n        let {list, value, search, info, infoClassName, multiSelect} = this.props\r\n        const {onSearch, enabled:enableSearch} = search\r\n        const popupWidth = this.input.getBoundingClientRect().width\r\n\r\n        if (enableSearch && !onSearch) {\r\n            // not dynamic search, try to filter list by input value\r\n            list = _.filter(list, item=>{\r\n                return item.text.toLowerCase().indexOf(searchText.toLowerCase()) >= 0\r\n            })\r\n        }\r\n\r\n        Popover.open(\r\n            this.getListPosition(),\r\n            <PopupList\r\n                list={list}\r\n                multiSelect={multiSelect}\r\n                search={multiSelect.enabled && enableSearch ? {\r\n                    enableClear: true,\r\n                    interactive: true,\r\n                    ...search,\r\n                    value: searchText,\r\n                    onSearch: this.onInput\r\n                } : {enabled:false}}\r\n                selected={value}\r\n                onSelect={this.onSelect}\r\n                onClickOutside={this.handleListClickOutside}\r\n                info={info} infoClassName={infoClassName} />,\r\n            {\r\n                pointy: false,\r\n                className: 'no-shadow',\r\n                updateOnly,\r\n                style: {\r\n                    minWidth: popupWidth,\r\n                    borderWidth: 1,\r\n                    borderColor: '#a9a9a9',\r\n                    borderStyle: 'solid',\r\n                    borderRadius: '5px',\r\n                    padding: 0,\r\n                    backgroundColor: 'rgb(255, 255, 255)',\r\n                    color: 'inherit',\r\n                    overflowX: 'hidden'\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n    handleListClickOutside = (target) => {\r\n        if (target!==this.clearIcon && target!==this.toggleIcon && target!==this.input) {\r\n            this.toggleList()\r\n        }\r\n    };\r\n\r\n    toggleList = () => {\r\n        const {isListOpen} = this.state\r\n        this.setState({isListOpen:!isListOpen, searchText:'', searchIsSelected:true})\r\n    };\r\n\r\n    formatDisplayText = () => {\r\n        const {list, value, multiSelect} = this.props\r\n        const {cachedValueText, searchIsSelected, searchText} = this.state\r\n\r\n        if (multiSelect.enabled) {\r\n            const items = _(value).map(item=>_.find(list, {value:item})||{value:item, text:cachedValueText[item]}).map('text').value()\r\n            const itemsToShow = _.take(items, 3)\r\n\r\n            return itemsToShow.join(', ') + (items.length>3?` (+${items.length-3})`:'')\r\n        }\r\n        else {\r\n            let formatted = ''\r\n            if (searchIsSelected) {\r\n                if (value) {\r\n                    let selectedItem = null\r\n                    selectedItem = _.find(list, {value})||{value, text:cachedValueText[value]}\r\n                    formatted = selectedItem ? selectedItem.text : ''\r\n                }\r\n            }\r\n            else {\r\n                formatted = searchText\r\n            }\r\n            return formatted\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            id, name, className, required, placeholder, enableClear, /* defaultValue,*/\r\n            disabled, list, value, multiSelect: {enabled:multiSelectable}, search: {enabled:enableSearch}\r\n        } = this.props\r\n\r\n        const displayText = this.formatDisplayText(list, value)\r\n\r\n        return <span className={cx('c-combobox', className, {multi:multiSelectable, clearable:enableClear})}>\r\n            <input\r\n                type='text'\r\n                ref={(ref)=>{ this.input=ref }}\r\n                id={id}\r\n                name={name}\r\n                className={cx({invalid:required && _str.isBlank(displayText)})}\r\n                onChange={!multiSelectable && enableSearch ? this.onInput : ()=>{}}\r\n                required={required}\r\n                placeholder={placeholder}\r\n                value={displayText}\r\n                disabled={disabled} />\r\n            {!disabled && <span className='actions c-flex aic'>\r\n                {enableClear && <i className='fg fg-close' ref={ref=>{ this.clearIcon=ref }} onClick={this.onSelect.bind(this, multiSelectable?[]:'', {text:''})} />}\r\n                <i className='fg fg-arrow-bottom' ref={ref=>{ this.toggleIcon=ref }} onClick={this.toggleList} />\r\n            </span>}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport default wire(normalizeList(Combobox), 'value', ({multiSelect})=>(_.get(multiSelect, 'enabled', false)?[]:''))","/**\r\n  * @module contextmenu\r\n  * @description A module to help with opening/closing **global** context menu:\r\n  * * When user clicks on a menu item, callback function will be fired\r\n  * * when user clicks elsewhere on screen, menu will be closed\r\n  *\r\n  * Note. There can only be one context menu displayed on screen at one point in time\r\n  */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport {subscribe} from '../utils/outside-event'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/contextmenu')\r\n\r\nlet globalContextMenu = null\r\n\r\nclass Contextmenu extends React.Component {\r\n    static propTypes = {\r\n    };\r\n\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        this.addHandler()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.handler.unsubscribe()\r\n        if (this.isOpen()) {\r\n            this.addHandler()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.handler.unsubscribe()\r\n    }\r\n\r\n    onClickInside = (target) => {\r\n        let targetId = target.id\r\n        let {menu} = this.state\r\n\r\n        let targetMenuItem = _.find(menu, {id:targetId})\r\n\r\n        if (targetMenuItem && targetMenuItem.action) {\r\n            targetMenuItem.action()\r\n            this.setState({menu:[]})\r\n        }\r\n    };\r\n\r\n    onClickOutside = () => {\r\n        this.setState({menu:[]})\r\n    };\r\n\r\n    open = (position, menu, id) => {\r\n        this.setState({menu, position, id})\r\n    };\r\n\r\n    isOpen = () => {\r\n        return !_.isEmpty(this.state.menu)\r\n    };\r\n\r\n    addHandler = () => {\r\n        this.handler = subscribe(this.node)\r\n            .onInside(this.onClickInside)\r\n            .onOutside(this.onClickOutside)\r\n    };\r\n\r\n    render() {\r\n        let {menu, position, id} = this.state\r\n\r\n        if (!this.isOpen()) {\r\n            return null\r\n        }\r\n        else {\r\n            let {x, y} = position\r\n            let style={left:x+'px', top:y+'px'}\r\n            return <ul ref={ref=>{ this.node=ref }} id={id} className='c-contextmenu c-menu sub' style={style}>\r\n                {\r\n                    _.map(menu, ({id:itemId, text, className, isHeader, disabled}, idx) => {\r\n                        return <li className={cx(className, {header:isHeader, disabled})} id={itemId} key={idx}>{text || id}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    /**\r\n     * Open context menu\r\n     * @param {event|object} evt - event or simuated event with location information\r\n     * @param {number} evt.pageX - x position to open menu at\r\n     * @param {number} evt.pageY - y position to open menu at\r\n     * @param {Array.<object>} menu - Menu to show on screen<br>Each item has the follow properties:\r\n     * @param {string} menu.id - menu item id/key\r\n     * @param {renderable} [menu.text=id] - menu item text\r\n     * @param {function} [menu.action] - function to call when item is clicked\r\n     * @param {string} [menu.className] - className for this item\r\n     * @param {boolean} [menu.isHeader=false] - whether this item denotes a header for a group of items\r\n     * @param {boolean} [menu.disabled=false] - whether this item is disabled\r\n     * @param {string} [id] - id for the contextmenu\r\n     *\r\n     * @example\r\n     *\r\nimport {Contextmenu} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {}\r\n    },\r\n    fetchMovieDetails(source) {\r\n        // load data from source\r\n        this.setState({source})\r\n    },\r\n    handleContextMenu(evt) {\r\n        let menuItems = _.map(['imdb','rotten'], source=>{\r\n            return {id:source, text:`Fetch ${source} Data`, action:this.fetchMovieDetails.bind(this,source)}\r\n        })\r\n        Contextmenu.open(evt, menuItems);\r\n    },\r\n    render() {\r\n        return <span className='c-link' onContextMenu={this.handleContextMenu}>\r\n            Right click on me\r\n        </span>\r\n    }\r\n})\r\n\r\n     */\r\n    open(evt, menu, id) {\r\n        evt.preventDefault && evt.preventDefault()\r\n        if (!globalContextMenu) {\r\n            let node = document.createElement('DIV')\r\n            node.id = 'g-cm-container'\r\n            document.body.appendChild(node)\r\n            globalContextMenu = ReactDOM.render(\r\n                <Contextmenu />,\r\n                document.getElementById('g-cm-container')\r\n            )\r\n        }\r\n        globalContextMenu.open({x:evt.pageX, y:evt.pageY}, menu, id)\r\n    },\r\n\r\n    /**\r\n     * Check if context menu is open\r\n     * @return {boolean} Is open?\r\n     *\r\n     * @example\r\nconsole.log(Contextmenu.isOpen())\r\n     */\r\n    isOpen() {\r\n        return globalContextMenu && globalContextMenu.isOpen()\r\n    },\r\n\r\n\r\n    /**\r\n     * Close context menu if opened\r\n     *\r\n     * @example\r\nContextmenu.close();\r\n     */\r\n    close() {\r\n        globalContextMenu && globalContextMenu.onClickOutside()\r\n    }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport Moment from 'moment'\r\nimport flatpickr from 'flatpickr'\r\nimport flatpickrStyles from 'flatpickr/dist/flatpickr.min.css' // eslint-disable-line no-unused-vars\r\n\r\n// Add more locales here\r\nimport {Mandarin as zh} from 'flatpickr/dist/l10n/zh'\r\n\r\nimport Popover from './popover'\r\nimport {wireValue} from '../hoc/prop-wire'\r\nimport { SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport ih from '../utils/input-helper'\r\nimport {flatpickrToMomentToken} from '../utils/date'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/date-picker')\r\n\r\n\r\nconst DATE_TIME_SUFFIX = {\r\n    daySuffix: /(st)|(nd)|(rd)|(th)/g,\r\n    timeSuffix: /(AM)|(PM)/ig\r\n}\r\n\r\n/**\r\n * A React DatePicker Component, containing validating the input date<br>\r\n * Uses [flatpickr]{@link https://chmln.github.io/flatpickr/#options}\r\n *\r\n * @constructor\r\n * @param {string} [id] - Container element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {string} [defaultValue] - Default selected date\r\n * @param {string} [value] - Current selected date\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean} [allowKeyIn=true] - Allow user key in to the from/to input?\r\n * @param {boolean} [disabled=false] - Is this field disabled?\r\n * @param {boolean} [readOnly=false] - Is this field readonly?\r\n * @param {boolean} [required=false] - Is this field required?\r\n * @param {function} [onChange] - Callback function when date is changed. <br> Required when value prop is supplied\r\n * @param {string} onChange.value - current value\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {object} onChange.eventInfo.before - previously enetered value\r\n * @param {string} [dateFormat='Y-m-d'] - Date format. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n * @param {string} [timeFormat='H:i'] - Time format. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n * @param {boolean} [enableTime=false] - Enable selection and display of time\r\n * @param {boolean} [enableAMPM=false] - Enable AM/PM option on calendar\r\n * @param {string} [locale] - Datepicker locale. Values can be 'en', 'zh', etc. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n * @param {fuction} [t] - Transform/translate error into readable message.<br>\r\n * @param {object} t.params - Parameters relevant to the error code\r\n * @param {string} t.params.field - offending field id\r\n * @param {string} t.params.value - offending field value\r\n * @param {string} t.params.pattern - pattern the value was supposed to follow\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {DatePicker} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            date: '2017-03-20',\r\n            datetime: '2017-03-20 16:01'\r\n        }\r\n    },\r\n    handleChange(field, value) {\r\n        this.setState({[field]: value})\r\n    },\r\n    render() {\r\n        let {date, datetime} = this.state;\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='date'>Select Date</label>\r\n                <DatePicker id='date'\r\n                    onChange={this.handleChange.bind(this,'date')}\r\n                    value={date}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing')\r\n                            return `Please input date`\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }}/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='datetime'>Select Date Time</label>\r\n                <DatePicker id='datetime'\r\n                    onChange={this.handleChange.bind(this,'datetime')}\r\n                    enableTime={true}\r\n                    value={datetime}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing')\r\n                            return `Please input date`\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }}/>\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\n\r\nclass DatePicker extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        value: SIMPLE_VALUE_PROP,\r\n        allowKeyIn: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        readOnly: PropTypes.bool,\r\n        required: PropTypes.bool,\r\n        onChange: PropTypes.func,\r\n        dateFormat: PropTypes.string,\r\n        timeFormat: PropTypes.string,\r\n        enableTime: PropTypes.bool,\r\n        enableAMPM: PropTypes.bool,\r\n        locale: PropTypes.string,\r\n        t: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        dateFormat: 'Y-m-d',\r\n        timeFormat: 'H:i',\r\n        disabled: false,\r\n        readOnly: false,\r\n        required: false,\r\n        allowKeyIn: true,\r\n        enableTime: false,\r\n        enableAMPM: false,\r\n        locale: 'en'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let {value} = props\r\n\r\n        this.state = {\r\n            prevDate: value\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {dateFormat, timeFormat, enableTime, enableAMPM, allowKeyIn:allowInput, locale} = this.props\r\n\r\n        let loc = null\r\n        switch (locale) {\r\n            case 'zh': loc = zh; break\r\n            default: loc = null\r\n        }\r\n\r\n        this.FORMAT = flatpickrToMomentToken(dateFormat, timeFormat, enableTime)\r\n\r\n        if (enableTime) {\r\n            dateFormat = dateFormat + ' ' + timeFormat\r\n        }\r\n\r\n        this.datePicker = flatpickr(this.date, {\r\n            enableTime,\r\n            allowInput,\r\n            dateFormat,\r\n            locale: loc,\r\n            time_24hr: !enableAMPM,\r\n            onChange: ()=>{\r\n                this.handleChange()\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let {value, locale} = nextProps\r\n\r\n        let loc = null\r\n        switch (locale) {\r\n            case 'zh': loc = zh; break\r\n            default: loc = null\r\n        }\r\n\r\n        this.datePicker.set('locale', loc)\r\n        this.datePicker.setDate(this.strToTimestamp(value), false)\r\n        this.setState({\r\n            prevDate: value\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.datePicker.destroy()\r\n    }\r\n\r\n    strToTimestamp = (str) => {\r\n        const {enableTime} = this.props\r\n        const parsedStr = str.replace(DATE_TIME_SUFFIX.daySuffix, '')\r\n        const momentFormat = enableTime ? `${this.FORMAT.date} ${this.FORMAT.time}` : this.FORMAT.date\r\n        return Moment(parsedStr, momentFormat).valueOf()\r\n    };\r\n\r\n    handleChange = () => {\r\n        let {onChange} = this.props\r\n        onChange(this.date.value)\r\n    };\r\n\r\n    handleInputChange = (evt) => {\r\n        let {required} = this.props\r\n        let newDate = evt.target.value\r\n\r\n        // Remove the day suffix since Date can't resolve it\r\n        let parseDate = this.strToTimestamp(newDate)\r\n\r\n        let isValid = this.validateDateFormat(newDate)\r\n        let errMsg = this.generateErrorMsg(newDate)\r\n\r\n        if (!isNaN(parseDate)) {\r\n            // Move the calendar view to the current value's location\r\n            this.datePicker.jumpToDate(parseDate)\r\n\r\n            if (isValid) {\r\n                Popover.close()\r\n\r\n                // setDate() accepts date string & Date object\r\n                // If set the 2nd parameter as true, it will recursively call itself here\r\n                this.datePicker.setDate(parseDate, false)\r\n                this.handleChange()\r\n            }\r\n            else {\r\n                Popover.open(\r\n                    evt,\r\n                    <span>{errMsg}</span>,\r\n                    {pointy:true}\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            if (required || newDate !== '') {\r\n                Popover.open(\r\n                    evt,\r\n                    <span>{errMsg}</span>,\r\n                    {pointy:true}\r\n                )\r\n            }\r\n            else {\r\n                Popover.close()\r\n            }\r\n        }\r\n    };\r\n\r\n    handleBlur = (evt) => {\r\n        Popover.close()\r\n\r\n        let newDate = evt.target.value\r\n\r\n        let isValid = this.validateDateFormat(newDate)\r\n        let {prevDate} = this.state\r\n        let {required} = this.props\r\n\r\n        if (isValid) {\r\n            // Prevent requiring double-click when select date\r\n            if (newDate !== prevDate) {\r\n                this.datePicker.setDate(newDate)\r\n                this.setState({prevDate:newDate})\r\n            }\r\n        }\r\n        else {\r\n            // Reset to previous valid value\r\n            if (required) {\r\n                this.datePicker.setDate(prevDate)\r\n            }\r\n            else {\r\n                this.datePicker.setDate('')\r\n                this.handleChange()\r\n            }\r\n        }\r\n    };\r\n\r\n    validateDateFormat = (dateStr) => {\r\n        let {enableTime} = this.props\r\n        let isValid = false\r\n\r\n        if (enableTime) {\r\n            isValid = Moment(dateStr, `${this.FORMAT.date} ${this.FORMAT.time}`, true).isValid()\r\n\r\n            // Momentjs validation accepts single (a|A|p|P) for AM/PM\r\n            // This is for ensuring user input complete 'AM/PM' term when AM/PM is enabled\r\n            if (this.FORMAT.time.indexOf('A') !== -1 && dateStr.search(DATE_TIME_SUFFIX.timeSuffix) === -1) {\r\n                isValid = false\r\n            }\r\n        }\r\n        else {\r\n            isValid = Moment(dateStr, `${this.FORMAT.date}`, true).isValid()\r\n        }\r\n\r\n        return isValid\r\n    };\r\n\r\n    generateErrorMsg = (dateStr) => {\r\n        let {id, enableTime, required, t} = this.props\r\n        let datePattern = this.FORMAT.date,\r\n            timePattern = (this.FORMAT.time.indexOf('A') !== -1) ? this.FORMAT.time.replace('A', 'AM/PM') : this.FORMAT.time\r\n\r\n        let pattern = enableTime ? `${datePattern} ${timePattern}` : datePattern\r\n\r\n        return ih.validateField(dateStr, {name:id, type:'date', required, pattern}, t?{et:t}:true)\r\n    };\r\n\r\n    render() {\r\n        let {id, value, className, readOnly, disabled, required, allowKeyIn} = this.props\r\n\r\n        return <div id={id} className={cx('c-date-picker', className)}>\r\n            <input\r\n                id={id}\r\n                type='text'\r\n                ref={ref=>{ this.date=ref }}\r\n                disabled={disabled}\r\n                readOnly={readOnly}\r\n                required={required}\r\n                onChange={allowKeyIn ? this.handleInputChange : null}\r\n                onBlur={this.handleBlur}\r\n                defaultValue={value} />\r\n            <i className='fg fg-calendar' onClick={() => { this.date.focus() }} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default wireValue(DatePicker)","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport Moment from 'moment'\r\nimport flatpickr from 'flatpickr'\r\nimport flatpickrStyles from 'flatpickr/dist/flatpickr.min.css' // eslint-disable-line no-unused-vars\r\n\r\n// Add more locales here\r\nimport {Mandarin as zh} from 'flatpickr/dist/l10n/zh'\r\n\r\nimport Popover from './popover'\r\nimport {wire} from '../hoc/prop-wire'\r\nimport { SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport ih from '../utils/input-helper'\r\nimport {flatpickrToMomentToken} from '../utils/date'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/date-range')\r\n\r\nconst DATE_PROP_TYPE = PropTypes.shape({\r\n    from: SIMPLE_VALUE_PROP,\r\n    to: SIMPLE_VALUE_PROP\r\n})\r\n\r\nconst DATE_TIME_SUFFIX = {\r\n    daySuffix: /(st)|(nd)|(rd)|(th)/g,\r\n    timeSuffix: /(AM)|(PM)/ig\r\n}\r\n\r\n/**\r\n * A React DateRange Component, containing a 'from' date input and a 'to' date input<br>\r\n * Uses [flatpickr]{@link https://chmln.github.io/flatpickr/#options}\r\n *\r\n * @constructor\r\n * @param {string} [id] - Container element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {object} [defaultValue] - Default selected range\r\n * @param {string} defaultValue.from - Default selected from\r\n * @param {string} defaultValue.to - Default selected to\r\n * @param {object} [value] - Current selected range\r\n * @param {string} value.from - Current selected from\r\n * @param {string} value.to - Current selected to\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean} [allowKeyIn=true] - Allow user key in to the from/to input?\r\n * @param {boolean} [disabled=false] - Is this field disabled?\r\n * @param {boolean} [readOnly=false] - Is this field readonly?\r\n * @param {boolean} [required=false] - Is this field required?\r\n * @param {function} [onChange] - Callback function when from/to is changed. <br> Required when value prop is supplied\r\n * @param {object} onChange.value - current value\r\n * @param {string} onChange.value.from - current from\r\n * @param {string} onChange.value.to - current to\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {object} onChange.eventInfo.before - previously enetered value\r\n * @param {string} [dateFormat='Y-m-d'] - Date format. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n * @param {string} [timeFormat='H:i'] - Time format. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n * @param {boolean} [enableTime=false] - Enable selection and display of time\r\n * @param {boolean} [enableAMPM=false] - Enable AM/PM option on calendar\r\n * @param {string} [locale] - Datepicker locale. Values can be 'en', 'zh', etc. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n * @param {fuction} [t] - Transform/translate error into readable message.<br>\r\n * @param {object} t.params - Parameters relevant to the error code\r\n * @param {string} t.params.field - offending field id\r\n * @param {string} t.params.value - offending field value\r\n * @param {string} t.params.pattern - pattern the value was supposed to follow\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {DateRange} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            date:{\r\n                from:'2012-04-26',\r\n                to:'2012-10-26'\r\n            },\r\n            datetime:{\r\n                from:'2012-10-26 12:00',\r\n                to:'2012-10-26 17:00'\r\n            }\r\n        }\r\n    },\r\n    handleChange(field, value) {\r\n        this.setState({[field]:value})\r\n    },\r\n    render() {\r\n        let {date, datetime} = this.state;\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='date'>Select Date Range</label>\r\n                <DateRange id='date'\r\n                    onChange={this.handleChange.bind(this,'date')}\r\n                    value={date}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing')\r\n                            return `Please input date`\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }}/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='datetime'>Select Date Time Range</label>\r\n                <DateRange id='datetime'\r\n                    onChange={this.handleChange.bind(this,'datetime')}\r\n                    enableTime={true}\r\n                    value={datetime}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing')\r\n                            return `Please input date`\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }}/>\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\n\r\nclass DateRange extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        value: DATE_PROP_TYPE,\r\n        allowKeyIn: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        readOnly: PropTypes.bool,\r\n        required: PropTypes.bool,\r\n        onChange: PropTypes.func,\r\n        dateFormat: PropTypes.string,\r\n        timeFormat: PropTypes.string,\r\n        enableTime: PropTypes.bool,\r\n        enableAMPM: PropTypes.bool,\r\n        locale: PropTypes.string,\r\n        autoComplete: PropTypes.string,\r\n        t: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        dateFormat: 'Y-m-d',\r\n        timeFormat: 'H:i',\r\n        disabled: false,\r\n        readOnly: false,\r\n        required: false,\r\n        allowKeyIn: true,\r\n        enableTime: false,\r\n        enableAMPM: false,\r\n        locale: 'en',\r\n        autoComplete: 'off'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let {value} = props\r\n\r\n        this.state = {\r\n            prevFrom: value.from,\r\n            prevTo: value.to\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {dateFormat, timeFormat, enableTime, enableAMPM, allowKeyIn:allowInput, locale} = this.props\r\n\r\n        let loc = null\r\n        switch (locale) {\r\n            case 'zh': loc = zh; break\r\n            default: loc = null\r\n        }\r\n\r\n        this.FORMAT = flatpickrToMomentToken(dateFormat, timeFormat, enableTime)\r\n\r\n        if (enableTime) {\r\n            dateFormat = dateFormat + ' ' + timeFormat\r\n        }\r\n\r\n        this.datePicker = {\r\n            from: flatpickr(this.dateFrom, {\r\n                enableTime,\r\n                allowInput,\r\n                dateFormat,\r\n                locale: loc,\r\n                time_24hr: !enableAMPM,\r\n                onChange: ()=>{\r\n                    this.checkCross('from')\r\n                    this.handleChange()\r\n                }\r\n            }),\r\n            to: flatpickr(this.dateTo, {\r\n                enableTime,\r\n                allowInput,\r\n                dateFormat,\r\n                locale: loc,\r\n                time_24hr: !enableAMPM,\r\n                onChange: ()=>{\r\n                    this.checkCross('to')\r\n                    this.handleChange()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let {value, locale} = nextProps\r\n\r\n        let loc = null\r\n        switch (locale) {\r\n            case 'zh': loc = zh; break\r\n            default: loc = null\r\n        }\r\n\r\n        this.datePicker.from.set('locale', loc)\r\n        this.datePicker.to.set('locale', loc)\r\n        this.datePicker.from.setDate(this.strToTimestamp(value.from), false)\r\n        this.datePicker.to.setDate(this.strToTimestamp(value.to), false)\r\n\r\n        this.setState({\r\n            prevFrom: value.from,\r\n            prevTo: value.to\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.datePicker.from.destroy()\r\n        this.datePicker.to.destroy()\r\n    }\r\n\r\n    strToTimestamp = (str) => {\r\n        const {enableTime} = this.props\r\n        const parsedStr = str.replace(DATE_TIME_SUFFIX.daySuffix, '')\r\n        const momentFormat = enableTime ? `${this.FORMAT.date} ${this.FORMAT.time}` : this.FORMAT.date\r\n        return Moment(parsedStr, momentFormat).valueOf()\r\n    };\r\n\r\n    handleChange = () => {\r\n        let {onChange} = this.props\r\n        onChange({from:this.dateFrom.value, to:this.dateTo.value})\r\n    };\r\n\r\n    handleInputChange = (type, evt) => {\r\n        let {required} = this.props\r\n        let newDate = evt.target.value\r\n\r\n        // Remove the day suffix since Date can't resolve it\r\n        let parseDate = this.strToTimestamp(newDate)\r\n\r\n        let isValid = this.validateDateFormat(newDate)\r\n        let errMsg = this.generateErrorMsg(type, newDate)\r\n\r\n        if (!isNaN(parseDate)) {\r\n            // Move the calendar view to the current value's location\r\n            this.datePicker[type].jumpToDate(parseDate)\r\n\r\n            if (isValid) {\r\n                Popover.closeId(`err-${type}`)\r\n\r\n                // setDate() accepts date string & Date object\r\n                // If set the 2nd parameter as true, it will recursively call itself here\r\n                this.datePicker[type].setDate(parseDate, false)\r\n                this.handleChange()\r\n\r\n                this.checkCross(type)\r\n            }\r\n            else {\r\n                Popover.openId(\r\n                    `err-${type}`,\r\n                    evt,\r\n                    <span>{errMsg}</span>,\r\n                    {pointy:true}\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            if (required || newDate !== '') {\r\n                Popover.openId(\r\n                    `err-${type}`,\r\n                    evt,\r\n                    <span>{errMsg}</span>,\r\n                    {pointy:true}\r\n                )\r\n            }\r\n            else {\r\n                Popover.closeId(`err-${type}`)\r\n            }\r\n        }\r\n    };\r\n\r\n    handleBlur = (type, evt) => {\r\n        Popover.closeId(`err-${type}`)\r\n\r\n        let newDate = evt.target.value\r\n\r\n        let isValid = this.validateDateFormat(newDate)\r\n        let field = (type === 'from') ? 'prevFrom' : 'prevTo'\r\n        let prevDate = (type === 'from') ? this.state.prevFrom : this.state.prevTo\r\n        let {required} = this.props\r\n\r\n        if (isValid) {\r\n            // Prevent requiring double-click when select date\r\n            if (newDate !== prevDate) {\r\n                this.datePicker[type].setDate(newDate)\r\n                this.setState({[field]:newDate})\r\n            }\r\n\r\n            this.checkCross(type)\r\n        }\r\n        else {\r\n            // Reset to previous valid value\r\n            if (required) {\r\n                this.datePicker[type].setDate(prevDate)\r\n            }\r\n            else {\r\n                this.datePicker[type].setDate('')\r\n                this.handleChange()\r\n            }\r\n        }\r\n    };\r\n\r\n    validateDateFormat = (dateStr) => {\r\n        let {enableTime} = this.props\r\n        let isValid = false\r\n\r\n        if (enableTime) {\r\n            isValid = Moment(dateStr, `${this.FORMAT.date} ${this.FORMAT.time}`, true).isValid()\r\n\r\n            // Momentjs validation accepts single (a|A|p|P) for AM/PM\r\n            // This is for ensuring user input complete 'AM/PM' term when AM/PM is enabled\r\n            if (this.FORMAT.time.indexOf('A') !== -1 && dateStr.search(DATE_TIME_SUFFIX.timeSuffix) === -1) {\r\n                isValid = false\r\n            }\r\n        }\r\n        else {\r\n            isValid = Moment(dateStr, `${this.FORMAT.date}`, true).isValid()\r\n        }\r\n\r\n        return isValid\r\n    };\r\n\r\n    checkCross = (type) => {\r\n        const dateFrom = this.strToTimestamp(this.dateFrom.value),\r\n            dateTo = this.strToTimestamp(this.dateTo.value)\r\n\r\n        if (dateFrom !== dateTo) {\r\n            if (type === 'from') {\r\n                const isAfter = Moment(dateFrom).isAfter(dateTo)\r\n\r\n                if (isAfter) {\r\n                    this.datePicker.to.setDate(dateFrom, false)\r\n                    this.handleChange()\r\n                }\r\n            }\r\n            else {\r\n                const isBefore = Moment(dateTo).isBefore(dateFrom)\r\n\r\n                if (isBefore) {\r\n                    this.datePicker.from.setDate(dateTo, false)\r\n                    this.handleChange()\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    generateErrorMsg = (type, dateStr) => {\r\n        let {id, enableTime, required, t} = this.props\r\n        let datePattern = this.FORMAT.date,\r\n            timePattern = (this.FORMAT.time.indexOf('A') !== -1) ? this.FORMAT.time.replace('A', 'AM/PM') : this.FORMAT.time\r\n\r\n        let pattern = enableTime ? `${datePattern} ${timePattern}` : datePattern\r\n\r\n        return ih.validateField(dateStr, {name:`${id}-${type}`, type:'date', required, pattern}, t?{et:t}:true)\r\n    };\r\n\r\n    render() {\r\n        let {id, value, className, readOnly, disabled, required, allowKeyIn, autoComplete} = this.props\r\n\r\n        return <div id={id} className={cx('c-date-range', className)}>\r\n            <span className='c-date-picker'>\r\n                <input\r\n                    id={id+'-from'}\r\n                    type='text'\r\n                    ref={ref=>{ this.dateFrom=ref }}\r\n                    disabled={disabled}\r\n                    readOnly={readOnly}\r\n                    required={required}\r\n                    onChange={allowKeyIn ? this.handleInputChange.bind(this, 'from') : null}\r\n                    onBlur={this.handleBlur.bind(this, 'from')}\r\n                    defaultValue={value.from}\r\n                    autoComplete={autoComplete} />\r\n                <i className='fg fg-calendar' onClick={() => { this.dateFrom.focus() }} />\r\n            </span>\r\n            <span className='between'>~</span>\r\n            <span className='c-date-picker'>\r\n                <input\r\n                    id={id+'-to'}\r\n                    type='text'\r\n                    ref={ref=>{ this.dateTo=ref }}\r\n                    disabled={disabled}\r\n                    readOnly={readOnly}\r\n                    required={required}\r\n                    onChange={allowKeyIn ? this.handleInputChange.bind(this, 'to') : null}\r\n                    onBlur={this.handleBlur.bind(this, 'to')}\r\n                    defaultValue={value.to}\r\n                    autoComplete={autoComplete} />\r\n                <i className='fg fg-calendar' onClick={() => { this.dateTo.focus() }} />\r\n            </span>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default wire(DateRange, 'value', {})\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport { LIST_PROP, SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport {wireValue} from '../hoc/prop-wire'\r\nimport normalizeList from '../hoc/list-normalizer'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/dropdown')\r\n\r\n/**\r\n * A React (single-select) DropDown List\r\n * @constructor\r\n * @param {string} [id] - Input element #id\r\n * @param {string} [name] - Input element name\r\n * @param {number} [size=1] - Number of items to display\r\n * @param {Array.<object>} list - List of items\r\n * @param {string | number} list.value - item value\r\n * @param {string} list.text - item display text\r\n * @param {string} [className] - Classname for the container\r\n * @param {string} [defaultText] - Default text to display when nothing is selected\r\n * @param {string|number} [defaultValue] - Default selected value\r\n * @param {string|number} [value] - Current selected value\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean} [required=false] - Is this field mandatory?\r\n * @param {boolean} [disabled=false] - Is this field disabled?\r\n * @param {boolean} [readOnly=false] - Is this field readonly?\r\n * @param {function} [onChange] - Callback function when item is selected. <br> Required when value prop is supplied\r\n * @param {string|number} onChange.value - selected value\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string|number} onChange.eventInfo.before - previously selected value\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {Dropdown} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movie:'',\r\n            director:''\r\n        }\r\n    },\r\n    handleChange(field, value) {\r\n        this.setState({[field]:value})\r\n    },\r\n    render() {\r\n        let {movie, director} = this.state;\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='movie'>Select movie (optional)</label>\r\n                <Dropdown id='movie'\r\n                    list={[\r\n                        {value:'fd',text:'Finding Dory'},\r\n                        {value:'woo',text:'Wizard of Oz'},\r\n                        {value:'ck',text:'Citizen Kane'}\r\n                    ]}\r\n                    onChange={this.handleChange.bind(this,'movie')}\r\n                    defaultValue='fd'\r\n                    value={movie}/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='director'>Select director (mandatory)</label>\r\n                <Dropdown id='director'\r\n                    list={[\r\n                        {value:'a',text:'Steven Spielberg'},\r\n                        {value:'b',text:'Spike'},\r\n                        {value:'c',text:'Lynch'},\r\n                        {value:'d',text:'Bergman'}\r\n                    ]}\r\n                    size={3}\r\n                    required={true}\r\n                    onChange={this.handleChange.bind(this,'director')}\r\n                    defaultText='Please select a director'\r\n                    value={director}/>\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass Dropdown extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        size: PropTypes.number,\r\n        list: LIST_PROP,\r\n        className: PropTypes.string,\r\n        defaultText: SIMPLE_VALUE_PROP,\r\n        value: SIMPLE_VALUE_PROP,\r\n        required: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        readOnly: PropTypes.bool,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        required: false,\r\n        disabled: false,\r\n        readOnly: false,\r\n        size: 1\r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        let {onChange} = this.props\r\n        onChange(evt.target.value)\r\n    };\r\n\r\n    render() {\r\n        let {id, name, size, list, value, disabled, readOnly,\r\n            required, defaultText, className} = this.props\r\n\r\n        let found = false\r\n        if (value != null) {\r\n            found = _.find(list, item => {\r\n                return (item.value+'')===(value+'')\r\n            })\r\n        }\r\n\r\n        return <select\r\n            id={id}\r\n            name={name}\r\n            className={cx({invalid:!found&&required}, className)}\r\n            onChange={readOnly?null:this.handleChange}\r\n            required={required}\r\n            value={value}\r\n            size={size}\r\n            readOnly={readOnly}\r\n            disabled={readOnly || disabled}>\r\n            {\r\n                (!found || !required) && <option key='_' value=''>{defaultText || ''}</option>\r\n            }\r\n            {\r\n                _.map(list, ({value:itemValue, text:itemText}) => {\r\n                    return <option key={itemValue} value={itemValue}>{itemText}</option>\r\n                })\r\n            }\r\n        </select>\r\n    }\r\n}\r\n\r\nexport default wireValue(normalizeList(Dropdown))\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\n\r\nimport Popover from './popover'\r\nimport ih from '../utils/input-helper'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/file-input')\r\n\r\n/**\r\n * A React file input\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [name] - FileInput element name\r\n * @param {string} [className] - Classname for the container\r\n * @param {string} [btnText='Choose file'] - Text on the button\r\n * @param {string} [placeholder] - Placeholder for the text field\r\n * @param {boolean} [required=false] - Is this field mandatory?\r\n * @param {boolean} [disabled=false] - Is file input disabled?\r\n * @param {boolean} [enableClear=true] - Can this field can be cleared?\r\n * @param {object} [validate] - Validation config\r\n * @param {number} [validate.max] - Maximum file size which unit is 'MB'\r\n * @param {string | Array.<string>} [validate.extension] - Accepted file format, e.g., '.mp3'; ['.jpg', '.png']\r\n * @param {fuction} [validate.t] - Transform/translate error into readable message.<br>\r\n * If not specified, error message will be `${validate.t.params.name} ${code}`<br>\r\n * For example see [i18next]{@link http://i18next.com/translate/} translator for generating error message.<br>\r\n * @param {'missing'|'file-too-large'|'file-wrong-format'} validate.t.code - Error code\r\n * @param {object} validate.t.params - Parameters relevant to the error code\r\n * @param {string} validate.t.params.field - offending field name/id\r\n * @param {object} validate.t.params.value - offending file object\r\n * @param {number} [validate.t.params.max] - configured maximum file size which unit is MB\r\n * @param {string} [validate.t.params.extension] - configured accepted file extension\r\n * @param {function} [onChange] - Callback function when file is changed\r\n * @param {object} onChange.file - updated file\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {object} onChange.eventInfo.before - previous file\r\n *\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {FileInput} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            name: '',\r\n            type: '',\r\n            size: 0\r\n        }\r\n    },\r\n    handleChange(file) {\r\n        this.setState({\r\n            name: file ? file.name : '',\r\n            type: file ? file.type : '',\r\n            size: file ? file.size : 0\r\n        })\r\n    },\r\n    render() {\r\n        return <div className='c-flex aic'>\r\n            <FileInput\r\n                onChange={this.handleChange} required={true} name='fileDemo'\r\n                validate={{\r\n                    max: 10,\r\n                    extension: ['.mp3', '.wma'],\r\n                    t: (code, params) => {\r\n                        if (code === 'file-too-large') {\r\n                            return `File size should be lower than ${params.max} MB`\r\n                        }\r\n                        else {\r\n                            return `File format should be ${params.extension}`\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    }\r\n})\r\n */\r\n\r\nclass FileInput extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        className: PropTypes.string,\r\n        btnText: PropTypes.string,\r\n        placeholder: PropTypes.string,\r\n        required: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        enableClear: PropTypes.bool,\r\n        validate: PropTypes.shape({\r\n            max: PropTypes.number,\r\n            extension: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n            t: PropTypes.func\r\n        }),\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        btnText: 'Choose file',\r\n        disabled: false,\r\n        enableClear: true,\r\n        required: false,\r\n        validate: {}\r\n    };\r\n\r\n    state = {\r\n        file: null,\r\n        isInvalid: false\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        Popover.close()\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let fileInput = this.fileInput,\r\n            fileSub = this.fileSub\r\n\r\n        let {validate, onChange} = this.props\r\n\r\n        if (fileInput.files.length > 0) {\r\n            let file = fileInput.files[0]\r\n            let error = validate ? this.validateFile(file) : null\r\n\r\n            if (error) {\r\n                this.fileInput.value = ''\r\n                this.fileSub.value = ''\r\n\r\n                Popover.open(e, error, {pointy:true})\r\n\r\n                this.setState({\r\n                    isInvalid: true\r\n                })\r\n            }\r\n            else {\r\n                Popover.close()\r\n                fileSub.value = file.name\r\n\r\n                if (onChange) {\r\n                    onChange(file)\r\n                }\r\n\r\n                this.setState({\r\n                    file,\r\n                    isInvalid: false\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    handleBlur = () => {\r\n        Popover.close()\r\n        this.setState({isInvalid:false})\r\n    };\r\n\r\n    handleClick = () => {\r\n        Popover.close()\r\n\r\n        let {onChange} = this.props\r\n\r\n        this.fileInput.value = ''\r\n        this.fileSub.value = ''\r\n\r\n        if (onChange) {\r\n            onChange(null)\r\n        }\r\n\r\n        this.setState({\r\n            file: null,\r\n            isInvalid: false\r\n        })\r\n    };\r\n\r\n    validateFile = (file) => {\r\n        let {id, name, required, validate:{t, ...params}} = this.props\r\n        let msg = ih.validateField(file, {name:name || id, type:'file', required, ...params}, t?{et:t}:true)\r\n\r\n        if (msg) {\r\n            return <span>{msg}</span>\r\n        }\r\n        return null\r\n    };\r\n\r\n    render() {\r\n        let {id, name, className, placeholder, btnText, disabled, enableClear, required, validate} = this.props\r\n        let {file, isInvalid} = this.state\r\n        let hasFile = !!file\r\n        let extension = (validate && validate.extension) ? validate.extension : ''\r\n\r\n        return <div id={id} className={cx('c-file-input', {disabled, clearable:enableClear}, className)}>\r\n            <input\r\n                type='file' name={name} ref={ref => { this.fileInput = ref }} accept={extension}\r\n                onChange={this.handleChange}\r\n                onBlur={this.handleBlur}\r\n                disabled={disabled}\r\n                required={required} />\r\n            <button disabled={disabled}>{btnText}</button>\r\n            <input\r\n                type='text'\r\n                ref={ref => { this.fileSub = ref }}\r\n                className={cx({invalid:isInvalid})}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n                readOnly />\r\n            {enableClear && hasFile && <i className={cx('c-link inline fg fg-close')} onClick={this.handleClick} />}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FileInput","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport createFragment from 'react-addons-create-fragment'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\n\r\nimport FormElements from './index'\r\nimport {wire} from '../hoc/prop-wire'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/form')\r\n\r\n/**\r\n * A React Form Component, with configuration for one or more fields\r\n * @constructor\r\n * @param {string} [id] - Container element #id\r\n * @param {object} fields - All fields definition, in key-config pair\r\n * @param {object} fields.key - Config for this **key** field\r\n * @param {renderable} [fields.key.label=key if non-merging] - Display label\r\n * @param {string} [fields.key.className] - classname for this field.\r\n * @param {boolean} [fields.key.merge=false] - Whether to merge the field value into existing form value, only works when field value is itself an object\r\n * @param {string|function} [fields.key.editor] - React class to use for rendering the input\r\n * * native dom elements: eg 'input'|'div' etc\r\n * * react-ui input components: 'ButtonGroup' | CheckboxGroup' | Checkbox' | Combobox' | DatePicker' | DateRange' | Dropdown' | FileInput' | 'Form' | Input' | MultiInput' | RadioGroup' | RangeCalendar' | Slider' | 'ToggleButton'\r\n * * custom defined React class with 'value' prop and 'onChange' event prop for interactivity\r\n * @param {object|function} [fields.key.props] - Props for the above react class, see individual doc for the base class\r\n * @param {renderable|function} [fields.key.formatter] - Render function\r\n * @param {renderable} [header] - Any react renderable node\r\n * @param {renderable} [footer] - Any react renderable node\r\n * @param {object} actions - All actions definition, in key-config pair\r\n * @param {object} actions.key - Config for this **key** action\r\n * @param {string} [actions.key.className] - Classname for the action button\r\n * @param {renderable} [actions.key.text=key] - Display text\r\n * @param {boolean} [actions.key.disabled=false] - disable this action?\r\n * @param {function} actions.key.handler - handler function when action is clicked\r\n * @param {object} actions.key.handler.value - form value as argument for the handler function\r\n * @param {boolean} [actions.key.clearForm=false] - clear form when this action button is clicked?\r\n * @param {boolean} [actions.key.triggerOnComplete=false] - whether to trigger the *handler* when input is completed (by pressing enter key)\r\n * @param {string} [className] - Classname for the form container\r\n * @param {string} [formClassName] - Classname for the form content, default selected classnames:\r\n * * aligned - For each field, arrange label and input on left-right layout (default to top-bottom)\r\n * * inline - Layout fields from left to right (and top to bottom)\r\n * * left - When field is **aligned**, make label align to left (default to right)\r\n * @param {number} [columns=1] - Number of columns to show when arranging using **aligned** classname\r\n * @param {string} [fieldClassName] - Global classname for each field\r\n * @param {object} [defaultValue] - Default form input values\r\n * @param {object} [value] - Current form input values\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {function} [onChange] - Callback function when from/to is changed. <br> Required when value prop is supplied\r\n * @param {object} onChange.value - current form input values\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string} onChange.eventInfo.field - field information which triggered the change\r\n * @param {string} onChange.eventInfo.field.name - which field triggered change?\r\n * @param {*} onChange.eventInfo.field.value - corresponding value for triggered **field.name**\r\n * @param {object} onChange.eventInfo.before - previous form input values\r\n * @param {boolean} onChange.eventInfo.isComplete - was it triggered by pressing enter key on an input field?\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {Form} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movie: {\r\n                id: 99,\r\n                year: '1982',\r\n                title: 'Blade Runner',\r\n                directory: 'Ridley Scott',\r\n                languages: ['english','japanese'],\r\n                genre: 'scifi', // index into 'scifi' drop down list\r\n                notes: [],\r\n                scores: {\r\n                    imdb: 8.2,\r\n                    rottenTomatoes: 8.9\r\n                }\r\n            }\r\n        }\r\n    },\r\n    handleChange(movie) {\r\n        this.setState({movie})\r\n    },\r\n    render() {\r\n        let {movie} = this.state;\r\n        return <Form id='movie'\r\n            formClassName='c-form'\r\n            header='Create New Movie'\r\n            fields={{\r\n                id: {label:'ID', formatter:id=>`X${id}`},\r\n                year: {label:'Year', editor:'Input', props:{type:'integer', required:true, validate:{min:1900}}},\r\n                title: {label:'Title', editor:'Input', props:{required:true}},\r\n                director: {label:'Director', editor:'Input', props:{required:true}},\r\n                languages: {label:'Languages', editor:'CheckboxGroup', props:{\r\n                    list:[\r\n                        {value:'english',text:'English'},\r\n                        {value:'japanese',text:'Japanese'},\r\n                        {value:'german',text:'German'},\r\n                        {value:'xyz',text:'XYZ'}\r\n                    ],\r\n                    disabled:['xyz']\r\n                }},\r\n                genre: {label:'Genre', editor:'Dropdown', props:{\r\n                    list:[\r\n                        {value:'drama', text:'Drama'},\r\n                        {value:'horror', text:'Horror'},\r\n                        {value:'scifi', text:'Sci-Fi'}\r\n                    ],\r\n                    defaultText:'Please select a genre'\r\n                }},\r\n                notes: {label:'Notes', editor:'MultiInput', props:{base:'Input', inline:true}},\r\n                'scores.imdb': {label:'IMDB Score', editor:'Input', props:(data)=>{\r\n                    // disable IMDB score when production year is in the future\r\n                    if (data.year >= 2017) {\r\n                        return {disabled:true}\r\n                    }\r\n                    else {\r\n                        return {type:'number', validate:{min:0}}}\r\n                    }\r\n                },\r\n                'scores.rottenTomatoes': {label:'Rotten Tomatotes Score', editor:'Input', props:{type:'number', validate:{min:0}}}\r\n            }}\r\n            onChange={this.handleChange}\r\n            value={movie}/>\r\n    }\r\n})\r\n */\r\nclass Form extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        fields: PropTypes.objectOf(PropTypes.shape({\r\n            label: PropTypes.node,\r\n            className: PropTypes.string,\r\n            merge: PropTypes.bool,\r\n            formatter: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\r\n            editor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]), // react class\r\n            props: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n        })).isRequired,\r\n        header: PropTypes.node,\r\n        footer: PropTypes.node,\r\n        actions: PropTypes.objectOf(\r\n            PropTypes.shape({\r\n                className: PropTypes.string,\r\n                text: PropTypes.node,\r\n                disabled: PropTypes.bool,\r\n                clearForm: PropTypes.bool,\r\n                triggerOnComplete: PropTypes.bool,\r\n                handler: PropTypes.func\r\n            }).isRequired\r\n        ),\r\n        columns: PropTypes.number,\r\n        className: PropTypes.string,\r\n        formClassName: PropTypes.string,\r\n        fieldClassName: PropTypes.string,\r\n        controlClassName: PropTypes.string,\r\n        value: PropTypes.object, // might not be just a simple object\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        formClassName: '',\r\n        columns: 1,\r\n        value: {},\r\n        actions: {}\r\n    };\r\n\r\n    handleChange = (key, merge, iValue, info={}) => {\r\n        const {onChange, value, actions} = this.props\r\n        const eventInfo = {\r\n            field: {\r\n                name: key,\r\n                value: iValue,\r\n                ...info\r\n            },\r\n            isComplete: _.get(info, 'isComplete', false)\r\n        }\r\n\r\n        let newValue\r\n        if (merge && _.isObject(iValue)) {\r\n            newValue = _.mergeWith({}, value, iValue, (objValue, srcValue)=>{\r\n                if (_.isArray(objValue)) {\r\n                    return srcValue\r\n                }\r\n                return undefined\r\n            })\r\n        }\r\n        else {\r\n            newValue = im.set(value, key, iValue)\r\n        }\r\n\r\n        const completeAction = _.find(actions, {triggerOnComplete:true})\r\n        if (eventInfo.isComplete && completeAction) {\r\n            onChange(newValue, eventInfo)\r\n            setTimeout(()=>{\r\n                completeAction.handler(newValue)\r\n            }, 0)\r\n        }\r\n        else {\r\n            onChange(newValue, eventInfo)\r\n        }\r\n    };\r\n\r\n    isAligned = () => {\r\n        const {formClassName} = this.props\r\n        return _.indexOf(_.split(formClassName, ' '), 'aligned') >= 0\r\n    };\r\n\r\n    renderField = (id, fieldCfg, dataSet, fieldDefaultClassName, createContainer=true) => {\r\n        if (!fieldCfg) {\r\n            log.error(`renderField:: config for field '${id}' missing`)\r\n            return null\r\n        }\r\n\r\n        let {\r\n            label=(fieldCfg.merge?'':id),\r\n            merge=false,\r\n            className: fieldClassName=fieldDefaultClassName,\r\n            formatter,\r\n            editor,\r\n            props={}\r\n        } = fieldCfg\r\n\r\n        const value = merge ? dataSet : _.get(dataSet, id, undefined) // to support traverse of nested field properties, eg a.b.c\r\n        let fieldContent = value\r\n\r\n        if (formatter) {\r\n            if (_.isFunction(formatter)) {\r\n                fieldContent = formatter(value, dataSet)\r\n            }\r\n            else {\r\n                fieldContent = formatter\r\n            }\r\n        }\r\n        else if (editor) {\r\n            if (_.isFunction(props)) {\r\n                props = props(dataSet)\r\n            }\r\n            // TODO: check editor must be ReactClass\r\n            let propValueName = 'value'\r\n            if (_.isString(editor)) {\r\n                if (editor === 'Checkbox') {\r\n                    propValueName = 'checked'\r\n                }\r\n                if (editor === 'ToggleButton') {\r\n                    propValueName = 'on'\r\n                }\r\n            }\r\n            props = {...props, id, [propValueName]:value, onChange:this.handleChange.bind(this, id, merge)}\r\n\r\n            fieldContent = React.createElement(\r\n                _.isString(editor) && _.has(FormElements, editor) ? FormElements[editor] : editor,\r\n                props\r\n            )\r\n        }\r\n\r\n        const required = _.get(fieldCfg, 'props.required', false)\r\n        if (createContainer) {\r\n            return <div key={id} className={cx(id, fieldClassName)}>\r\n                <label className={cx({required})} htmlFor={id}>{label}</label>\r\n                {fieldContent}\r\n            </div>\r\n        }\r\n        else {\r\n            return createFragment({\r\n                label: <label className={cx({required})} htmlFor={id}>{label}</label>,\r\n                content: fieldContent\r\n            })\r\n        }\r\n    };\r\n\r\n    renderRow = (fields, dataSet, fieldClassName, rowKey) => {\r\n        const renderedFields = _.map(fields, (fieldCfg, fieldKey) => this.renderField(fieldKey, fieldCfg, dataSet, fieldClassName, !rowKey))\r\n        if (rowKey) {\r\n            return <div key={rowKey} className={cx('row', `row-${rowKey}`, fieldClassName, _.keys(fields))}>\r\n                {renderedFields}\r\n            </div>\r\n        }\r\n        else {\r\n            return renderedFields\r\n        }\r\n    };\r\n\r\n    renderForm = (extraFormClassName) => {\r\n        const {formClassName, fieldClassName, fields, columns, value} = this.props\r\n        const aligned = this.isAligned()\r\n\r\n        return <div className={cx(formClassName, extraFormClassName, 'c-form')}>\r\n            {\r\n            aligned ?\r\n                _.map(\r\n                    _.groupBy(\r\n                        _.map(_.keys(fields), (k, i)=>({key:k, idx:Math.floor(i/columns), ...fields[k]})),\r\n                        'idx'\r\n                    ),\r\n                    (row, idx)=>this.renderRow(_.keyBy(row, 'key'), value, fieldClassName, idx)\r\n                ) :\r\n                this.renderRow(fields, value, fieldClassName)\r\n        }\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            id, value, header, footer,\r\n            className, controlClassName, actions, onChange\r\n        } = this.props\r\n        const actionNodes = _.map(actions, (action, actionKey) => {\r\n            return <button\r\n                className={cx(controlClassName, action.className)}\r\n                disabled={action.disabled}\r\n                ref={ref=>{ this[actionKey+'Btn']=ref }}\r\n                key={actionKey}\r\n                name={actionKey}\r\n                onClick={()=>{\r\n                    if (action.clearForm) {\r\n                        onChange({})\r\n                    }\r\n                    if (action.handler) {\r\n                        action.handler(value)\r\n                    }\r\n                }}>\r\n                {action.text || actionKey}\r\n            </button>\r\n        })\r\n\r\n        const hasActions = !_.isEmpty(actionNodes)\r\n\r\n        if (!hasActions && !footer && !header) {\r\n            return this.renderForm(className)\r\n        }\r\n\r\n        return <div id={id} className={cx('c-box c-form-container', className)}>\r\n            {\r\n                header && <header>{header}</header>\r\n            }\r\n            <div className={cx('content nopad')}>\r\n                {this.renderForm()}\r\n            </div>\r\n            {\r\n                (hasActions || footer) && <footer>\r\n                    {footer && <div className={cx('c-info')} dangerouslySetInnerHTML={{__html:footer}} />}\r\n                    {actionNodes}\r\n                </footer>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default wire(Form, 'value', {})\r\n","import React from 'react'\r\n\r\n\r\n/**\r\n * A React Grid\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {array.<object>} cols - Columns config\r\n * @param {string | number} cols.id - Column id\r\n * @param {renderable} [cols.label] - Column header label\r\n * @param {array.<object>} rows - Rows config\r\n * @param {string | number} rows.id - Row id\r\n * @param {renderable} [rows.label] - Row header label\r\n * @param {object} [items] - Current items\r\n * @param {object} items.key - data for this **key** item\r\n * @param {renderable} [items.key.content] - content to show in grid item\r\n * @param {*} [items.key.*] - other data of this cell\r\n * @param {boolean} [selectable=false] - Can grid items be selected?\r\n// * @param {array.<string>} [defaultSelected] - Default Selected item ids\r\n// * @param {array.<string>} [selected] - selected item ids\r\n// * @param {object} [selectedLink] - Link to update selections. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n// * @param {*} selectedLink.value - value to update\r\n// * @param {function} selectedLink.requestChange - function to request value change\r\n * @param {function} [onSelect] - Callback function when grid item are selected\r\n * @param {array} onSelect.ids - current selected item ids\r\n// * @param {object} onSelect.eventInfo - event related info\r\n// * @param {array} onSelect.eventInfo.before - previous selected item ids\r\n * @param {string} [selectingClassName] - Classname for the selecting grid items\r\n * @param {function} [itemClassName] - Classname (mapping or function) for the grid items\r\n *\r\n * @example\r\nimport {Grid} from 'react-ui'\r\nimport _ from 'lodash'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            currentStatus: 'A',\r\n            items: {\r\n                '0-0': {xx:0, status:'A',conent:'xx'},\r\n                '1-0.5': {xx:1, status:'B'},\r\n                '2-1': {xy:2, status:'C',content:<div/>},\r\n                '3-1.5': {status:'D'},\r\n                '4-2': {status:'E'},\r\n                '5-2.5': {status:'F'},\r\n                '6-3': {status:'A'}\r\n            }\r\n        }\r\n    },\r\n    handleSelect(selectedItems) {\r\n        let {items, currentStatus} = this.state\r\n        let newItems = _.reduce(selectedItems, (acc,id)=>{\r\n            acc[id] = {...items[id]||{}, status: currentStatus}\r\n            return acc\r\n        }, {})\r\n        this.setState({items:newItems})\r\n    },\r\n    render() {\r\n        let {currentStatus, items} = this.state\r\n        return <Grid id='schedule'\r\n            className='customize-schedule'\r\n            rows={[\r\n                {id:0, label:'Sunday'},\r\n                {id:1, label:'Monday'},\r\n                {id:2, label:'Tuesday'},\r\n                {id:3, label:'Wednesday'},\r\n                {id:4, label:'Thursday'},\r\n                {id:5, label:'Friday'},\r\n                {id:6, label:'Saturday'}\r\n            ]}\r\n            cols={\r\n                _.map(\r\n                    _.range(0,48),\r\n                    slot=>({id:slot/2, label:(slot%2===0?slot/2:'')})\r\n                )\r\n            }\r\n            items={items}\r\n            selectable={true}\r\n            onSelect={this.handleSelect}\r\n            selectingClassName=`selecting-${currentStatus}`\r\n            itemClassName={({status})=>'cls-'+status} />\r\n    }\r\n})\r\n */\r\nclass Grid extends React.Component {\r\n    render() {\r\n        return <div>To Be Implemented</div>\r\n    }\r\n}\r\n\r\nexport default Grid","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport Checkbox from './checkbox'\r\nimport {wireSet} from '../hoc/prop-wire'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/hierarchy')\r\n\r\n/**\r\n * A React Hierarchy Component. Can be visually presented as tree or accordion layout.\r\n *\r\n * @constructor\r\n * @param {string} [id] - Hierarchy element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {'accordion'|'tree'} [layout='accordion'] - How to display the hierarchy structure?\r\n * @param {boolean} [foldable=true] - Allow expand/collapse (branch) nodes? If false all hierarchy structure will show\r\n * @param {number|array<number>} [indent] - Indentation for each node level:\r\n * * if number, this will be used for indentation of all levels\r\n * * if array, each array item will represent indentation of corresponding levels, if number of levels exceed array size,\r\n * then last defined indentation will be used for all subsequent levels\r\n * @param {object} [data={}] - Data to fill hierarchy with\r\n * @param {string} [data.id] - node id. Note if top level id is not specified, then root node will not be displayed\r\n * @param {renderable} [data.label] - node label\r\n * @param {string} [data.className] - Classname for the node\r\n * @param {boolean} [data.foldable=true] - Allow expand/collapse this node? If specified will overwrite global *foldable* setting above\r\n * @param {number} [data.indent] - Indentation for this node. If specified will overwrite global *indent* setting above\r\n * @param {boolean} [data.disabled=false] - Turning off selection for this node?\r\n * @param {array<data>} [data.children] - children of the node (can be defined recursively)\r\n * @param {object} [selection] - Node selection settings\r\n * @param {boolean} [selection.enabled=false] - Allow selecting nodes?\r\n * @param {array.<string>} [defaultSelected] - Default selected (leaf) node ids\r\n * @param {array.<string>} [selected] - Selected (leaf) node ids\r\n * @param {function} [onSelectionChange] - Callback function when node is selected. <br> Required when selected prop is supplied\r\n * @param {array.<string>} onSelectionChange.value - current selected (leaf) node ids\r\n * @param {object} onSelectionChange.eventInfo - event related info\r\n * @param {array.<string>} onSelectionChange.eventInfo.before - previous selected (leaf) node ids\r\n * @param {array.<string>} onSelectionChange.eventInfo.ids - (leaf) node ids triggering change\r\n * @param {boolean} onSelectionChange.eventInfo.selected - selected?\r\n * @param {string} [current] - Current node id\r\n * @param {string} [defaultCurrent] - Default current node id\r\n * @param {function} [onLabelClick] - Callback function when current node is changed. <br> Required when current prop is supplied\r\n * @param {string} onLabelClick.value - current node id\r\n * @param {object} onLabelClick.eventInfo - event related info\r\n * @param {string} onLabelClick.eventInfo.before - previously current node id\r\n * @param {array} onLabelClick.eventInfo.path - current node in the form of path (array), with id & child index\r\n * @param {boolean} onLabelClick.eventInfo.isBranch - whether this node is branch\r\n * @param {function} [onLabelMouseOver] - Callback function when node label is hovered\r\n * @param {string} onLabelMouseOver.id - hovered node id\r\n * @param {object} onLabelMouseOver.eventInfo - event related info\r\n * @param {array} onLabelMouseOver.eventInfo.path - current hovered node in the form of path (array), with id & child index\r\n * @param {boolean} onLabelMouseOver.eventInfo.isBranch - whether this node is branch\r\n * @param {array.<string>} [opened] - Current opened node ids\r\n * @param {array.<string>} [defaultOpened] - Default opened node ids\r\n * @param {function} [onToggleOpen] - Callback function when open is changed. <br> Required when opened prop is supplied\r\n * @param {array.<string>} onToggleOpen.value - current opened (branch) node ids\r\n * @param {object} onToggleOpen.eventInfo - event related info\r\n * @param {array.<string>} onToggleOpen.eventInfo.before - previously opened (branch) node ids\r\n * @param {string} onToggleOpen.eventInfo.id - triggering (branch) node id\r\n * @param {boolean} onToggleOpen.eventInfo.open - triggered by opening?\r\n * @param {array.<string>} onToggleOpen.eventInfo.path - triggering node in the form of path (array), with id & child index\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport _ from 'lodash'\r\nimport {Form, Hierarchy} from 'react-ui'\r\n\r\n\r\nconst INITIAL_DATA = {\r\n    id: 'home',\r\n    label: 'Home',\r\n    children: [\r\n        {\r\n            id: 'A',\r\n            children: [\r\n                {\r\n                    id: 'A.a',\r\n                    children: [\r\n                        {id:'A.a.1'},\r\n                        {\r\n                            id: 'A.a.2',\r\n                            children: [\r\n                                {id:'A.a.2.x'},\r\n                                {id:'A.a.2.y'}\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    id: 'A.b',\r\n                    children: [\r\n                        {id:'A.b.1'},\r\n                        {id:'A.b.2'},\r\n                        {id:'A.b.3'}\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'B', label: 'B',\r\n            children: [\r\n                {id:'B.a', label:'B.a custom label'},\r\n                {id:'B.b', label:'B.b custom label'}\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nExamples.Hierarchy = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            current: 'A.a',\r\n            selected: [],\r\n            data: INITIAL_DATA,\r\n            settings: {\r\n                showRoot: false,\r\n                foldable: true,\r\n                selectable: true,\r\n                layout: 'accordion'\r\n            }\r\n        }\r\n    },\r\n    handleLabelClick(current) {\r\n        this.setState({current})\r\n    },\r\n    handleSelectChange(selected) {\r\n        this.setState({selected})\r\n    },\r\n    renderDemoSettings() {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                showRoot: {\r\n                    label: 'Show Root?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                foldable: {\r\n                    label: 'Allow Expand/Collapse?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                selectable: {\r\n                    label: 'Selectable?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                layout: {\r\n                    label: 'Layout',\r\n                    editor: 'RadioGroup',\r\n                    props: {\r\n                        className: 'inline',\r\n                        list: _.map(['tree', 'accordion'], l=>({value:l, text:l}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    },\r\n    render() {\r\n        let {data, current, selected, settings:{showRoot, foldable, selectable, layout}} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <Hierarchy\r\n                layout={layout}\r\n                foldable={foldable}\r\n                data={showRoot?data:{children:data.children}}\r\n                selection={{\r\n                    enabled: selectable\r\n                }}\r\n                selected={selected}\r\n                onSelectionChange={this.handleSelectChange}\r\n                current={current}\r\n                onLabelClick={this.handleLabelClick}\r\n                defaultOpened={['home', 'A']} />\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass Hierarchy extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        layout: PropTypes.oneOf(['tree', 'accordion']),\r\n        foldable: PropTypes.bool, // when false, will overwrite opened config, since full hierarchy will always be opened (opened=true)\r\n        indent: PropTypes.oneOfType([\r\n            PropTypes.number,\r\n            PropTypes.arrayOf(PropTypes.number)\r\n        ]),\r\n        data: PropTypes.shape({\r\n            id: PropTypes.string,\r\n            label: PropTypes.node,\r\n            className: PropTypes.string,\r\n            foldable: PropTypes.bool,\r\n            indent: PropTypes.number,\r\n            disabled: PropTypes.bool,\r\n            children: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    id: PropTypes.string.isRequired,\r\n                    label: PropTypes.node,\r\n                    className: PropTypes.string,\r\n                    foldable: PropTypes.bool,\r\n                    indent: PropTypes.number,\r\n                    disabled: PropTypes.bool,\r\n                    children: PropTypes.array\r\n                })\r\n            )\r\n        }),\r\n        selection: PropTypes.shape({\r\n            enabled: PropTypes.bool\r\n        }),\r\n        selected: PropTypes.arrayOf(PropTypes.string),\r\n        onSelectionChange: PropTypes.func,\r\n        current: PropTypes.string,\r\n        onLabelClick: PropTypes.func,\r\n        onLabelMouseOver: PropTypes.func,\r\n        opened: PropTypes.arrayOf(PropTypes.string),\r\n        onToggleOpen: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        layout: 'accordion',\r\n        foldable: true,\r\n        indent: [4, 30],\r\n        data: {},\r\n        selection: {\r\n            enabled: false\r\n        },\r\n        selected: [],\r\n        opened: []\r\n    };\r\n\r\n    getLeafNodeIds = (path) => {\r\n        const {data} = this.props\r\n        const pathIgnoringRoot = _.first(path).index==null ? _.tail(path) : path\r\n        const nodePath = _.isEmpty(pathIgnoringRoot) ? null : 'children.'+_.map(pathIgnoringRoot, 'index').join('.children.')\r\n        const currentNode = nodePath ? _.get(data, nodePath) : data\r\n        const children = currentNode.children\r\n        if (!children) {\r\n            return [currentNode.id]\r\n        }\r\n        else {\r\n            const ids = _.flatten(_.map(children, (child, idx)=>{\r\n                return this.getLeafNodeIds([...path, {id:child.id, index:idx}])\r\n            }))\r\n            return ids\r\n        }\r\n    };\r\n\r\n    handleToggleNode = (id, path) => {\r\n        const {opened, onToggleOpen} = this.props\r\n\r\n        const open = !_.includes(opened, id)\r\n\r\n        const newOpened = (\r\n            open ?\r\n                [...opened, id]:\r\n                _.without(opened, id)\r\n        )\r\n        onToggleOpen(newOpened, {open, id, path})\r\n    };\r\n\r\n    handleSelectLabel = (id, path, isBranch) => {\r\n        const {onLabelClick} = this.props\r\n        onLabelClick(id, {path, isBranch})\r\n    };\r\n\r\n    handleHoverLabel = (id, path, isBranch) => {\r\n        const {onLabelMouseOver} = this.props\r\n        onLabelMouseOver && onLabelMouseOver(id, {path, isBranch})\r\n    };\r\n\r\n    handleSelectNode = (path, checked) => {\r\n        const {selected} = this.props\r\n        const {onSelectionChange} = this.props\r\n        const ids = this.getLeafNodeIds(path)\r\n        let newSelected\r\n        if (checked) {\r\n            newSelected = _.uniq([...selected, ...ids])\r\n        }\r\n        else {\r\n            newSelected = _.without(selected, ...ids)\r\n        }\r\n        onSelectionChange(newSelected, {ids, selected:checked})\r\n    };\r\n\r\n    renderNode = (id, label, className, path, disabled, isBranch, foldable, openBranch) => {\r\n        const {current, selected, selection:{enabled:selectable}, layout} = this.props\r\n        const asTree = layout==='tree'\r\n        const isCurrent = id===current\r\n        const childrenIds = this.getLeafNodeIds(path)\r\n        const numSelected = _.intersection(selected, childrenIds).length\r\n\r\n        return <span\r\n            style={asTree?null:{paddingLeft:_.last(path).indent}}\r\n            className={cx('c-flex node', className, {current:isCurrent, selected:numSelected>0})} >\r\n            {\r\n                asTree && isBranch && foldable && <span className='toggler fixed' onClick={this.handleToggleNode.bind(this, id, path)}>\r\n                    [<i className={cx('fg', openBranch?'fg-less':'fg-add')} />]\r\n                </span>\r\n            }\r\n            {selectable && <Checkbox\r\n                checked={numSelected>0}\r\n                disabled={disabled}\r\n                className={cx('fixed selector', {partial:numSelected>0 && numSelected<childrenIds.length})}\r\n                onChange={this.handleSelectNode.bind(this, path)} />}\r\n            <span\r\n                className='label grow'\r\n                onClick={this.handleSelectLabel.bind(this, id, path, isBranch)}\r\n                onMouseOver={this.handleHoverLabel.bind(this, id, path, isBranch)}>\r\n                {(label || id)}\r\n            </span>\r\n            {\r\n                !asTree && isBranch && foldable && <span className='toggler fixed' onClick={this.handleToggleNode.bind(this, id, path)}>\r\n                    <i className={cx('fg', openBranch?'fg-arrow-top':'fg-arrow-bottom')} />\r\n                </span>\r\n            }\r\n        </span>\r\n    };\r\n\r\n    renderHierarchy = (root, parentPath, index) => {\r\n        const {id} = root\r\n\r\n        if (!id) {\r\n            log.error('renderHierarchy::A child without id')\r\n            return null\r\n        }\r\n\r\n        const {foldable, opened, indent} = this.props\r\n        const indentCfg = _.isArray(indent) ? indent : [indent]\r\n        const level = parentPath.length + 1\r\n        const {\r\n            label,\r\n            className,\r\n            disabled: disableLayer=false,\r\n            foldable: layerFoldable=foldable,\r\n            indent: layerIndent=_.get(indentCfg, level-1, _.last(indentCfg)),\r\n            children\r\n        } = root\r\n        const currentPath = [...parentPath, {id, index, indent:_.get(_.last(parentPath), 'indent', 0)+layerIndent}]\r\n\r\n        if (children) {\r\n            const shouldOpen = !layerFoldable || _.find(opened, item=>item===id)\r\n\r\n            return <li key={id} className={cx('branch', `level-${level}`)}>\r\n                {\r\n                    this.renderNode(id, label, className, currentPath, disableLayer, true, layerFoldable, shouldOpen)\r\n                }\r\n                {\r\n                    shouldOpen ?\r\n                        <ul className='children'>\r\n                            {\r\n                            _.map(children, (child, i) => {\r\n                                return this.renderHierarchy(child, currentPath, i)\r\n                            })\r\n                        }\r\n                        </ul> : null\r\n                }\r\n            </li>\r\n        }\r\n        else {\r\n            return <li key={id} className={cx('leaf', `level-${level}`)}>\r\n                {\r\n                    this.renderNode(id, label, className, currentPath, disableLayer, false, false, false)\r\n                }\r\n            </li>\r\n        }\r\n    };\r\n\r\n    // TODO: allow customizing leaf node and parent nodes\r\n    render() {\r\n        const {id, data, className, layout} = this.props\r\n        const {id:rootId} = data\r\n\r\n        return <ul id={id} className={cx('c-hierarchy', layout, className)}>\r\n            {\r\n                rootId ?\r\n                this.renderHierarchy(data, []) :\r\n                _.map(data.children, (item, i) => {\r\n                    return this.renderHierarchy(item, [], i)\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default wireSet(Hierarchy, {\r\n    current: {defaultValue:'', changeHandlerName:'onLabelClick'},\r\n    selected: {defaultValue:[], changeHandlerName:'onSelectionChange'},\r\n    opened: {defaultValue:[], changeHandlerName:'onToggleOpen'}\r\n})","import React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Tiles from './tiles'\r\nimport Image from './image'\r\nimport { wire } from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/image-gallery')\r\n\r\n/**\r\n * React ImageGallery - Image Gallery made up of a row of images/tiles, with prev and next icons.\r\n *\r\n * Uses Tiles internally.\r\n *\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {string|function} [base='img'] - React class to use for rendering the tile, eg 'div', 'img', <SelfDefinedComponent/>\r\n * @param {array.<object>} items - Props supplied to tile. See [Tiles]{@link module:Tiles} for API\r\n * @param {'auto' | number} [max] - Max number of tiles. If 'auto' will try to calculate max, if not specified, will display all tiles\r\n * @param {object} [itemProps] - props for individual image/tile\r\n * @param {object} [itemSize] - image/tile size\r\n * @param {number} [itemSize.width] - image/tile width\r\n * @param {number} [itemSize.height] - image/tile height\r\n * @param {number} [spacing=0] - Spacing (in px) between images/tiles\r\n * @param {'%' | 'px'} [unit='px'] - itemSize unit\r\n * @param {function} [onClick] - Function to call when clicked\r\n * @param {object} onClick.id - image/tile id clicked\r\n * @param {object} onClick.eventInfo - other event info\r\n * @param {number} onClick.eventInfo.index - current array index of clicked image/tile\r\n * @param {number} onClick.eventInfo.max - number of visible images/tiles\r\n * @param {number} onClick.eventInfo.total - total # images/tiles\r\n * @param {function} [onMouseOver] - Function to call when mouse over tile, see onClick for callback function spec\r\n * @param {function} [onMouseOut] - Function to call when mouse out tile, see onClick for callback function spec\r\n * @param {number} [start=0] - index to start displaying images/tiles from, if absent start will be uncontrolled\r\n * @param {number} [defaultStart=0] - Default index to start displaying images/tiles from\r\n * @param {boolean} [hasPrev=auto detect] - should previous icon be displayed\r\n * @param {boolean} [hasNext=auto detect] - should next icon be displayed\r\n * @param {boolean} [repeat=false] - Repeat the play list?\r\n * @param {object} [autoPlay] - autoPlay configuration\r\n * @param {boolean} [autoPlay.enabled=false] - Allow autoPlay/filter list?\r\n * @param {string} [autoPlay.interval=7000] - Interval between slides in milliseconds\r\n * @param {function} [onMove] - Function to call when prev or next icon is clicked, move forward/backward by *step* when not specified\r\n * @param {string} onMove.start - new start index\r\n * @param {object} onMove.eventInfo - eventInfo associated with move\r\n * @param {boolean} onMove.eventInfo.backward - is previous icon clicked\r\n * @param {number} onMove.eventInfo.step - how many items to move forward/backward?\r\n *\r\n *\r\n * @example\r\n\r\nimport {ImageGallery} from 'react-ui'\r\nimport _ from 'lodash'\r\n\r\nconst IMAGES = [\r\n    'bs', 'camera', 'car', 'drug', 'email', 'fb_messenger', 'goods',\r\n    'gun', 'home', 'ic_airplane', 'ic_alert_2', 'ic_bs',\r\n    'ic_cam_2', 'ic_cam_3', 'ic_car_2', 'ic_case', 'ic_creditcard', 'ic_database', 'ic_drug',\r\n    'ic_email', 'ic_etag', 'ic_etag_gate', 'ic_globe', 'ic_goods', 'ic_gun', 'ic_help', 'ic_home', 'ic_info', 'ic_ip',\r\n    'ip', 'landline', 'line', 'mobile', 'parking', 'person'\r\n]\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            selected: null,\r\n            max: null,\r\n            total: null,\r\n            start: 3,\r\n            prevStart: null,\r\n            moveBackward: false,\r\n            step: null\r\n        }\r\n    },\r\n    handleClick(id, {index, max, total}) {\r\n        this.setState({\r\n            selected: id,\r\n            max,\r\n            total\r\n        })\r\n    },\r\n    handleMove(start, {before:prevStart, backward:moveBackward, step}) {\r\n        // start is uncontrolled\r\n        this.setState({\r\n            start,\r\n            prevStart,\r\n            moveBackward,\r\n            step\r\n        })\r\n    },\r\n    render() {\r\n        const {start} = this.state\r\n\r\n        return <ImageGallery\r\n            id='gallery-images'\r\n            items={_.map(IMAGES, item=>({id:item, src:`/images/tiles/${item}.png`}))}\r\n            itemSize={{width:120, height:90}}\r\n            unit='px'\r\n            spacing={3}\r\n            defaultStart={start}\r\n            onMove={this.handleMove}\r\n            onClick={this.handleClick}\r\n            repeat\r\n            autoPlay={{\r\n                enabled: true,\r\n                interval: 3000\r\n            }} />\r\n    }\r\n})\r\n\r\n\r\n */\r\nclass ImageGallery extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        base: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n        items: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string,\r\n            width: PropTypes.number,\r\n            height: PropTypes.number\r\n        })).isRequired,\r\n        total: PropTypes.number,\r\n        max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n        itemProps: PropTypes.object,\r\n        itemSize: PropTypes.shape({\r\n            width: PropTypes.number,\r\n            height: PropTypes.number\r\n        }),\r\n        spacing: PropTypes.number,\r\n        unit: PropTypes.oneOf(['%', 'px']),\r\n        onClick: PropTypes.func,\r\n        onMouseOver: PropTypes.func,\r\n        onMouseOut: PropTypes.func,\r\n        start: PropTypes.number,\r\n        hasPrev: PropTypes.bool,\r\n        hasNext: PropTypes.bool,\r\n        repeat: PropTypes.bool,\r\n        autoPlay: PropTypes.shape({\r\n            enabled: PropTypes.bool,\r\n            interval: PropTypes.number\r\n        }),\r\n        onMove: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        base: Image,\r\n        items: [],\r\n        max: 'auto',\r\n        repeat: false,\r\n        autoPlay: {\r\n            enabled: false\r\n        },\r\n        start: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {autoPlay} = this.props\r\n\r\n        this.forceUpdate() // re-render so the left/right arrows will be shown according to current maxTiles\r\n        if (autoPlay.enabled) {\r\n            this.createTimer()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearTimer()\r\n    }\r\n\r\n    createTimer = () => {\r\n        const {autoPlay:{interval=7000}} = this.props\r\n        this.clearTimer()\r\n        this.timer = setInterval(()=>{\r\n            this.slide()\r\n        }, interval)\r\n    };\r\n\r\n    clearTimer = () => {\r\n        if (this.timer) {\r\n            clearInterval(this.timer)\r\n        }\r\n    };\r\n\r\n    slide = (backward=false, resetAutoPlay=false) => {\r\n        const {start, max, items, onMove, autoPlay, repeat} = this.props\r\n        const total = this.props.total || items.length\r\n        const numTiles = this.tiles.maxTiles\r\n        const itemsToMove = max==='auto' ? numTiles : max\r\n\r\n        let newStart\r\n        if (backward) {\r\n            newStart = repeat ? (start-itemsToMove+total)%total : Math.max(start-itemsToMove, 0)\r\n        }\r\n        else {\r\n            if (repeat) {\r\n                newStart = (start+itemsToMove)%total\r\n            }\r\n            else if (start+itemsToMove >= total) {\r\n                return\r\n            }\r\n            else {\r\n                newStart = start+itemsToMove\r\n            }\r\n        }\r\n\r\n        if (autoPlay.enabled && resetAutoPlay) {\r\n            this.createTimer()\r\n        }\r\n\r\n        onMove(newStart, {step:itemsToMove, total, backward})\r\n    };\r\n\r\n    render() {\r\n        const {id, className, base, items, start, hasPrev, hasNext, repeat, ...tilesProps} = this.props\r\n        const numTiles = this.tiles ? this.tiles.maxTiles : 0\r\n\r\n        let showPrev = hasPrev\r\n        let showNext = hasNext\r\n\r\n        if (repeat) {\r\n            showPrev = true\r\n            showNext = true\r\n        }\r\n        else {\r\n            if (showPrev==null) {\r\n                showPrev = start > 0\r\n            }\r\n            if (showNext==null) {\r\n                showNext = (this.props.total || items.length) > (start + numTiles)\r\n            }\r\n        }\r\n\r\n        return <div id={id} className={cx('c-image-gallery c-flex', className)}>\r\n            <i className={cx('fg fg-arrow-left fixed asc large', {'c-link':showPrev, disabled:!showPrev})} onClick={showPrev && this.slide.bind(this, true, true)} />\r\n            <Tiles\r\n                base={base}\r\n                className='grow'\r\n                overlay={false}\r\n                max={'auto'}\r\n                items={[..._.slice(items, start), ..._.take(items, repeat ? numTiles : 0)]}\r\n                ref={ref=>{ this.tiles=ref }}\r\n                {...tilesProps} />\r\n            <i className={cx('fg fg-arrow-right fixed asc large', {'c-link':showNext, disabled:!showNext})} onClick={showNext && this.slide.bind(this, false, true)} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default wire(ImageGallery, 'start', 0, 'onMove')","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/image')\r\n\r\n/**\r\n * A React Image Component, with preloading options\r\n * @constructor\r\n * @param {string} [id] - Container element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {object} [style] - Styles for the container\r\n * @param {string} src - Image source url\r\n * @param {string} [alt] - Image alt\r\n * @param {boolean} [preload=true] - Allow preloading image? If false then will act as normal <img> tag\r\n * @param {number} [timeout=30000] - When preload is enabled, maximum time (in milliseconds) to wait before error kicks in\r\n * @param {string} [placeholder] - When preload is enabled, alternative image url to show when image load has failed\r\n * @param {renderable} [error='Load failed'] - When preload is enabled, error message to show when image load has filed\r\n *\r\n * @example\r\nimport {Image} from 'react-ui'\r\n\r\nExamples.Image = React.createClass({\r\n    render() {\r\n        return <Image\r\n            src='/images/missing.png'\r\n            error=':('\r\n            placeholder='/images/tiles/ic_alert_2.png' />\r\n    }\r\n})\r\n */\r\n\r\nclass Image extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        src: PropTypes.string.isRequired,\r\n        alt: PropTypes.string,\r\n        preload: PropTypes.bool,\r\n        timeout: PropTypes.number,\r\n        placeholder: PropTypes.string,\r\n        error: PropTypes.node\r\n    };\r\n\r\n    static defaultProps = {\r\n        preload: true,\r\n        timeout: 30000,\r\n        error: 'Load failed'\r\n    };\r\n\r\n    state = {\r\n        done: false,\r\n        error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {preload} = this.props\r\n        preload && this.createTimer()\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {src, preload} = nextProps\r\n        const {src:prevSrc} = this.props\r\n\r\n        this.clearTimer()\r\n        if (preload && prevSrc !== src) {\r\n            this.setState({done:false, error:false})\r\n            this.createTimer()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.clearTimer()\r\n    }\r\n\r\n    clearTimer = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer)\r\n        }\r\n    };\r\n\r\n    createTimer = () => {\r\n        const {timeout} = this.props\r\n        this.clearTimer()\r\n        this.timer = setTimeout(() => {\r\n            this.handleDone(false)\r\n        }, timeout)\r\n    };\r\n\r\n    handleDone = (success) => {\r\n        this.clearTimer()\r\n        if (!this.state.done) {\r\n            this.setState({done:true, error:!success})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {id, className, style, src, alt, preload, error, placeholder} = this.props\r\n        const {error:hasError, done} = this.state\r\n\r\n        if (preload) {\r\n            if (!done) {\r\n                return <div id={id} className={cx('c-image loading c-flex aic jcc', className)} style={style}>\r\n                    <i className='fg fg-loading-2 fg-spin' />\r\n                    <img\r\n                        src={src}\r\n                        alt={alt}\r\n                        onError={this.handleDone.bind(this, false)}\r\n                        onAbort={this.handleDone.bind(this, false)}\r\n                        onLoad={this.handleDone.bind(this, true)} />\r\n                </div>\r\n            }\r\n            else if (hasError) {\r\n                return <div id={id} className={cx('c-image error c-flex aic jcc', className)} style={style}>\r\n                    {error && <div className='error'>{error}</div>}\r\n                    {placeholder && <img alt={alt} src={placeholder} />}\r\n                </div>\r\n            }\r\n        }\r\n\r\n        return <img\r\n            id={id}\r\n            className={cx('c-image complete', className)}\r\n            style={style}\r\n            src={src}\r\n            alt={alt} />\r\n    }\r\n}\r\n\r\nexport default Image","import ButtonGroup from './button-group'\r\nimport CheckboxGroup from './checkbox-group'\r\nimport Checkbox from './checkbox'\r\nimport Combobox from './combobox'\r\nimport Contextmenu from './contextmenu'\r\nimport DatePicker from './date-picker'\r\nimport DateRange from './date-range'\r\nimport Dropdown from './dropdown'\r\nimport FileInput from './file-input'\r\nimport Form from './form'\r\nimport Grid from './grid'\r\nimport Image from './image'\r\nimport ImageGallery from './image-gallery'\r\nimport Input from './input'\r\nimport Hierarchy from './hierarchy'\r\nimport List from './list'\r\nimport ModalDialog from './modal-dialog'\r\nimport MultiInput from './multi-input'\r\nimport PageNav from './page-nav'\r\nimport Popover from './popover'\r\nimport PopupDialog from './popup-dialog'\r\nimport Progress from './progress'\r\nimport RadioGroup from './radio-group'\r\nimport RangeCalendar from './range-calendar'\r\nimport Search from './search'\r\nimport Slider from './slider'\r\nimport Table from './table'\r\nimport Tabs from './tabs'\r\nimport Text from './text'\r\nimport Textarea from './textarea'\r\nimport Tiles from './tiles'\r\nimport Timeline from './timeline'\r\nimport ToggleButton from './toggle-button'\r\nimport Tree from './tree'\r\n\r\nexport {\r\n    ButtonGroup,\r\n    CheckboxGroup,\r\n    Checkbox,\r\n    Combobox,\r\n    Contextmenu,\r\n    DatePicker,\r\n    DateRange,\r\n    Dropdown,\r\n    FileInput,\r\n    Form,\r\n    Grid,\r\n    Image,\r\n    ImageGallery,\r\n    Input,\r\n    Hierarchy,\r\n    List,\r\n    ModalDialog,\r\n    MultiInput,\r\n    PageNav,\r\n    Popover,\r\n    PopupDialog,\r\n    Progress,\r\n    RadioGroup,\r\n    RangeCalendar,\r\n    Search,\r\n    Slider,\r\n    Table,\r\n    Tabs,\r\n    Text,\r\n    Textarea,\r\n    Tiles,\r\n    Timeline,\r\n    ToggleButton,\r\n    Tree\r\n}\r\n\r\nexport default {\r\n    ButtonGroup,\r\n    CheckboxGroup,\r\n    Checkbox,\r\n    Combobox,\r\n    Contextmenu,\r\n    DatePicker,\r\n    DateRange,\r\n    Dropdown,\r\n    FileInput,\r\n    Form,\r\n    Grid,\r\n    Image,\r\n    ImageGallery,\r\n    Input,\r\n    Hierarchy,\r\n    List,\r\n    ModalDialog,\r\n    MultiInput,\r\n    PageNav,\r\n    Popover,\r\n    PopupDialog,\r\n    Progress,\r\n    RadioGroup,\r\n    RangeCalendar,\r\n    Search,\r\n    Slider,\r\n    Table,\r\n    Tabs,\r\n    Text,\r\n    Textarea,\r\n    Tiles,\r\n    Timeline,\r\n    ToggleButton,\r\n    Tree\r\n}","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport _str from 'underscore.string'\r\n\r\n\r\nimport { SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport Popover from './popover'\r\nimport ih from '../utils/input-helper'\r\nimport {wireValue} from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/input')\r\n\r\n/**\r\n * A React (text) Input. Note this is wrapper around react builtin input element, major differences are:\r\n *\r\n * * Provides validation tooltip (optional)\r\n * * Only fire onChange event when the field has lost focus\r\n *\r\n * @constructor\r\n * @param {string} [id] - Input element #id\r\n * @param {string} [name] - Input element name\r\n * @param {'text'|'number'|'integer'} [type='text'] - Input type, default to 'text', if type='number' or 'integer' will trigger validation\r\n * @param {function} [formatter] - Input value display formatter\r\n * @param {string} formatter.value - currently entered input\r\n * @param {object} [validate] - Validation config\r\n * @param {number} validate.min - minimum value when type='number' or 'integer'\r\n * @param {number} validate.max - maximum value when type='number' or 'integer'\r\n * @param {RegExp|string} validate.pattern - RegExp string to test against when type='text'\r\n * @param {string} validate.patternReadable - Readable pattern string\r\n * @param {fuction} [validate.t] - Transform/translate error into readable message.<br>\r\n * If not specified, error message will be `${value} ${code}`<br>\r\n * For example see [i18next]{@link http://i18next.com/translate/} translator for generating error message.<br>\r\n * @param {'missing'|'no-match'|'not-int'|'not-num'|'out-of-bound'} validate.t.code - Error code\r\n * @param {object} validate.t.params - Parameters relevant to the error code\r\n * @param {string} validate.t.params.field - offending field name/id\r\n * @param {string} validate.t.params.value - offending field value\r\n * @param {RegExp|string} [validate.t.params.pattern] - pattern the value was supposed to follow\r\n * @param {number} [validate.t.params.min] - configured minimum value\r\n * @param {number} [validate.t.params.max] - configured maximum value\r\n * @param {string} [className] - Classname for the input\r\n * @param {string|number} [defaultValue] - Default value\r\n * @param {string|number} [value] - Current value\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean} [required=false] - Is this field mandatory? If true will trigger validation.\r\n * @param {boolean} [disabled=false] - Is this field disabled?\r\n * @param {boolean} [readOnly=false] - Is this field readonly?\r\n * @param {string} [maxLength] - Maximum input length\r\n * @param {string} [placeholder] - Placeholder for input\r\n * @param {function} [onChange] - Callback function when value is changed. <br> Required when value prop is supplied\r\n * @param {string|number} onChange.value - updated value\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string|number} onChange.eventInfo.before - previous value\r\n * @param {boolean} onChange.eventInfo.isComplete - was it triggered by pressing enter key?\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {Input} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            name:'',\r\n            age:'',\r\n            email:''\r\n        }\r\n    },\r\n    handleChange(field,value) {\r\n        this.setState({[field]:value})\r\n    },\r\n    render() {\r\n        let {name, age, email} = this.state;\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='name'>Name</label>\r\n                <Input id='name'\r\n                    onChange={this.handleChange.bind(this,'name')}\r\n                    value={name}\r\n                    required={true}\r\n                    placeholder='Your name'/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='age'>Age</label>\r\n                <Input id='age'\r\n                    type='number'\r\n                    validate={{\r\n                        max:100,\r\n                        t:(code, {value})=>`Age ${value} is invalid`\r\n                    }}\r\n                    className='my-age'\r\n                    onChange={this.handleChange.bind(this,'age')}\r\n                    value={age}\r\n                    placeholder='Your age'/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='email'>Email</label>\r\n                <Input id='email'\r\n                    validate={{\r\n                        pattern:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                        patternReadable:'xxx@xxx.xxx',\r\n                        t:(code, {value,pattern})=>{\r\n                            if (code==='missing') {\r\n                                return 'You didn\\'t enter an email address'\r\n                            }\r\n                            else { // assume pattern issue\r\n                                return `You didn't provide a valid email, the correct format should be ${pattern}`\r\n                            }\r\n                        }\r\n                    }}\r\n                    onChange={this.handleChange.bind(this,'email')}\r\n                    value={email}/>\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass Input extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        type: PropTypes.oneOf(['text', 'number', 'integer', 'password']),\r\n        formatter: PropTypes.func,\r\n        validate: PropTypes.shape({\r\n            min: PropTypes.number,\r\n            max: PropTypes.number,\r\n            pattern: PropTypes.oneOfType([PropTypes.instanceOf(RegExp), PropTypes.string]),\r\n            patternReadable: PropTypes.string,\r\n            t: PropTypes.func\r\n        }),\r\n        className: PropTypes.string,\r\n        value: SIMPLE_VALUE_PROP,\r\n        required: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        readOnly: PropTypes.bool,\r\n        maxLength: PropTypes.number,\r\n        placeholder: SIMPLE_VALUE_PROP,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        type: 'text',\r\n        validate: {},\r\n        required: false,\r\n        disabled: false,\r\n        readOnly: false\r\n    };\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        let {value} = props\r\n\r\n        this.state = {\r\n            value,\r\n            error: this.validateInput(value)\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let {value} = nextProps\r\n        this.setState({\r\n            value,\r\n            error: this.validateInput(value, nextProps)\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Popover.close()\r\n    }\r\n\r\n    changeHandler = (evt) => {\r\n        let newVal = evt.target.value\r\n        let error = this.validateInput(newVal)\r\n        this.nextTime = false\r\n\r\n        if (error) {\r\n            evt.stopPropagation()\r\n            evt.preventDefault()\r\n            Popover.open(evt, error)\r\n            this.setState({error, value:newVal})\r\n        }\r\n        else {\r\n            Popover.close()\r\n            this.setState({value:newVal, error:false})\r\n        }\r\n    };\r\n\r\n    keyHandler = (evt) => {\r\n        if (evt.keyCode === 13) {\r\n            this.blurHandler(evt, {isComplete:true})\r\n        }\r\n    };\r\n\r\n    blurHandler = (evt, info={}) => {\r\n        let {value:oldVal} = this.props\r\n        let {error, value:newVal} = this.state\r\n\r\n        if (error) {\r\n            if (!this.nextTime) {\r\n                this.nextTime = true\r\n                this.setState({value:oldVal})\r\n                this.input.focus()\r\n            }\r\n            else {\r\n                this.nextTime = false\r\n                Popover.close()\r\n                this.setState({error:this.validateInput(evt.target.value)!==null})\r\n            }\r\n        }\r\n        else {\r\n            if (oldVal !== newVal) {\r\n                let {formatter, onChange} = this.props\r\n\r\n                if (newVal!=null && !_str.isBlank(newVal) && formatter && _.isFunction(formatter)) {\r\n                    newVal = formatter(newVal)\r\n                }\r\n\r\n                onChange(newVal, info)\r\n            }\r\n        }\r\n    };\r\n\r\n    validateInput = (value, props) => {\r\n        let {name, id, type, required, validate:{t, ...params}} = props || this.props\r\n\r\n        let msg = ih.validateField(value, {name:name || id, type, required, ...params}, t?{et:t}:true)\r\n\r\n        if (msg) {\r\n            return <span>{msg}</span>\r\n        }\r\n        return null\r\n    };\r\n\r\n    render() {\r\n        let {className, id, name, type, disabled, readOnly, placeholder, maxLength} = this.props\r\n        let {value, error} = this.state\r\n\r\n        let changeHandler = this.changeHandler\r\n\r\n        switch (type) {\r\n            default:\r\n                return <input\r\n                    id={id}\r\n                    name={name}\r\n                    ref={ref=>{ this.input=ref }}\r\n                    type={(type === 'password') ? 'password' : 'text'}/* {type}*/\r\n                    /* min={min}\r\n                    max={max}\r\n                    step={step}\r\n                    pattern={pattern}\r\n                    required={required}*/\r\n                    readOnly={readOnly}\r\n                    disabled={disabled}\r\n                    maxLength={maxLength}\r\n                    onChange={changeHandler}\r\n                    onBlur={this.blurHandler}\r\n                    onKeyUp={this.keyHandler}\r\n                    placeholder={placeholder}\r\n                    className={cx(className, {invalid:error})}\r\n                    value={value} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default wireValue(Input)","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport {wireSet} from '../hoc/prop-wire'\r\nimport Checkbox from './checkbox'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/list')\r\n\r\n/**\r\n * A React List view, currently effective classNames are multicols, decimal, disc\r\n * @todo Better support for defining how many columns; better support for rendering list items\r\n *\r\n * @constructor\r\n * @param {string} [id] - List dom element #id\r\n * @param {string} [className] - Classname for the container, avaiable built-in classnames:\r\n * * selectable - Change color when hovering over list item\r\n * * multicols - SShow list as multi-columns\r\n * @param {object|array} list - Data list\r\n * @param {string} [itemIdField='id'] - The field key which will be used as item dom #id\r\n * @param {string | function} [itemClassName] - Classname of a list item\r\n * @param {string | function} [itemStyle] - Style of a list item\r\n * @param {function} [formatter] - Function to render list item\r\n * @param {object} [selection] - List item selection settings\r\n * @param {boolean} [selection.enabled=false] - Are list items selectable? If yes checkboxes will appear\r\n * @param {boolean} [selection.multiSelect=true] - Can select multiple items?\r\n * @param {string | array.<string>} [defaultSelected] - Selected item id(s)\r\n * @param {string | array.<string>} [selected] - Default selected item id(s)\r\n * @param {object} [selectedLink] - Link to update selections. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} selectedLink.value - value to update\r\n * @param {function} selectedLink.requestChange - function to request value change\r\n * @param {function} [onSelectionChange] - Callback function when item is selected. <br> Required when selected prop is supplied\r\n * @param {string | array} onSelectionChange.value - current selected item ids\r\n * @param {object} onSelectionChange.eventInfo - event related info\r\n * @param {string | array} onSelectionChange.eventInfo.before - previous selected item ids\r\n * @param {string} onSelectionChange.eventInfo.id - id triggering change\r\n * @param {boolean} onSelectionChange.eventInfo.selected - selected?\r\n * @param {function} [onClick] [description]\r\n * @param {renderable} [info] - React renderable object, display additional information about the list\r\n * @param {string} [infoClassName] - Assign className to info node\r\n *\r\n * @example\r\n\r\nimport _ from 'lodash'\r\nimport {List} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movies: _(_.range(0, 200)).map(i=>({id:`${i}`, title:`Movie ${i}`})).value() // 200 movies\r\n        }\r\n    },\r\n    render() {\r\n        const {movies} = this.state\r\n        return <List\r\n            id='movies'\r\n            list={movies}\r\n            itemClassName='c-flex aic'\r\n            selection={{enabled:true}}\r\n            formatter={movie=>`${movie.id} - ${movie.title}`} />\r\n    }\r\n})\r\n */\r\nclass List extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        list: PropTypes.oneOfType([\r\n            PropTypes.object,\r\n            PropTypes.array\r\n        ]),\r\n        itemClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n        itemStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n        itemIdField: PropTypes.string,\r\n        formatter: PropTypes.func,\r\n        selection: PropTypes.shape({\r\n            enabled: PropTypes.bool,\r\n            multiSelect: PropTypes.bool\r\n        }),\r\n        selected: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.arrayOf(PropTypes.string)\r\n        ]),\r\n        onSelectionChange: PropTypes.func,\r\n        onClick: PropTypes.func,\r\n        info: PropTypes.node,\r\n        infoClassName: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        list: {},\r\n        itemIdField: 'id',\r\n        selection: {\r\n            enabled: false\r\n        }\r\n    };\r\n\r\n    handleToggleSelection = (id, selected) => {\r\n        const {selection:{multiSelect=true}, selected:curSelected, onSelectionChange} = this.props\r\n        if (multiSelect) {\r\n            const newSelected = selected ? [...curSelected, id] : _.without(curSelected, id)\r\n            onSelectionChange(newSelected, {id, selected})\r\n        }\r\n        else {\r\n            onSelectionChange(selected ? id : '')\r\n        }\r\n    };\r\n\r\n    renderListItem = (item, id) => {\r\n        const {\r\n            formatter,\r\n            itemClassName, itemStyle,\r\n            selection: {enabled:selectable, multiSelect:multiSelectable=true},\r\n            selected,\r\n            onClick\r\n        } = this.props\r\n\r\n        let content = item\r\n\r\n        if (formatter && _.isFunction(formatter)) {\r\n            content = formatter(item, id)\r\n        }\r\n\r\n        let _itemClassName = itemClassName\r\n        if (itemClassName) {\r\n            if (_.isFunction(itemClassName)) {\r\n                _itemClassName = itemClassName(item)\r\n            }\r\n        }\r\n\r\n        let _itemStyle = itemStyle\r\n        if (itemStyle) {\r\n            if (_.isFunction(itemStyle)) {\r\n                _itemStyle = itemStyle(item)\r\n            }\r\n        }\r\n\r\n        const itemSelected = (multiSelectable && _.includes(selected, id)) || (!multiSelectable && selected===id)\r\n        if (itemSelected) {\r\n            _itemClassName = [_itemClassName, 'selected']\r\n        }\r\n\r\n        return <li\r\n            key={id}\r\n            id={id}\r\n            className={cx('c-flex', _itemClassName)}\r\n            style={_itemStyle}\r\n            onClick={onClick ? onClick.bind(null, id, item) : null}>\r\n            {selectable && <Checkbox checked={itemSelected} onChange={this.handleToggleSelection.bind(this, id)} />}\r\n            {content}\r\n        </li>\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            id, className,\r\n            list, itemIdField,\r\n            info, infoClassName,\r\n            selection: {enabled:selectable}\r\n        } = this.props\r\n\r\n        return <ul id={id} className={cx('c-list', {selectable}, className)}>\r\n            {\r\n                info ?\r\n                    <li className={cx('c-info', infoClassName)}>{info}</li> :\r\n                _.map(list, (item, key) => {\r\n                    return this.renderListItem(item, `${_.get(item, itemIdField, key)}`)\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default wireSet(List, {\r\n    selected: {\r\n        changeHandlerName: 'onSelectionChange',\r\n        defaultValue: ({selection={}})=>{\r\n            const {enabled, multiSelect=true} = selection\r\n            if (enabled) {\r\n                return multiSelect ? [] : ''\r\n            }\r\n            return ''\r\n        }\r\n    }\r\n})\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\r\nimport Draggable from 'react-draggable'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport { SIMPLE_OBJECT_PROP } from '../consts/prop-types'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/modal-dialog')\r\n\r\n/**\r\n * A React modal dialog\r\n * @constructor\r\n * @param {string} [id] - Modal dialog element #id\r\n * @param {renderable} [title] - Title of the dialog\r\n * @param {object} actions - Define buttons and actions to trigger\r\n * @param {object} actions.key - Config for this **action**\r\n * @param {string} actions.key.text - action button text\r\n * @param {string} actions.key.className - action button className\r\n * @param {boolean} [actions.key.disabled=false] - disable this action\r\n * @param {function} actions.key.handler - function to invoke when action is triggered (ie button clicked)\r\n * @param {string} [closeAction] - Action to invoke when close(x) icon is clicked\r\n * @param {string} [defaultAction] - Default action button **key** to focus on\r\n * @param {string} [className] - Additional classnames for modal container\r\n * @param {string} [contentClassName] - Additional classnames for the dialog content\r\n * @param {string} [controlClassName] - Additional classnames for the action buttons\r\n * @param {object} [style] - Style for the dialog\r\n * @param {number} [opacity=0.5] - Opacity for the background shield\r\n * @param {boolean} [show=true] - Show dialog or not?\r\n * @param {boolean} [useTransition=false] - Transition effect?\r\n * @param {boolean} [draggable=false] - Draggable header?\r\n * @param {boolean} [boolean=false] - Make dialog center of page?\r\n * @param {renderable} [info] - React renderable object, display info at footer, eg error message\r\n * @param {string} [infoClassName] - Assign className to info node\r\n * @param {renderable} children - Content of the dialog\r\n *\r\n * @example\r\n\r\nimport _ from 'lodash'\r\nimport {ModalDialog, Dropdown} from 'react-ui'\r\nimport {LinkedStateMixin} from 'core/mixins/linked-state-mixins'\r\n\r\nconst INITIAL_STATE = {\r\n    open:false,\r\n    info:null,\r\n    error:false,\r\n    movieId:null\r\n}\r\nconst RateMovieDialog = React.createClass({\r\n    mixins:[LinkedStateMixin],\r\n    getInitialState() {\r\n        return _.clone(INITIAL_STATE)\r\n    },\r\n    open(movieId, {rating}) {\r\n        // ajax get movie details by id\r\n        this.setState({movieId, rating, open:true})\r\n    },\r\n    close(changed, data) {\r\n        this.setState(_.clone(INITIAL_STATE), () => {\r\n            this.props.onDone(changed, data);\r\n        });\r\n    },\r\n    rateMovie() {\r\n        let {rating} = this.state\r\n        // can be ajax to post rating\r\n        if (rating) {\r\n            this.close(true, {rating})\r\n        }\r\n        else {\r\n            this.setState({info:'Please select rating', error:true})\r\n        }\r\n    },\r\n    render() {\r\n        let {movieId, open, info, error} = this.state;\r\n        if (!open) {\r\n            return null\r\n        }\r\n\r\n        let actions = {\r\n             cancel:{text:'Cancel', handler:this.close.bind(this,false,null)},\r\n             confirm:{text:'OK!', className:'btn-ok', handler:this.rateMovie}\r\n        }\r\n        return <ModalDialog\r\n             id='rate-movie-dialog'\r\n             title={`Rate ${movieId}!`}\r\n             draggable={true}\r\n             global={true}\r\n             info={info}\r\n             infoClassName={cx({'c-error':error})}\r\n             actions={actions}>\r\n             <Dropdown list={_.map(_.range(1,11),i=>({value:i,text:i}))}\r\n                 valueLink={this.linkState('rating')}/>\r\n         </ModalDialog>\r\n    }\r\n})\r\n */\r\nclass ModalDialog extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        title: PropTypes.node,\r\n        actions: PropTypes.objectOf(\r\n            PropTypes.shape({\r\n                className: PropTypes.string,\r\n                text: PropTypes.node,\r\n                disabled: PropTypes.bool,\r\n                handler: PropTypes.func\r\n            }).isRequired\r\n        ).isRequired,\r\n        closeAction: PropTypes.string,\r\n        defaultAction: PropTypes.string,\r\n        className: PropTypes.string,\r\n        contentClassName: PropTypes.string,\r\n        controlClassName: PropTypes.string,\r\n        style: SIMPLE_OBJECT_PROP,\r\n        opacity: PropTypes.number,\r\n        show: PropTypes.bool,\r\n        useTransition: PropTypes.bool,\r\n        draggable: PropTypes.bool,\r\n        global: PropTypes.bool,\r\n        info: PropTypes.node,\r\n        infoClassName: PropTypes.string,\r\n        children: PropTypes.node\r\n    };\r\n\r\n    static defaultProps = {\r\n        title: '',\r\n        actions: {},\r\n        opacity: 0.5,\r\n        show: true,\r\n        useTransition: false,\r\n        draggable: false,\r\n        global: false,\r\n        className: ''\r\n    };\r\n\r\n    state = {\r\n        show: this.props.show\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.focusAction()\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({show:nextProps.show})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.focusAction()\r\n    }\r\n\r\n    toggle = (show) => {\r\n        this.setState({show})\r\n    };\r\n\r\n    focusAction = () => {\r\n        if (this.state.show) {\r\n            let {defaultAction} = this.props\r\n\r\n            if (defaultAction) {\r\n                this[defaultAction+'Btn'].focus()\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let {id, useTransition} = this.props\r\n        let {show} = this.state\r\n\r\n        let modalContent = null\r\n\r\n        if (show) {\r\n            let {title, actions, closeAction: closeActionKey, className, contentClassName, controlClassName,\r\n                style: dialogStyle, opacity, info, infoClassName, draggable,\r\n                global, children} = this.props\r\n\r\n            let actionNodes = _.map(_.keys(actions), actionKey => {\r\n                let action = actions[actionKey]\r\n                return <button\r\n                    className={cx(controlClassName, action.className)}\r\n                    disabled={action.disabled}\r\n                    ref={ref=>{ this[actionKey+'Btn']=ref }}\r\n                    key={actionKey}\r\n                    name={actionKey}\r\n                    onClick={action.handler}>\r\n                    {action.text || actionKey}\r\n                </button>\r\n            })\r\n\r\n            let closeAction = closeActionKey && actions[closeActionKey]\r\n\r\n            let dialogContent = <section id={id+'-dialog'} className='c-box dialog' style={dialogStyle}>\r\n                {\r\n                        title ?\r\n                            <header className={cx({handle:draggable}, 'c-flex')}>\r\n                                {title}<i className='c-link fg fg-close end' onClick={closeAction ? closeAction.handler : this.toggle.bind(this, false)} />\r\n                            </header> :\r\n                        null\r\n                    }\r\n                <div id={id+'-content'} className={cx('content', contentClassName)}>{children}</div>\r\n                {\r\n                        (actionNodes.length>0 || info) &&\r\n                        <footer>\r\n                            {info && <div className={cx('c-info', infoClassName)} dangerouslySetInnerHTML={{__html:info}} />}\r\n                            {actionNodes}\r\n                        </footer>\r\n                    }\r\n            </section>\r\n\r\n            modalContent = <section id={id} className={cx('c-modal show', global?'c-center global':'', className)}>\r\n                <div id='overlay' style={{opacity}} />\r\n                {\r\n                    draggable ?\r\n                        <Draggable handle='.handle' bounds='parent'>\r\n                            {dialogContent}\r\n                        </Draggable> :\r\n                    dialogContent\r\n                }\r\n            </section>\r\n        }\r\n\r\n\r\n        return (useTransition ?\r\n            (<ReactCSSTransitionGroup\r\n                transitionName='c-modal'\r\n                transitionEnterTimeout={200}\r\n                transitionLeaveTimeout={300}>\r\n                {modalContent}\r\n            </ReactCSSTransitionGroup>) : modalContent\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalDialog\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\n\r\nimport FormElements from './index'\r\nimport {wire} from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/multi-input')\r\n\r\n/**\r\n * A React Multi Input Group, can be used on any type of 'value', string, number, object etc\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string|function} base - React class to use for rendering the input\r\n * * native dom elements: eg 'input'|'div' etc\r\n * * react-ui input components: 'ButtonGroup' | CheckboxGroup' | Checkbox' | Combobox' | DatePicker' | DateRange' | Dropdown' | FileInput' | Input' | MultiInput' | RadioGroup' | RangeCalendar' | ToggleButton'\r\n * * custom defined React class\r\n * @param {object} [props] - Props for the above react class, see individual doc for the base class\r\n * @param {string} [className] - Classnames to apply\r\n * @param {string} [groupClassName] - Classnames to apply to individual input groups\r\n * @param {boolean} [expand=false] - Should input items expand to fill the horizontal space as restricted by its parent element #id\r\n * @param {boolean} [inline=false] - Should input items be displayed as inline?\r\n * @param {boolean} [boxed=false] - Should input items be displayed as boxed areas? This will make remove icon/button appear at top right corner of the box\r\n * @param {boolean} [disabled=false] - Are input items disabled?\r\n * @param {boolean} [readOnly=false] - Are input items read only?\r\n * @param {boolean} [persistKeys=false] - Avoid react conflict resolution by persisting keys? Should be used along side file inputs\r\n * @param {*} [defaultItemValue=''] - When adding new item, what is the default value of this item?\r\n * @param {array} [defaultValue] - Default array of input values\r\n * @param {array} [value] - Current array of input values\r\n * @param {object} [valueLink] - Link to update values. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {function} [onChange] - Callback function when any of the input is changed/entered. <br> Required when value prop is supplied\r\n * @param {array} onChange.values - input values\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {array} onChange.eventInfo.before - previous input values\r\n * @param {renderable} [addText] - Text shown in add button, default to showing '+' icon\r\n * @param {renderable} [removeText] - Text shown in remove button, default to showing 'x' icon\r\n *\r\n * @example\r\n\r\nimport {MultiInput, Input} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            phones:[]\r\n        }\r\n    },\r\n    handleChange(phones) {\r\n        this.setState({phones})\r\n    },\r\n    render() {\r\n        let {phones} = this.state;\r\n        return <div>\r\n            <label htmlFor='phones'>Enter phones</label>\r\n            <MultiInput id='phones'\r\n                base={Input}\r\n                props={{validate:{\r\n                    pattern:/^[0-9]{10}$/,\r\n                    t:()=>'Incorrect phone number, should read like 0900000000'\r\n                }}}\r\n                inline={true}\r\n                onChange={this.handleChange}\r\n                value={phones}/>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass MultiInput extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        base: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.func\r\n        ]).isRequired,\r\n        props: PropTypes.object,\r\n        expand: PropTypes.bool,\r\n        inline: PropTypes.bool,\r\n        boxed: PropTypes.bool,\r\n        className: PropTypes.string,\r\n        groupClassName: PropTypes.string,\r\n        disabled: PropTypes.bool,\r\n        readOnly: PropTypes.bool,\r\n        persistKeys: PropTypes.bool,\r\n        defaultItemValue: PropTypes.any,\r\n        value: PropTypes.array,\r\n        // required: React.PropTypes.bool,\r\n        onChange: PropTypes.func,\r\n        addText: PropTypes.node,\r\n        removeText: PropTypes.node\r\n    };\r\n\r\n    static defaultProps = {\r\n        expand: false,\r\n        inline: false,\r\n        boxed: false,\r\n        disabled: false,\r\n        readOnly: false,\r\n        persistKeys: false,\r\n        defaultItemValue: ''/* ,\r\n        required: false*/\r\n    };\r\n\r\n    handleChange = (result) => {\r\n        let {onChange} = this.props\r\n        // onChange(_.compact(result));\r\n        onChange(result)\r\n    };\r\n\r\n    modifyInput = (i, newVal) => {\r\n        let {value} = this.props\r\n\r\n        // support base react input elements such as 'input'\r\n        if (newVal.target) {\r\n            // newVal should be event e\r\n            newVal = newVal.target.value\r\n        }\r\n        this.handleChange(im.set(value, i, newVal))\r\n    };\r\n\r\n    addInput = () => {\r\n        let {value, defaultItemValue} = this.props\r\n\r\n        // if value was empty, a default item would have been added to display, so need to append this item\r\n        if (value.length <= 0) {\r\n            value = [...value, defaultItemValue]\r\n        }\r\n\r\n        if (this.keys) {\r\n            this.keys.push(_.last(this.keys)+1)\r\n        }\r\n\r\n        this.handleChange([...value, defaultItemValue])\r\n    };\r\n\r\n    removeInput = (i) => {\r\n        let {value} = this.props\r\n\r\n        if (this.keys) {\r\n            if (value.length<=1) {\r\n                // if last item in the list, after removal, still need to create new key\r\n                this.keys = [_.last(this.keys)+1]\r\n            }\r\n            else {\r\n                this.keys = im.del(this.keys, i)\r\n            }\r\n        }\r\n\r\n        this.handleChange(im.del(value, i))\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            id, base, props: baseProps, value, defaultItemValue,\r\n            /* required, */expand, inline, boxed, disabled, readOnly, persistKeys,\r\n            className, groupClassName, addText, removeText\r\n        } = this.props\r\n\r\n        const editable = !(disabled || readOnly)\r\n\r\n        const items = (value.length<=0 ? [...value, defaultItemValue] : value)\r\n\r\n        // use this.keys to maintain react keys,\r\n        // so adding will always create new key, instead of possibly reusing existing element with same key\r\n        // mainly used for file input, where react doesn't handle conflict resolution for file inputs\r\n        // When persist keys, things will not work when assigning passing new set of value prop to MultiInput\r\n        if (persistKeys && !this.keys) {\r\n            this.keys = _.map(items, (item, i)=>i)\r\n        }\r\n\r\n        return <span id={id} className={cx('c-multi', className, {expand, inline, boxed})}>\r\n            {\r\n                _.map(items, (item, i) => {\r\n                    const key = this.keys ? this.keys[i] : i\r\n                    return <span key={key} className={cx('group', groupClassName)}>\r\n                        {\r\n                            React.createElement(\r\n                                _.isString(base)&&_.has(FormElements, base) ? FormElements[base] : base,\r\n                                _.extend(baseProps, {\r\n                                    /* required, */\r\n                                    onChange: this.modifyInput.bind(this, i),\r\n                                    value: item,\r\n                                    disabled,\r\n                                    readOnly\r\n                                })\r\n                            )\r\n                        }\r\n                        {editable && (removeText ?\r\n                            <button onClick={this.removeInput.bind(this, i)} className='standard remove'>{removeText}</button> :\r\n                            <i onClick={this.removeInput.bind(this, i)} className='c-link fg fg-close remove' />\r\n                        )}\r\n                        {editable && !boxed && <button className={cx('standard add', addText?'':'fg fg-add', {disabled:i<items.length-1})} onClick={this.addInput}>{addText}</button>}\r\n                    </span>\r\n                })\r\n            }\r\n            {editable && boxed && <button className={cx('standard add', addText?'':'fg fg-add')} onClick={this.addInput}>{addText}</button>}\r\n        </span>\r\n    }\r\n}\r\n\r\nexport default wire(MultiInput, 'value', [])\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/page-nav')\r\n\r\n/**\r\nA React Page Navigation Component, containing following:\r\n * * (possible) prev button\r\n * * thumbnails for pages, up to configurable number of thumbnails (default to 9),\r\n * if total number of pages exceed configured number, will display '...' where appropriate\r\n * * (possible) next button\r\n *\r\n * @constructor\r\n * @param {number} [pages] - Total number of pages\r\n * @param {number} [current=1] - Current (highlighted) page number\r\n * @param {number} [thumbnails=9] - Maximum number of thumbnails to display\r\n * @param {string} [className] - Classname for the container\r\n * @param {function} onChange - Callback function when from/to is changed. <br> Required when value prop is supplied\r\n * @param {number} onChange.page - current selected page\r\n *\r\n * @example\r\n *\r\nimport _ from 'lodash'\r\nimport {PageNav} from 'react-ui'\r\n *\r\nconst PAGE_SIZE = 30\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movies:_(_.range(0,100)).map(i=>`Movie ${i}`), // 100 movies\r\n            currentPage:1\r\n        }\r\n    },\r\n    handleChange(currentPage) {\r\n        this.setState({currentPage})\r\n    },\r\n    render() {\r\n        let {movies, currentPage} = this.state;\r\n        movies = movies.slice((currentPage-1)*PAGE_SIZE, currentPage*PAGE_SIZE)\r\n        return <div>\r\n            <ul>\r\n            {\r\n                movies.map(movie=><li>{movie}</li>)\r\n            }\r\n            </ul>\r\n            <PageNav pages={Math.ceil(movies/PAGE_SIZE)}\r\n                current={currentPage}\r\n                onChange={this.handleChange}/>\r\n        </div>\r\n    }\r\n})\r\n\r\n */\r\nclass PageNav extends React.Component {\r\n    static propTypes = {\r\n        pages: PropTypes.number,\r\n        current: PropTypes.number,\r\n        thumbnails: PropTypes.number,\r\n        className: PropTypes.string,\r\n        onChange: PropTypes.func.isRequired\r\n    };\r\n\r\n    static defaultProps = {\r\n        pages: null,\r\n        current: 1,\r\n        thumbnails: 9\r\n    };\r\n\r\n    gotoPage = (page) => {\r\n        let {onChange} = this.props\r\n        onChange(page)\r\n    };\r\n\r\n    renderThumb = (page, key) => {\r\n        let {current} = this.props\r\n        return <button\r\n            key={key}\r\n            className={cx('thumb', {current:current===page})}\r\n            disabled={!page}\r\n            onClick={this.gotoPage.bind(this, page)}>{page || '...'}</button>\r\n    };\r\n\r\n    render() {\r\n        let {thumbnails, current, pages, className} = this.props\r\n\r\n        if (!pages) {\r\n            return null\r\n        }\r\n\r\n        // let endThumbs = Math.floor(thumbnails/4);\r\n        let endThumbs = 2 // display 2 at both ends\r\n        let midThumbs = thumbnails - (endThumbs*2)-2\r\n        let list = []\r\n\r\n        let midStart = Math.max(current-Math.floor(midThumbs/2), endThumbs+1)\r\n        let midEnd = midStart+midThumbs-1\r\n        let lastSkipped = false\r\n\r\n        if (midEnd >= pages-endThumbs) {\r\n            midStart = Math.max(endThumbs+1, midStart-(midEnd-(pages-endThumbs)))\r\n            midEnd = pages-endThumbs\r\n            midStart--\r\n        }\r\n\r\n        if (midStart === endThumbs+1) {\r\n            midEnd++\r\n        }\r\n\r\n        if (midStart === endThumbs+2) {\r\n            midStart--\r\n        }\r\n        if (midEnd === pages-endThumbs-1) {\r\n            midEnd++\r\n        }\r\n\r\n        _.forEach(_.range(1, pages+1), i => {\r\n            if (i <= endThumbs || i>(pages-endThumbs) || (i>=midStart && i<=midEnd)) {\r\n                list.push(this.renderThumb(i, i))\r\n                lastSkipped = false\r\n            }\r\n            else {\r\n                if (!lastSkipped) {\r\n                    list.push(this.renderThumb(null, i))\r\n                    lastSkipped = true\r\n                }\r\n            }\r\n        })\r\n\r\n        return <div className={cx('c-page-nav', className)}>\r\n            <button className='thumb fg fg-arrow-left' disabled={current===1} onClick={this.gotoPage.bind(this, current-1)} />\r\n            {list}\r\n            <button className='thumb fg fg-arrow-right' disabled={current===pages} onClick={this.gotoPage.bind(this, current+1)} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default PageNav","/**\r\n  * @module popover\r\n  * @description A module to help with opening/closing popovers\r\n  *\r\n  * Note. There can be multiple popovers appearing on the screen at the same time.<br>\r\n  * To achieve this, please use openId(..) instead of open()\r\n  */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport cx from 'classnames'\r\nimport Draggable from 'react-draggable'\r\nimport _ from 'lodash'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/popover')\r\n\r\nlet handles = {}\r\n\r\nconst GLOBAL_POPOVER_ID = 'g-popover'\r\n\r\nclass Popover extends React.Component {\r\n    static propTypes = {\r\n    };\r\n\r\n    state = {\r\n        open: false,\r\n        position: {},\r\n        display: null,\r\n        cfg: {}\r\n    };\r\n\r\n    setDragBounds = () => {\r\n        const {cfg:{boundBy}} = this.state\r\n        const node = this.node\r\n\r\n        const {left:boundLeft, right:boundRight, top:boundTop, bottom:boundBottom} = boundBy.getBoundingClientRect()\r\n        const {left:popLeft, right:popRight, top:popTop, bottom:popBottom} = node.getBoundingClientRect()\r\n\r\n        const _dragBounds = {\r\n            left: boundLeft-popLeft,\r\n            right: boundRight-popRight,\r\n            top: boundTop-popTop,\r\n            bottom: boundBottom-popBottom\r\n        }\r\n        this.setState({_dragBounds})\r\n    };\r\n\r\n    snapToBounds = () => {\r\n        const {position, cfg:{/*pointy, */draggable, boundBy}} = this.state\r\n        const node = this.node\r\n        const {x, y, left, right, top, bottom} = position\r\n        const {width:popWidth, height:popHeight} = node.getBoundingClientRect()\r\n        const {left:boundLeft, right:boundRight, top:boundTop, width:boundWidth, bottom:boundBottom} = boundBy.getBoundingClientRect()\r\n\r\n        log.debug('snapToBounds',\r\n            _.pick(node.getBoundingClientRect(), ['left', 'right', 'top', 'bottom', 'width', 'height']),\r\n            _.pick(boundBy.getBoundingClientRect(), ['left', 'right', 'top', 'bottom', 'width', 'height']),\r\n            position)\r\n\r\n        let _actualPosition = {}\r\n        const defaultX = (left!=null && right!=null ? (left+right)/2 : x)\r\n        _actualPosition.left = defaultX\r\n        if (defaultX+popWidth > boundRight) {\r\n            if (popWidth >= boundWidth) {\r\n                _actualPosition.left = boundLeft\r\n                _actualPosition.maxWidth = boundWidth\r\n            }\r\n            else {\r\n                _actualPosition.left = boundRight-popWidth\r\n            }\r\n        }\r\n\r\n        const aroundTop = (top==null ? y : top)\r\n        const aroundBottom = (bottom==null ? y: bottom)\r\n        _actualPosition.top = aroundBottom\r\n        if (aroundBottom+popHeight > boundBottom) {\r\n            // pick above or below, whichever having more vertical space\r\n            const aboveSpace = aroundTop - boundTop\r\n            const belowSpace = boundBottom-aroundBottom\r\n            if (aboveSpace > belowSpace) {\r\n                _actualPosition.top = aroundTop-popHeight\r\n                _actualPosition.maxHeight = Math.min(aboveSpace, popHeight)\r\n            }\r\n            else {\r\n                _actualPosition.maxHeight = belowSpace\r\n            }\r\n        }\r\n\r\n/*        if (pointy) {\r\n            _actualPosition.top += 6\r\n        }*/\r\n        this.setState({_actualPosition}, ()=>{\r\n            draggable && this.setDragBounds()\r\n        })\r\n    };\r\n\r\n    close = () => {\r\n        if (this.isOpen()) {\r\n            this.setState({open:false})\r\n        }\r\n    };\r\n\r\n    isOpen = () => {\r\n        return this.state.open\r\n    };\r\n\r\n    open = (position, display, cfg={}) => {\r\n        if (this.isOpen() && !cfg.updateOnly) {\r\n            // close and re-open, so previous styles (including those calculated by browser)\r\n            // are properly erased\r\n            this.setState({open:false}, ()=>{\r\n                this.open(position, display, cfg)\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                _actualPosition: null,\r\n                _dragBounds: null,\r\n                position,\r\n                display,\r\n                cfg,\r\n                open: true\r\n            }, ()=>{\r\n                // snap to bounds after initial display\r\n                // so it can retrieve dom width/height\r\n                this.snapToBounds()\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            _actualPosition, display, _dragBounds,\r\n            cfg: {/*pointy,*/ draggable, style, className},\r\n            open\r\n        } = this.state\r\n\r\n        if (!open) {\r\n            return null\r\n        }\r\n        else {\r\n            const popoverContent = <div\r\n                ref={ref=>{ this.node=ref }}\r\n                className={cx('c-popover pure-form', {/*pointy, */handle:draggable}, className)}\r\n                style={{...style, ..._actualPosition}}>\r\n                {display}\r\n            </div>\r\n\r\n            return draggable ?\r\n                <Draggable handle='.handle' bounds={_dragBounds}>\r\n                    {popoverContent}\r\n                </Draggable> :\r\n                popoverContent\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n\r\n    /**\r\n     * Open global popover<br>\r\n     * Uses openId, with id='g-popover'. See [openId()]{@link module:popover.openId}\r\n     *\r\n     * @param {object} position - open popover at this position (or around a box to avoid overlaying on the box)\r\n     * @param {number} position.x - x position to open popover at\r\n     * @param {number} position.y - y position to open popover at\r\n     * @param {number} position.left - left bound to open popover around\r\n     * @param {number} position.right - right bound to open popover around\r\n     * @param {number} position.top - top bound to open popover around\r\n     * @param {number} position.bottom - bottom bound to open popover around\r\n     * @param {renderable} display - What to display in popover?\r\n     * @param {object} cfg - display config\r\n     * @param {boolean} [cfg.draggable=false] - Allow to drag popover?\r\n     * @param {HTMLElement} [cfg.boundBy=document.body] - Bound the popover to specific region, this will force reposition of the popover\r\n     * @param {boolean} [cfg.pointy=false] - disabled for now\r\n     * @param {object} [cfg.style={}] - style to deploy to the popover\r\n     * @param {string} [cfg.className=''] - className for the popover\r\n     *\r\n     */\r\n    open(pos, display, cfg) {\r\n        this.openId(GLOBAL_POPOVER_ID, pos, display, cfg)\r\n    },\r\n\r\n    /**\r\n     * Open popover with a given id, id will be the handler key\r\n     * @param {string} id - popover handler id\r\n     * @param {object} position - open popover at this position (or around a box to avoid overlaying on the box)\r\n     * @param {number} position.x - x position to open popover at\r\n     * @param {number} position.y - y position to open popover at\r\n     * @param {number} position.left - left bound to open popover around\r\n     * @param {number} position.right - right bound to open popover around\r\n     * @param {number} position.top - top bound to open popover around\r\n     * @param {number} position.bottom - bottom bound to open popover around\r\n     * @param {renderable} display - What to display in popover?\r\n     * @param {object} cfg - display config\r\n     * @param {boolean} [cfg.draggable=false] - Allow to drag popover?\r\n     * @param {HTMLElement} [cfg.boundBy=document.body] - Bound the popover to specific region, this will force reposition of the popover\r\n     * @param {boolean} [cfg.pointy=false] - disabled for now\r\n     * @param {object} [cfg.style={}] - style to deploy to the popover\r\n     * @param {string} [cfg.className=''] - className for the popover\r\n     *\r\n     * @example\r\n     *\r\nimport {Popover} from 'react-ui'\r\n\r\nPopover.openId(\r\n    'my-popover-id',\r\n    {x:15,y:15},\r\n    <img src='...' style={{maxWidth:100,maxHeight:100}}/>,\r\n    {boundBy:document.body, draggable:false}\r\n)\r\n\r\n     */\r\n    openId(id, pos, display, cfg) {\r\n        if (!id) {\r\n            log.error('openId:missing id')\r\n            return\r\n        }\r\n\r\n        cfg = _.defaults(cfg||{}, {\r\n            draggable: false,\r\n            boundBy: document.body,\r\n            pointy: false,\r\n            style: {},\r\n            className: ''\r\n        })\r\n\r\n        let handle = handles[id]\r\n\r\n        if (!handle) {\r\n            let node = document.createElement('DIV')\r\n            node.id = id\r\n            document.body.appendChild(node)\r\n            handle = handles[id] = ReactDOM.render(\r\n                <Popover />,\r\n                document.getElementById(id)\r\n            )\r\n        }\r\n        let position = pos\r\n\r\n        if (pos && pos.target) {\r\n            let rect = pos.target.getBoundingClientRect()\r\n            position = _.pick(rect, ['x', 'y', 'left', 'right', 'top', 'bottom'])\r\n        }\r\n\r\n        handle.open(position, display, cfg)\r\n    },\r\n\r\n    /**\r\n     * Close popover\r\n     *\r\n     * @example\r\nPopover.close();\r\n     */\r\n    close() {\r\n        this.closeId(GLOBAL_POPOVER_ID)\r\n    },\r\n\r\n    /**\r\n     * Close popover for given id\r\n     * @param {string} id - close popover for this id\r\n     *\r\n     * @example\r\nPopover.closeId('my-popover-id');\r\n     */\r\n    closeId(id) {\r\n        handles[id] && handles[id].close()\r\n    }\r\n}","/**\r\n  * @module popup-dialog\r\n  * @description A module to help with opening/closing **global** popup dialog<br>\r\n  * This is to replace traditional window.alert, window.confirm, window.prompt\r\n  */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport _ from 'lodash'\r\n\r\nimport {retrieveFormData} from '../utils/input-helper'\r\nimport ModalDialog from './modal-dialog'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/popup-dialog')\r\n\r\nlet handles = {}\r\n\r\nconst TYPES = {ALERT:'1', CONFIRM:'2', PROMPT:'3'}\r\n\r\nconst GLOBAL_POPUP_ID = 'g-popup-container'\r\n\r\nclass PopupDialog extends React.Component {\r\n    static propTypes = {\r\n    };\r\n\r\n    state = {\r\n        open: false,\r\n        error: null\r\n    };\r\n\r\n    open = (type, title, display, id, style, cancelText, confirmText, act) => {\r\n        this.setState({\r\n            type: TYPES[type.toUpperCase()],\r\n            title,\r\n            display,\r\n            id,\r\n            style,\r\n            cancelText,\r\n            confirmText,\r\n            act,\r\n            open: true,\r\n            error: null\r\n        })\r\n    };\r\n\r\n    handleConfirm = () => {\r\n        let {act} = this.state\r\n        let result = retrieveFormData(ReactDOM.findDOMNode(this))\r\n\r\n        let p = act && act(true, result)\r\n        if (p && p.then) {\r\n            // is promise\r\n            p\r\n                .then(() => {\r\n                    this.handleError()\r\n                })\r\n                .catch((err) => {\r\n                    this.handleError(err.message)\r\n                })\r\n        }\r\n        else {\r\n            this.handleError(p)\r\n        }\r\n    };\r\n\r\n    handleError = (err) => {\r\n        if (err) {\r\n            this.setState({error:err})\r\n        }\r\n        else {\r\n            this.close()\r\n        }\r\n    };\r\n\r\n    close = () => {\r\n        this.setState({open:false, error:null})\r\n    };\r\n\r\n    handleCancel = () => {\r\n        let {act} = this.state\r\n\r\n        act(false)\r\n        this.close()\r\n    };\r\n\r\n    render() {\r\n        let {type, title, display, id, style, cancelText, confirmText, open, error} = this.state\r\n\r\n        if (!open) {\r\n            return null\r\n        }\r\n        switch (type) {\r\n            case TYPES.ALERT:\r\n                return <ModalDialog\r\n                    title={title}\r\n                    id={id}\r\n                    defaultAction='confirm'\r\n                    closeAction='confirm'\r\n                    contentClassName='pure-form'\r\n                    actions={{\r\n                        confirm: {\r\n                            handler: this.handleConfirm,\r\n                            text: confirmText\r\n                        }\r\n                    }}\r\n                    global={true}\r\n                    draggable={true}\r\n                    style={style}>\r\n                    {display}\r\n                </ModalDialog>\r\n            case TYPES.CONFIRM:\r\n            case TYPES.PROMPT:\r\n                return <ModalDialog\r\n                    title={title}\r\n                    id={id}\r\n                    info={error}\r\n                    infoClassName='c-error'\r\n                    defaultAction='cancel'\r\n                    closeAction='cancel'\r\n                    contentClassName='pure-form'\r\n                    actions={{\r\n                        cancel: {handler:this.handleCancel, className:'standard', text:cancelText},\r\n                        confirm: {\r\n                            handler: this.handleConfirm,\r\n                            text: confirmText\r\n                        }\r\n                    }}\r\n                    global={true}\r\n                    draggable={true}\r\n                    style={style}>\r\n                    {display}\r\n                </ModalDialog>\r\n\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n\r\nfunction openId(type, id, args) {\r\n    if (!id) {\r\n        log.error('openId:missing id')\r\n        return\r\n    }\r\n\r\n    let handle = handles[id]\r\n\r\n    if (!handle) {\r\n        let node = document.createElement('DIV')\r\n        node.id = id\r\n        document.body.appendChild(node)\r\n        handle = handles[id] = ReactDOM.render(\r\n            <PopupDialog />,\r\n            document.getElementById(id)\r\n        )\r\n    }\r\n    if (!_.isObject(args)) {\r\n        args = {display:args}\r\n    }\r\n\r\n    handle.open(\r\n        type,\r\n        args.title,\r\n        args.display,\r\n        args.id,\r\n        args.style,\r\n        args.cancelText || 'Cancel',\r\n        args.confirmText || 'Confirm',\r\n        args.act)\r\n}\r\n\r\nfunction openIdIf(type, id, condition, args) {\r\n    if (condition) {\r\n        openId(type, id, args)\r\n    }\r\n    else {\r\n        args.act(true)\r\n    }\r\n}\r\n\r\nfunction closeId(id) {\r\n    handles[id] && handles[id].close()\r\n}\r\n\r\n/**\r\n * Config for the popup dialog\r\n * @typedef {object} PopupConfig\r\n * @property {renderable} [title] - Title of the dialog\r\n * @property {renderable} display - What to display in the dialog\r\n * @property {string} [id] - Container dom #id\r\n * @property {object} [style] - Style to apply to the container\r\n * @property {string} [cancelText='Cancel'] - Cancel button text, only used with prompt & confirm dialogs\r\n * @property {string} [confirmText='Confirm'] - Confirm button text\r\n * @property {function} act - Action to perform when submit buttn clicked.<br>Can return a promise or error text\r\n * @property {boolean} act.confirmed - did the user say 'ok'?\r\n * @property {object} act.data - Input data embedded inside display, only used with prompt & confirm dialogs\r\n */\r\n\r\nexport default {\r\n    /**\r\n     * Open alert box\r\n     * @param {PopupConfig | renderable} cfg - Popup config, or simple renderable string\r\n     *\r\n     * @example\r\n     *\r\nimport {PopupDialog} from 'react-ui'\r\n\r\nPopupDialog.alertId('g-custom-alert-container', 'Test')\r\nPopupDialog.alert('Test')\r\nPopupDialog.alert({display:'Test', act:(confirmed)=>{\r\n    console.log('User is okay? ',confirmed)\r\n}})\r\n     */\r\n    alert: openId.bind(null, 'alert', GLOBAL_POPUP_ID),\r\n    alertId: openId.bind(null, 'alert'),\r\n\r\n    /**\r\n     * Open confirm box\r\n     * @param {PopupConfig | renderable} cfg - Popup config, or simple renderable string\r\n     *\r\n     * @example\r\n     *\r\nimport {PopupDialog} from 'react-ui'\r\n\r\nPopupDialog.confirm({\r\n    display:'Fetch more data?',\r\n    cancelText: 'No!',\r\n    confirmText: 'Go Ahead',\r\n    act:(confirmed)=>{\r\n        if (confirmed) {\r\n            $.get('...') // get more data\r\n        }\r\n    }\r\n})\r\n     */\r\n    confirm: openId.bind(null, 'confirm', GLOBAL_POPUP_ID),\r\n    confirmId: openId.bind(null, 'confirm'),\r\n\r\n    /**\r\n     * Open confirm box if condition is satisfied.<br>\r\n     * If condition is not satisfied (ie no need to confirm), act will be fired with confirmed=true\r\n     * @param {boolean} condition - Should confirm first before proceed?\r\n     * @param {PopupConfig | renderable} cfg - Popup config, or simple renderable string\r\n     *\r\n     * @example\r\n     *\r\nimport Promise from 'bluebird'\r\nimport {PopupDialog} from 'react-ui'\r\n\r\nlet userDidNotEnterAddress = !user.address;\r\nPopupDialog.confirmIf(userDidNotEnterAddress, {\r\n    display:'You have not entered address, are you sure you want to proceed?',\r\n    act:(confirmed)=>{\r\n        if (confirmed) {\r\n            // note if user has entered address, then it will reach here without popup\r\n            return Promise.resolve($.post('/api/save/user',{data:user})) // post user information\r\n            // if post returned with error (eg 404), error message will be displayed\r\n        }\r\n    }\r\n})\r\n     */\r\n    confirmIf: openIdIf.bind(null, 'confirm', GLOBAL_POPUP_ID),\r\n    confirmIdIf: openIdIf.bind(null, 'confirm'),\r\n\r\n    /**\r\n     * Open prompt box\r\n     * @param {PopupConfig | renderable} cfg - Popup config, or simple renderable string\r\n     *\r\n     * @example\r\n     *\r\nimport Promise from 'bluebird'\r\nimport {PopupDialog} from 'react-ui'\r\n\r\nPopupDialog.prompt({\r\n    display: <div>\r\n        <label htmlFor='name'>Name</label><input id='name'/>\r\n        <label htmlFor='phone'>Phone</label><input id='phone'/>\r\n        <label htmlFor='address'>Address</label><input id='address'/>\r\n    </div>,\r\n    act:(confirmed, data)=>{\r\n        if (confirmed) {\r\n            console.log(data) // {name:'abc', phone:'012345678', address:'Taiwan'}\r\n            return Promise.resolve($.post('/api/save/user',data)) // post user information\r\n        }\r\n    }\r\n})\r\n     */\r\n    prompt: openId.bind(null, 'prompt', GLOBAL_POPUP_ID),\r\n    promptId: openId.bind(null, 'prompt'),\r\n\r\n    /**\r\n     * Close popup dialog\r\n     *\r\n     * @example\r\n     *\r\nimport {PopupDialog} from 'react-ui'\r\n\r\nPopupDialog.close()\r\nPopupDialog.closeId('g-g-custom-alert-container')\r\n     */\r\n    close: closeId.bind(null, GLOBAL_POPUP_ID),\r\n    closeId\r\n}","/**\r\n  * @module progress\r\n  * @description A module to help with blocking user access by displaying a shield and text.<br>\r\n  * It supports various styles of display.\r\n  *\r\n  * * Progress.startXxxxx starts up blocking display\r\n  * * Progress.setXxxxx updates blocking display\r\n  * * Progress.done closes blocking display\r\n  */\r\n\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport ModalDialog from './modal-dialog'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/progress')\r\n\r\nlet globalProgress = null\r\n\r\nconst INITIAL_STATE = {\r\n    display: null,\r\n    loaded: null,\r\n    total: null,\r\n    className: '',\r\n    style: {}\r\n}\r\n\r\nclass Progress extends React.Component {\r\n    static propTypes = {\r\n    };\r\n\r\n    state = _.clone(INITIAL_STATE);\r\n\r\n    setDisplay = (display) => {\r\n        this.setState({display})\r\n    };\r\n\r\n    setProgress = (loaded, total) => {\r\n        this.setState({loaded, total})\r\n    };\r\n\r\n    open = (args) => {\r\n        this.setState({global:true, opacity:0.5, ...args})\r\n    };\r\n\r\n    done = () => {\r\n        this.setState(_.clone(INITIAL_STATE))\r\n    };\r\n\r\n    render() {\r\n        let {display, loaded, total, opacity, className, style, global} = this.state\r\n\r\n        return <ModalDialog\r\n            id='g-progress'\r\n            show={!!display}\r\n            opacity={opacity}\r\n            global={global}\r\n            useTransition={true}\r\n            className={className} style={style}>\r\n            {display}\r\n            {\r\n                total && <progress value={loaded} max={total} />\r\n            }\r\n            {\r\n                total && <span>{Math.floor(loaded/total*100)}%</span>\r\n            }\r\n        </ModalDialog>\r\n    }\r\n}\r\n\r\nclass Shield extends React.Component {\r\n    static propTypes = {\r\n    };\r\n\r\n    state = {\r\n        show: false\r\n    };\r\n\r\n    open = (args) => {\r\n        this.setState({...args, show:true})\r\n    };\r\n\r\n    done = () => {\r\n        this.setState({show:false})\r\n    };\r\n\r\n    render() {\r\n        let {show, opacity} = this.state\r\n        return <section id='g-progress' className={cx('c-modal', {show})}>\r\n            <div id='overlay' style={{opacity}} />\r\n        </section>\r\n    }\r\n}\r\n\r\nfunction showProgress(args, shieldOnly) {\r\n    if (!globalProgress) {\r\n        let node = document.createElement('DIV')\r\n        node.id = 'g-progress-container'\r\n        document.body.appendChild(node)\r\n        globalProgress = ReactDom.render(\r\n            shieldOnly ? <Shield /> : <Progress />,\r\n            document.getElementById('g-progress-container')\r\n        )\r\n    }\r\n    globalProgress.open(args)\r\n}\r\n\r\nexport default {\r\n    /**\r\n     * Show blocking display\r\n     * @param {object} cfg - Display config\r\n     * @param {number} [cfg.opacity=0.5] -\r\n     * @param {*} [cfg.className] -\r\n     * @param {boolean} [cfg.global=true] -\r\n     * @param {renderable} cfg.display -\r\n     * @param {object} [cfg.style] -\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.start({\r\n    className:['my-class-name','my-other-class-name'],\r\n    display:<div>In progress...</div>\r\n})\r\n\r\n     */\r\n    start(args) {\r\n        showProgress(args)\r\n    },\r\n\r\n    /**\r\n     * Show blocking progress display\r\n     * @param {renderable} display -\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.startProgress(<div>Start upload...</div>)\r\n\r\n     */\r\n    startProgress(display) {\r\n        showProgress({\r\n            opacity: 0.5,\r\n            className: 'progress-bar',\r\n            display\r\n        })\r\n    },\r\n\r\n    /**\r\n     * Show blocking spinner\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.startSpin()\r\n\r\n     */\r\n    startSpin() {\r\n        showProgress({\r\n            opacity: 0.2,\r\n            className: 'spin',\r\n            display: <i style={{fontSize:'1.8em', margin:'10px'}} className='fg fg-loading-2 fg-spin' />\r\n        })\r\n    },\r\n\r\n    /**\r\n     * Show blocking transparent shield\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.startShield()\r\n\r\n     */\r\n    startShield() {\r\n        showProgress({opacity:0}, true)\r\n    },\r\n\r\n    /**\r\n     * Update display text\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.set(<div>5 more minutes...</div>)\r\n\r\n     */\r\n    set(display) {\r\n        globalProgress.setDisplay(display)\r\n    },\r\n\r\n    /**\r\n     * Update percentage information\r\n     * @param {number} complete - complete count\r\n     * @param {number} total - total count\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.setProgress(1,40) // will display 2.5%\r\n\r\n     */\r\n    setProgress(loaded, total) {\r\n        globalProgress.setProgress(loaded, total)\r\n    },\r\n\r\n    /**\r\n     * Turn off blocking display\r\n     * @param {number} [delay=0] - turn off after specified time (in milliseconds)\r\n     *\r\n     * @example\r\n     *\r\nimport {Progress} from 'react-ui'\r\n\r\nProgress.done()\r\nProgress.done(3000)\r\n\r\n     */\r\n    done(delay=0) {\r\n        setTimeout(()=>{\r\n            globalProgress.done()\r\n        }, delay)\r\n    }\r\n}","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport { LIST_PROP, SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport {wireValue} from '../hoc/prop-wire'\r\nimport normalizeList from '../hoc/list-normalizer'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/radio-group')\r\n\r\n\r\n/**\r\n * A React Radio Group\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {Array.<object>} list - List of options\r\n * @param {string | number} list.value - item value\r\n * @param {string} list.text - item display text\r\n * @param {renderable} [list.children] - things to render after the label\r\n * @param {string} [className] - Classname for the container\r\n * @param {string|number} [defaultValue] - Default selected value\r\n * @param {string|number} [value] - Current selected value\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {boolean} [disabled=false] - Is selection disabled?\r\n * @param {function} [onChange] - Callback function when value is selected. <br> Required when value prop is supplied\r\n * @param {string|number} onChange.value - selected value\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string|number} onChange.eventInfo.before - previously selected value\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {RadioGroup} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movie:'oz'\r\n        }\r\n    },\r\n    handleChange(movie) {\r\n        this.setState({movie})\r\n    },\r\n    render() {\r\n        let {movie} = this.state;\r\n        return <div>\r\n            <label>Select a movie</label>\r\n            <RadioGroup id='movie'\r\n                list={[\r\n                    {value:'dory',text:'dory - Finding Dory'},\r\n                    {value:'oz',text:'oz - Wizard of Oz'},\r\n                    {value:'kane',text:'kane - Citizen Kane',children:<input defaultValue='abc'/>}\r\n                ]}\r\n                onChange={this.handleChange}\r\n                value={movie}/>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass RadioGroup extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        list: LIST_PROP,\r\n        className: PropTypes.string,\r\n        value: SIMPLE_VALUE_PROP,\r\n        disabled: PropTypes.bool,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false\r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        let {onChange} = this.props\r\n        onChange(evt.target.value)\r\n    };\r\n\r\n    render() {\r\n        let {id, list, value, disabled, className} = this.props\r\n\r\n        let onChange = this.handleChange\r\n\r\n        return <div id={id} className={cx('c-radio-group', className)}>\r\n            {\r\n                _.map(list, ({value:itemValue, text:itemText, children}) => {\r\n                    return <div key={itemValue} className='list-item'>\r\n                        <input\r\n                            id={id+'-'+itemValue}\r\n                            type='radio'\r\n                            onChange={disabled ? null : onChange} // workaround for IE: double click on disabled will still trigger onChange\r\n                            value={itemValue}\r\n                            checked={value+''===itemValue+''}\r\n                            disabled={disabled} />\r\n                        <label htmlFor={id+'-'+itemValue} key={itemValue} className={itemValue}>{itemText}</label>\r\n                        {children}\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default wireValue(normalizeList(RadioGroup))","// import PropTypes from 'prop-types';\r\n// import React from 'react'\r\n// import createReactClass from 'create-react-class';\r\n// import _ from 'lodash'\r\n// import $ from 'jquery'\r\n// import cx from 'classnames'\r\n// import Moment from 'moment'\r\n// import flatpickr from 'flatpickr'\r\n// import flatpickrStyles from 'flatpickr/dist/flatpickr.min.css' // eslint-disable-line no-unused-vars\r\n\r\n// // Add more locales here\r\n// import {Mandarin as zh} from 'flatpickr/dist/l10n/zh'\r\n\r\n// import Popover from './popover'\r\n// import {wire} from '../hoc/prop-wire'\r\n// import { SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\n// import ih from '../utils/input-helper'\r\n// import {flatpickrToMomentToken} from '../utils/date'\r\n\r\n// let log = require('loglevel').getLogger('react-ui/components/date-range')\r\n\r\n// const DATE_PROP_TYPE = PropTypes.shape({\r\n//     from: SIMPLE_VALUE_PROP,\r\n//     to: SIMPLE_VALUE_PROP\r\n// })\r\n\r\n// const DATE_TIME_SUFFIX = {\r\n//     daySuffix: /(st)|(nd)|(rd)|(th)/g,\r\n//     timeSuffix: /(AM)|(PM)/ig\r\n// }\r\n\r\n// const LABELS = {\r\n//     from: 'From',\r\n//     to: 'To',\r\n//     shortcut: 'Shortcut for Last Period',\r\n//     done: 'Done'\r\n// }\r\n\r\n// /**\r\n//  * A React DateRange Component, containing a 'from' date input and a 'to' date input<br>\r\n//  * Uses [flatpickr]{@link https://chmln.github.io/flatpickr/#options}\r\n//  *\r\n//  * @constructor\r\n//  * @param {string} [id] - Container element #id\r\n//  * @param {string} [className] - Classname for the container\r\n//  * @param {object} [defaultValue] - Default selected range\r\n//  * @param {string} defaultValue.from - Default selected from\r\n//  * @param {string} defaultValue.to - Default selected to\r\n//  * @param {object} [value] - Current selected range\r\n//  * @param {string} value.from - Current selected from\r\n//  * @param {string} value.to - Current selected to\r\n//  * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n//  * @param {*} valueLink.value - value to update\r\n//  * @param {function} valueLink.requestChange - function to request value change\r\n//  * @param {boolean} [allowKeyIn=true] - Allow user key in to the from/to input?\r\n//  * @param {boolean} [disabled=false] - Is this field disabled?\r\n//  * @param {boolean} [readOnly=false] - Is this field readonly?\r\n//  * @param {boolean} [required=false] - Is this field required?\r\n//  * @param {function} [onChange] - Callback function when from/to is changed. <br> Required when value prop is supplied\r\n//  * @param {object} onChange.value - current value\r\n//  * @param {string} onChange.value.from - current from\r\n//  * @param {string} onChange.value.to - current to\r\n//  * @param {object} onChange.eventInfo - event related info\r\n//  * @param {object} onChange.eventInfo.before - previously enetered value\r\n//  * @param {string} [dateFormat='Y-m-d'] - Date format. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n//  * @param {string} [timeFormat='H:i'] - Time format. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n//  * @param {boolean} [enableTime=false] - Enable selection and display of time\r\n//  * @param {boolean} [enableAMPM=false] - Enable AM/PM option on calendar\r\n//  * @param {boolean | Array.<object>} [shortcut=false] - Shortcut for quickly select last periods. When specified as 'true', will show shortcuts for last 1 day/week/month/year\r\n//  * @param {number} shortcut.value - Period value\r\n//  * @param {string} shortcut.unit - Period value's unit. Possible values include 'minutes', 'hours', 'weeks', 'months', 'quarters', 'years'\r\n//  * @param {string} shortcut.text - Text of shortcut\r\n//  * @param {object} [labels] - Texts of \"From\", \"To\", \"Shortcut\" and \"Done\" labels\r\n//  * @param {string} [labels.from=\"From\"] - Text of \"From\" label\r\n//  * @param {string} [labels.to=\"To\"] - Text of \"To\" label\r\n//  * @param {string} [labels.shortcut=\"Shortcut for Last Period\"] - Text of \"Short\" label\r\n//  * @param {string} [labels.done=\"Done\"] - Text of \"Done\" button\r\n//  * @param {string} [locale] - Datepicker locale. Values can be 'en', 'zh', etc. See Flatpickr {@link https://chmln.github.io/flatpickr/#options}\r\n//  * @param {fuction} [t] - Transform/translate error into readable message.<br>\r\n//  * @param {object} t.params - Parameters relevant to the error code\r\n//  * @param {string} t.params.field - offending field id\r\n//  * @param {string} t.params.value - offending field value\r\n//  * @param {string} t.params.pattern - pattern the value was supposed to follow\r\n//  *\r\n//  * @example\r\n// // controlled\r\n\r\n// import {RangeCalendar} from 'react-ui'\r\n\r\n// React.createClass({\r\n//     getInitialState() {\r\n//         return {\r\n//             date: {\r\n//                 from: '2012-04-26',\r\n//                 to: '2012-10-26'\r\n//             },\r\n//             datetime: {\r\n//                 from: '2012-10-26 12:00',\r\n//                 to: '2012-10-26 17:00'\r\n//             }\r\n//         }\r\n//     },\r\n//     handleChange(field, value) {\r\n//         this.setState({[field]:value})\r\n//     },\r\n//     render() {\r\n//         let {date, datetime} = this.state\r\n//         return <div className='c-form'>\r\n//             <div>\r\n//                 <label htmlFor='date'>Select Date Range</label>\r\n//                 <RangeCalendar\r\n//                     id='date'\r\n//                     onChange={this.handleChange.bind(this, 'date')}\r\n//                     value={date}\r\n//                     shortcut\r\n//                     t={(code, params) => {\r\n//                         if (code === 'missing') { return 'Please input date' }\r\n//                         else {\r\n//                             return `Invalid date format. Should be ${params.pattern}`\r\n//                         }\r\n//                     }} />\r\n//             </div>\r\n//             <div>\r\n//                 <label htmlFor='datetime'>Select Date Time Range</label>\r\n//                 <RangeCalendar\r\n//                     id='datetime'\r\n//                     onChange={this.handleChange.bind(this, 'datetime')}\r\n//                     enableTime={true}\r\n//                     value={datetime}\r\n//                     shortcut={\r\n//                         [\r\n//                             {value:1, text:'Hour', unit:'hours'},\r\n//                             {value:1, text:'Day', unit:'days'},\r\n//                             {value:1, text:'Month', unit:'months'},\r\n//                             {value:1, text:'Quarter', unit:'quarters'},\r\n//                             {value:1, text:'Year', unit:'years'},\r\n//                         ]\r\n//                     }\r\n//                     t={(code, params) => {\r\n//                         if (code === 'missing') { return 'Please input date' }\r\n//                         else {\r\n//                             return `Invalid date format. Should be ${params.pattern}`\r\n//                         }\r\n//                     }} />\r\n//             </div>\r\n//         </div>\r\n//     }\r\n// })\r\n// */\r\n\r\n// const RangeCalendar = createReactClass({\r\n//     displayName: 'RangeCalendar',\r\n\r\n//     propTypes: {\r\n//         id: PropTypes.string,\r\n//         className: PropTypes.string,\r\n//         value: DATE_PROP_TYPE,\r\n//         allowKeyIn: PropTypes.bool,\r\n//         disabled: PropTypes.bool,\r\n//         readOnly: PropTypes.bool,\r\n//         required: PropTypes.bool,\r\n//         onChange: PropTypes.func,\r\n//         dateFormat: PropTypes.string,\r\n//         timeFormat: PropTypes.string,\r\n//         enableTime: PropTypes.bool,\r\n//         enableAMPM: PropTypes.bool,\r\n//         shortcut: PropTypes.oneOfType([\r\n//             PropTypes.bool,\r\n//             PropTypes.arrayOf(PropTypes.shape({\r\n//                 value: PropTypes.number,\r\n//                 unit: PropTypes.string,\r\n//                 text: PropTypes.string\r\n//             }))\r\n//         ]),\r\n//         locale: PropTypes.string,\r\n//         labels: PropTypes.shape({\r\n//             from: PropTypes.string,\r\n//             to: PropTypes.string,\r\n//             shortcut: PropTypes.string,\r\n//             done: PropTypes.string\r\n//         }),\r\n//         t: PropTypes.func\r\n//     },\r\n\r\n//     getDefaultProps() {\r\n//         return {\r\n//             dateFormat: 'Y-m-d',\r\n//             timeFormat: 'H:i',\r\n//             disabled: false,\r\n//             readOnly: false,\r\n//             required: false,\r\n//             allowKeyIn: true,\r\n//             enableTime: false,\r\n//             enableAMPM: false,\r\n//             shortcut: false,\r\n//             locale: 'en',\r\n//             labels: LABELS\r\n//         }\r\n//     },\r\n\r\n//     getInitialState() {\r\n//         const {value} = this.props\r\n\r\n//         return {\r\n//             prevFrom: value.from,\r\n//             prevTo: value.to,\r\n//             show: false\r\n//         }\r\n//     },\r\n\r\n//     componentDidMount() {\r\n//         let {dateFormat, timeFormat, enableTime, enableAMPM, allowKeyIn:allowInput, locale} = this.props\r\n\r\n//         this.isMounted = true\r\n\r\n//         let loc = null\r\n//         switch (locale) {\r\n//             case 'zh': loc = zh; break\r\n//             default: loc = null\r\n//         }\r\n\r\n//         this.FORMAT = flatpickrToMomentToken(dateFormat, timeFormat, enableTime)\r\n\r\n//         if (enableTime) {\r\n//             dateFormat = dateFormat + ' ' + timeFormat\r\n//         }\r\n\r\n//         this.datePicker = {\r\n//             from: flatpickr(this.dateFrom, {\r\n//                 enableTime,\r\n//                 allowInput,\r\n//                 dateFormat,\r\n//                 locale: loc,\r\n//                 time_24hr: !enableAMPM,\r\n//                 appendTo: this.fromWrapper,\r\n//                 inline: true,\r\n//                 onChange: () => {\r\n//                     this.checkCross('from')\r\n//                     this.handleChange()\r\n//                 }\r\n//             }),\r\n//             to: flatpickr(this.dateTo, {\r\n//                 enableTime,\r\n//                 allowInput,\r\n//                 dateFormat,\r\n//                 locale: loc,\r\n//                 time_24hr: !enableAMPM,\r\n//                 appendTo: this.toWrapper,\r\n//                 inline: true,\r\n//                 onChange: () => {\r\n//                     this.checkCross('to')\r\n//                     this.handleChange()\r\n//                 }\r\n//             })\r\n//         }\r\n//     },\r\n\r\n//     componentWillReceiveProps(nextProps) {\r\n//         const {value, locale} = nextProps\r\n\r\n//         let loc = null\r\n//         switch (locale) {\r\n//             case 'zh': loc = zh; break\r\n//             default: loc = null\r\n//         }\r\n\r\n//         this.datePicker.from.set('locale', loc)\r\n//         this.datePicker.to.set('locale', loc)\r\n//         this.datePicker.from.setDate(this.strToTimestamp(value.from), false)\r\n//         this.datePicker.to.setDate(this.strToTimestamp(value.to), false)\r\n\r\n//         this.setState({\r\n//             prevFrom: value.from,\r\n//             prevTo: value.to\r\n//         })\r\n//     },\r\n\r\n//     componentWillUnmount() {\r\n//         this.isMounted = false\r\n//         this.datePicker.from.destroy()\r\n//         this.datePicker.to.destroy()\r\n//     },\r\n\r\n//     strToTimestamp(str) {\r\n//         const {enableTime} = this.props\r\n//         // Remove the day suffix since moment can't resolve it\r\n//         const parsedStr = str.replace(DATE_TIME_SUFFIX.daySuffix, '')\r\n//         const momentFormat = enableTime ? `${this.FORMAT.date} ${this.FORMAT.time}` : this.FORMAT.date\r\n//         return Moment(parsedStr, momentFormat).valueOf()\r\n//     },\r\n\r\n//     handleChange() {\r\n//         const {onChange} = this.props\r\n//         onChange({from:this.dateFrom.value, to:this.dateTo.value})\r\n//     },\r\n\r\n//     handleInputChange(type, evt) {\r\n//         const {required} = this.props\r\n//         const newDate = evt.target.value\r\n\r\n//         const parseDate = this.strToTimestamp(newDate)\r\n\r\n//         const isValid = this.validateDateFormat(newDate)\r\n//         const errMsg = this.generateErrorMsg(type, newDate)\r\n\r\n//         if (!isNaN(parseDate)) {\r\n//             // Move the calendar view to the current value's location\r\n//             this.datePicker[type].jumpToDate(parseDate)\r\n\r\n//             if (isValid) {\r\n//                 Popover.closeId(`err-${type}`)\r\n\r\n//                 // setDate() accepts date string & Date object\r\n//                 // If set the 2nd parameter as true, it will recursively call itself here\r\n//                 this.datePicker[type].setDate(parseDate, false)\r\n//                 this.handleChange()\r\n\r\n//                 this.checkCross(type)\r\n//             }\r\n//             else {\r\n//                 Popover.openId(\r\n//                     `err-${type}`,\r\n//                     evt,\r\n//                     <span>{errMsg}</span>,\r\n//                     {pointy:true}\r\n//                 )\r\n//             }\r\n//         }\r\n//         else {\r\n//             if (required || newDate !== '') {\r\n//                 Popover.openId(\r\n//                     `err-${type}`,\r\n//                     evt,\r\n//                     <span>{errMsg}</span>,\r\n//                     {pointy:true}\r\n//                 )\r\n//             }\r\n//             else {\r\n//                 Popover.closeId(`err-${type}`)\r\n//             }\r\n//         }\r\n//     },\r\n\r\n//     handleBlur(type, evt) {\r\n//         Popover.closeId(`err-${type}`)\r\n\r\n//         const {required} = this.props\r\n//         const newDate = evt.target.value\r\n\r\n//         const isValid = this.validateDateFormat(newDate)\r\n//         const field = (type === 'from') ? 'prevFrom' : 'prevTo'\r\n//         const prevDate = (type === 'from') ? this.state.prevFrom : this.state.prevTo\r\n\r\n//         if (isValid) {\r\n//             // Prevent requiring double-click when select date\r\n//             if (newDate !== prevDate) {\r\n//                 this.datePicker[type].setDate(newDate)\r\n//                 this.setState({[field]:newDate})\r\n//             }\r\n\r\n//             this.checkCross(type)\r\n//         }\r\n//         else {\r\n//             // Reset to previous valid value\r\n//             if (required) {\r\n//                 this.datePicker[type].setDate(prevDate)\r\n//             }\r\n//             else {\r\n//                 this.datePicker[type].setDate('')\r\n//                 this.handleChange()\r\n//             }\r\n//         }\r\n//     },\r\n\r\n//     handleToggle() {\r\n//         const {show:prevShow} = this.state\r\n//         const show = !prevShow\r\n//         if (show) {\r\n//             // Hide the calendar when click outside\r\n//             $(document).click(event => {\r\n//                 const isOutSide = !$(event.target).closest(this.dateDisplay).length\r\n//                                 && !$(event.target).closest(this.dateWrapper).length\r\n\r\n//                 if (isOutSide) {\r\n//                     this.handleToggle()\r\n//                 }\r\n//             })\r\n//         }\r\n//         else {\r\n//             $(document).off()\r\n//         }\r\n//         this.isMounted && this.setState({show})\r\n//     },\r\n\r\n//     handleClick(period, unit) {\r\n//         const {onChange} = this.props\r\n//         const now = Moment().valueOf()\r\n//         const backTo = Moment().subtract(period, unit).valueOf()\r\n\r\n//         this.datePicker.from.setDate(backTo, false)\r\n//         this.datePicker.to.setDate(now, false)\r\n\r\n//         onChange({from:this.dateFrom.value, to:this.dateTo.value})\r\n//     },\r\n\r\n//     validateDateFormat(dateStr) {\r\n//         const {enableTime} = this.props\r\n//         let isValid = false\r\n\r\n//         if (enableTime) {\r\n//             isValid = Moment(dateStr, `${this.FORMAT.date} ${this.FORMAT.time}`, true).isValid()\r\n\r\n//             // Momentjs validation accepts single (a|A|p|P) for AM/PM\r\n//             // This is for ensuring user input complete 'AM/PM' term when AM/PM is enabled\r\n//             if (this.FORMAT.time.indexOf('A') !== -1 && dateStr.search(DATE_TIME_SUFFIX.timeSuffix) === -1) {\r\n//                 isValid = false\r\n//             }\r\n//         }\r\n//         else {\r\n//             isValid = Moment(dateStr, `${this.FORMAT.date}`, true).isValid()\r\n//         }\r\n\r\n//         return isValid\r\n//     },\r\n\r\n//     checkCross(type) {\r\n//         const dateFrom = this.strToTimestamp(this.dateFrom.value)\r\n//         const dateTo = this.strToTimestamp(this.dateTo.value)\r\n\r\n//         if (dateFrom !== dateTo) {\r\n//             if (type === 'from') {\r\n//                 const isAfter = Moment(dateFrom).isAfter(dateTo)\r\n\r\n//                 if (isAfter) {\r\n//                     this.datePicker.to.setDate(dateFrom, false)\r\n//                     this.handleChange()\r\n//                 }\r\n//             }\r\n//             else {\r\n//                 const isBefore = Moment(dateTo).isBefore(dateFrom)\r\n\r\n//                 if (isBefore) {\r\n//                     this.datePicker.from.setDate(dateTo, false)\r\n//                     this.handleChange()\r\n//                 }\r\n//             }\r\n//         }\r\n//     },\r\n\r\n//     generateErrorMsg(type, dateStr) {\r\n//         const {id, enableTime, required, t} = this.props\r\n//         const datePattern = this.FORMAT.date\r\n//         const timePattern = (this.FORMAT.time.indexOf('A') !== -1) ? this.FORMAT.time.replace('A', 'AM/PM') : this.FORMAT.time\r\n\r\n//         const pattern = enableTime ? `${datePattern} ${timePattern}` : datePattern\r\n\r\n//         return ih.validateField(dateStr, {name:`${id}-${type}`, type:'date', required, pattern}, t?{et:t}:true)\r\n//     },\r\n\r\n//     renderShortcut() {\r\n//         const {id, labels:{shortcut:label}, shortcut} = this.props\r\n\r\n//         if (typeof shortcut === 'boolean') {\r\n//             return <div className='shortcut'>\r\n//                 <label htmlFor={`${(id || 'date')}-shortcut`}>{label || LABELS.shortcut}</label>\r\n//                 <div id={`${(id || 'date')}-shortcut`}>\r\n//                     <button onClick={this.handleClick.bind(this, 1, 'days')}>Day</button>\r\n//                     <button onClick={this.handleClick.bind(this, 1, 'weeks')}>Week</button>\r\n//                     <button onClick={this.handleClick.bind(this, 1, 'months')}>Month</button>\r\n//                     <button onClick={this.handleClick.bind(this, 1, 'years')}>Year</button>\r\n//                 </div>\r\n//             </div>\r\n//         }\r\n//         else {\r\n//             return <div className='shortcut'>\r\n//                 <label htmlFor={`${(id || 'date')}-shortcut`}>{label || LABELS.shortcut}</label>\r\n//                 <div id={`${(id || 'date')}-shortcut`}>\r\n//                     {\r\n//                         _.map(shortcut, ({value, text, unit}) => {\r\n//                             return <button key={text} onClick={this.handleClick.bind(this, value, unit)}>\r\n//                                 {text}\r\n//                             </button>\r\n//                         })\r\n//                     }\r\n//                 </div>\r\n//             </div>\r\n//         }\r\n//     },\r\n\r\n//     render() {\r\n//         const {id, value, className, readOnly, disabled, required,\r\n//             allowKeyIn, enableTime, shortcut, labels: keyLabel} = this.props\r\n//         const {show} = this.state\r\n//         const labels = {...LABELS, ...keyLabel}\r\n\r\n//         return <div id={id} className={cx('c-range-calendar', className)}>\r\n//             <div ref={ref => { this.dateDisplay = ref }} className='date-display'>\r\n//                 <input\r\n//                     type='text'\r\n//                     readOnly\r\n//                     required={required}\r\n//                     value={value.from + ' - ' + value.to}\r\n//                     onClick={this.handleToggle} />\r\n//                 <i className='fg fg-calendar' onClick={this.handleToggle} />\r\n//             </div>\r\n//             <div ref={ref => { this.dateWrapper = ref }} className={cx('date-wrapper', {show, large:enableTime})}>\r\n//                 <div ref={ref => { this.fromWrapper = ref }} className='date-calendar' />\r\n//                 <div ref={ref => { this.toWrapper = ref }} className='date-calendar' />\r\n//                 <div className='c-form nopad'>\r\n//                     <div>\r\n//                         <label htmlFor={`${(id || 'date')}-from`}>{labels.from}</label>\r\n//                         <input\r\n//                             id={`${(id || 'date')}-from`}\r\n//                             type='text'\r\n//                             ref={ref => { this.dateFrom=ref }}\r\n//                             disabled={disabled}\r\n//                             readOnly={readOnly}\r\n//                             required={required}\r\n//                             onChange={allowKeyIn ? this.handleInputChange.bind(this, 'from') : null}\r\n//                             onBlur={this.handleBlur.bind(this, 'from')}\r\n//                             defaultValue={value.from} />\r\n//                     </div>\r\n//                     <div>\r\n//                         <label htmlFor={`${(id || 'date')}-to`}>{labels.to}</label>\r\n//                         <input\r\n//                             id={`${(id || 'date')}-to`}\r\n//                             type='text'\r\n//                             ref={ref => { this.dateTo=ref }}\r\n//                             disabled={disabled}\r\n//                             readOnly={readOnly}\r\n//                             required={required}\r\n//                             onChange={allowKeyIn ? this.handleInputChange.bind(this, 'to') : null}\r\n//                             onBlur={this.handleBlur.bind(this, 'to')}\r\n//                             defaultValue={value.to} />\r\n//                     </div>\r\n//                     { shortcut && this.renderShortcut() }\r\n//                     <button className='end btn-done' onClick={this.handleToggle}>{labels.done}</button>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     },\r\n// })\r\n\r\n// export default wire(RangeCalendar, 'value', {})","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport { SIMPLE_VALUE_PROP } from '../consts/prop-types'\r\nimport {wire} from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/search')\r\n\r\n/**\r\nA React Search bar\r\n * @constructor\r\n * @param {string} [id] - container element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {string} [placeholder] - Placeholder for search input\r\n * @param {string|number} [defaultValue] - Default search value\r\n * @param {string|number} [value] - Current search value\r\n * @param {boolean} [enableClear=true] - Can this field be cleared?\r\n * @param {boolean} [interactive=false] - Determine if search is interactive<br>\r\n * @param {number} [delaySearch=0] - If search is interactive, this setting will trigger onSearch event after *delaySearch* milliseconds<br>\r\n * true: onSearch event called as user types; <br>\r\n * false: onSearch event called when user hits enter\r\n * @param {function} [onSearch] - Callback function when search is changed. <br> Required when value prop is supplied\r\n * @param {string|number} onSearch.search - updated search value\r\n *\r\n * @example\r\n\r\nimport {Search} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            movies:[]\r\n        }\r\n    },\r\n    handleSearch(search) {\r\n        // after ajax request get back list of movies\r\n        let movies = ['My big fat greek wedding','Starlight Hotel']\r\n        this.setState({movies})\r\n    },\r\n    render() {\r\n        let {movies} = this.state;\r\n        return <div>\r\n            <Search placeholder='Please enter movie title' onSearch={this.handleSearch}/>\r\n            <div>\r\n            {\r\n                _.map(movies, (movie, i)=>`${i}. ${movie}`)\r\n            }\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass Search extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        placeholder: SIMPLE_VALUE_PROP,\r\n        value: SIMPLE_VALUE_PROP,\r\n        onSearch: PropTypes.func.isRequired,\r\n        enableClear: PropTypes.bool,\r\n        interactive: PropTypes.bool,\r\n        delaySearch: PropTypes.number\r\n    };\r\n\r\n    static defaultProps = {\r\n        enableClear: false,\r\n        interactive: false,\r\n        delaySearch: 0\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let {value} = props\r\n\r\n        this.state = {\r\n            value\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let {value} = nextProps\r\n        this.setState({\r\n            value\r\n        })\r\n    }\r\n\r\n    focus = () => {\r\n        this.input.focus()\r\n    };\r\n\r\n    handleSearch = (value, force) => {\r\n        let {interactive, onSearch, delaySearch} = this.props\r\n        if (force || interactive) {\r\n            const searchText = _.trim(value).toLowerCase()\r\n            if (interactive) {\r\n                if (this.timer) {\r\n                    clearTimeout(this.timer)\r\n                    delete this.timer\r\n                }\r\n\r\n                this.setState({value}, ()=>{\r\n                    this.timer = setTimeout(()=>{\r\n                        this.timer = null\r\n                        onSearch(searchText)\r\n                    }, delaySearch)\r\n                })\r\n            }\r\n            else {\r\n                onSearch(searchText)\r\n            }\r\n        }\r\n        else {\r\n            this.setState({value})\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keyCode === 13) {\r\n            this.handleSearch(this.state.value, true)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let {id, className, enableClear, placeholder} = this.props\r\n        let {value} = this.state\r\n\r\n        return <span id={id} ref={ref=>{ this.node=ref }} className={cx('c-search', className, {clearable:enableClear})}>\r\n            <input\r\n                ref={ref=>{ this.input=ref }}\r\n                type='text'\r\n                value={value}\r\n                placeholder={placeholder}\r\n                onKeyDown={this.handleKeyDown}\r\n                onChange={(evt)=>{ this.handleSearch(evt.target.value, false) }} />\r\n            <span className='actions c-flex aic'>\r\n                {enableClear && <i className='fg fg-close' onClick={()=>{ this.handleSearch('', true) }} />}\r\n                <i className='fg fg-search' onClick={()=>{ this.handleSearch(value, true) }} />\r\n            </span>\r\n        </span>\r\n    }\r\n}\r\n\r\nexport default wire(Search, 'value', '', 'onSearch')","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport $ from 'jquery'\r\n\r\nimport {wireValue} from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('core/components/slider')\r\n\r\nconst isIncrease = true\r\n\r\n/**\r\n * A React toggle button\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {boolean} [disabled=false] - Is slider disabled?\r\n * @param {function} onChange - Callback function when slider value is updated\r\n * @param {function} [onPlus] - Function for clicking plus icon\r\n * @param {function} [onMinus] - Function for clicking minus icon\r\n * @param {object} [valueLink] - Link to update value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {number} valueLink.value - value to update\r\n * @param {function} valueLink.requestChange - function to request value change\r\n * @param {number} [max=1] - The slider max value\r\n * @param {number} [min=0] - The slider min value\r\n * @param {number} [step=0.01] - Legal number intervals for the input\r\n * @param {number} [value=0.5] - Current slider value\r\n * @param {boolean} [showProgress=false] - Show the slider's progress?\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport Slider from 'core/components/slider'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {value:40}\r\n    },\r\n    handleChange(e) {\r\n        let value = e\r\n        this.setState({value})\r\n    },\r\n    render() {\r\n        let {value} = this.state\r\n        return <Slider value={value} onChange={this.handleChange} showProgress={true} min={0} max={100} step={5} />\r\n    }\r\n})\r\n */\r\n\r\nclass Slider extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        disabled: PropTypes.bool,\r\n        max: PropTypes.number,\r\n        min: PropTypes.number,\r\n        step: PropTypes.number,\r\n        value: PropTypes.number,\r\n        showProgress: PropTypes.bool,\r\n        onChange: PropTypes.func,\r\n        onMinus: PropTypes.func,\r\n        onPlus: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n        max: 1,\r\n        min: 0,\r\n        step: 0.01,\r\n        value: 0.5\r\n    };\r\n\r\n    state = {\r\n        width: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        let {showProgress} = this.props\r\n        let width = $(this.input).width()\r\n\r\n        if (showProgress) {\r\n            this.setState({\r\n                width\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let val = parseFloat(e.target.value)\r\n        let {onChange} = this.props\r\n        onChange(val)\r\n    };\r\n\r\n    handleClick = (isPlus) => {\r\n        let {disabled, max, min, step, value, onChange} = this.props\r\n\r\n        if (disabled) { return }\r\n\r\n        // Fix the decimal of value as the step's\r\n        let numArr = (step.toString()).split('.')\r\n        let decimal = 0\r\n\r\n        if (numArr.length === 2) { decimal = numArr[1].length }\r\n\r\n        let tmp = isPlus ? (value + step).toFixed(decimal) : (value - step).toFixed(decimal)\r\n        if (isPlus) {\r\n            value = (parseFloat(tmp) > max) ? max : parseFloat(tmp)\r\n        }\r\n        else {\r\n            value = (parseFloat(tmp) < min) ? min : parseFloat(tmp)\r\n        }\r\n\r\n        onChange(value)\r\n    };\r\n\r\n    render() {\r\n        let {id, className, disabled, max, min, step, value, showProgress, onPlus, onMinus} = this.props\r\n        let {width} = this.state\r\n        let prgs = ((value - min) / (max - min)) * width\r\n        let prgsBar = showProgress ? <div className='progress' style={{width:`${prgs}px`}} data-tooltip={value} /> : ''\r\n\r\n        return (\r\n            <div className={cx('c-flex', 'aic', 'c-slider', className)}>\r\n                {/*<i className='fg fg-magnifier-lessen c-link' aria-hidden='true' onClick={onMinus || this.handleClick.bind(this, !isIncrease)} />*/}\r\n                <div className='c-flex aic'>\r\n                    <input\r\n                        type='range'\r\n                        id={id}\r\n                        ref={ref=>{ this.input=ref }}\r\n                        disabled={disabled}\r\n                        max={max}\r\n                        min={min}\r\n                        step={step}\r\n                        value={value}\r\n                        onChange={disabled ? null : this.handleChange} />\r\n\r\n                    {prgsBar}\r\n                </div>\r\n                {/*<i className='fg fg-magnifier-enlarge c-link' aria-hidden='true' onClick={onPlus || this.handleClick.bind(this, isIncrease)} />*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default wireValue(Slider)","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\n\r\nimport {wireSet} from '../hoc/prop-wire'\r\nimport Checkbox from './checkbox'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/components/table')\r\n\r\n\r\nclass Row extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        fields: PropTypes.object.isRequired,\r\n        data: PropTypes.object.isRequired,\r\n        force: PropTypes.bool,\r\n        style: PropTypes.object,\r\n        onInputChange: PropTypes.func,\r\n        onClick: PropTypes.func,\r\n        onDoubleClick: PropTypes.func,\r\n        onMouseOver: PropTypes.func,\r\n        onMouseOut: PropTypes.func,\r\n        onContextMenu: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        force: false,\r\n        style: {}\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if (nextProps.force) {\r\n            log.debug('Row::shouldComponentUpdate::forced')\r\n            return true\r\n        }\r\n\r\n        if (nextProps.fields !== this.props.fields) {\r\n            log.debug('Row::shouldComponentUpdate::fields changed')\r\n            return true\r\n        }\r\n\r\n        if (nextProps.className !== this.props.className) {\r\n            log.debug('Row::shouldComponentUpdate::className changed')\r\n            return true\r\n        }\r\n\r\n        if (JSON.stringify(this.props.data) !== JSON.stringify(nextProps.data)) {\r\n            log.debug('Row::shouldComponentUpdate::data changed')\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    formatItem = (value, data, formatter, id, name) => {\r\n        if (React.isValidElement(formatter)) {\r\n            return formatter\r\n        }\r\n        else if (_.isFunction(formatter)) {\r\n            return formatter(value, data, id)\r\n        }\r\n        else if (_.isString(formatter)) {\r\n            return _.template(formatter)({value, data})\r\n        }\r\n        else if (_.isObject(formatter)) {\r\n            const {type, ...options} = formatter\r\n            let formatted = value\r\n            switch (type) {\r\n                case 'date':\r\n                case 'datetime':\r\n                    {\r\n                        if (value==null || (_.isString(value) && _.trim(value)==='')) {\r\n                            formatted = null\r\n                        }\r\n                        else {\r\n                            formatted = moment(value, options.inputFormat).format(options.format || (type==='date'?'YYYY-MM-DD':'YYYY-MM-DD HH:mm:ss'))\r\n                        }\r\n                        break\r\n                    }\r\n                case 'mapping': {\r\n                    const {list, listTransform={}} = options\r\n                    const {value:valueField='value', text:textField='text'} = listTransform\r\n                    if (_.isObject(list)) {\r\n                        if (_.isArray(list)) {\r\n                            formatted = _.find(list, {[valueField]:value})\r\n                        }\r\n                        else {\r\n                            formatted = _.get(list, value)\r\n                        }\r\n\r\n                        if (formatted==null) {\r\n                            formatted = value\r\n                        }\r\n                        else if (_.isObject(formatted)) {\r\n                            formatted = _.get(formatted, textField, value)\r\n                        }\r\n                    }\r\n                    else {\r\n                        log.error(`renderField:: field '${name}' mapping list is invalid or undefined`)\r\n                    }\r\n                    break\r\n                }\r\n                default:\r\n                    log.error(`renderField:: field '${name}' formatter type '${type}' is invalid`)\r\n                    break\r\n            }\r\n            return formatted\r\n        }\r\n        else {\r\n            log.error(`renderField:: field '${name}' formatter is invalid`)\r\n            return value\r\n        }\r\n    };\r\n\r\n    renderField = (name, value, fieldCfg, rowData) => {\r\n        const {id, onInputChange} = this.props\r\n        let {formatArrayItem=false, formatter, editor, props} = fieldCfg\r\n\r\n        if (formatter) {\r\n            if (_.isArray(value) && formatArrayItem) {\r\n                return <div>\r\n                    {_.map(value, (item, idx)=><div key={idx+''}>{this.formatItem(null, item, formatter, null, name)}</div>)}\r\n                </div>\r\n            }\r\n            else {\r\n                return this.formatItem(value, rowData, formatter, id, name)\r\n            }\r\n        }\r\n        else if (editor) {\r\n            if (_.isFunction(props)) {\r\n                props = props(rowData)\r\n            }\r\n            // TODO: check editor must be ReactClass\r\n            props = _.assign(\r\n                {name, value, onChange:onInputChange && onInputChange.bind(null, id, name)},\r\n                props || {}\r\n            )\r\n\r\n            return React.createElement(editor, props)\r\n        }\r\n        else {\r\n            return value\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {data, fields, id, className, style, onClick, onDoubleClick, onMouseOver, onMouseOut, onContextMenu} = this.props\r\n\r\n        return <tr id={id} onClick={onClick} onDoubleClick={onDoubleClick} onContextMenu={onContextMenu} className={className} style={style} onMouseOver={onMouseOver} onMouseOut={onMouseOut}>\r\n            {\r\n                _.map(fields, (field, key) => {\r\n                    const {hide, keyPath, style:fieldStyle, className:fieldClassName} = field\r\n                    if (hide) {\r\n                        return null\r\n                    }\r\n\r\n                    const val = _.get(data, keyPath||key, null) // to support traverse of nested field properties, eg a.b.c\r\n                    return <td\r\n                        key={key}\r\n                        style={fieldStyle}\r\n                        className={cx(key, fieldClassName)}>\r\n                        {this.renderField(key, val, field, data)}\r\n                    </td>\r\n                })\r\n            }\r\n        </tr>\r\n    }\r\n}\r\n\r\n/**\r\n * A React data Table Component. Renders **data** according to **fields** configuration\r\n * @constructor\r\n * @param {string} [id] - Table element #id\r\n * @param {renderable} [caption] - Table caption\r\n * @param {renderable} [footer] - Table footer\r\n * @param {string} [className] - Classname for the container, default selected classnames:\r\n * * bland - Do not color alternate rows\r\n * * nohover - Do not change color when hovering over rows\r\n * * fixed-header - Fix table header when height is limited, allow table body to scroll\r\n * * column - Make table a column table. Ie data rows will be from left to right, instead of top to bottom\r\n * * border-inner-vertical - Show vertical border inside table\r\n * * border-inner-horizontal - Show horizontal border inside table\r\n * * border-inner - Show both vertical and horizontal border inside table\r\n * * border-outer - Show table border outline\r\n * * border-all - Show all border, outer + inner\r\n * @param {object} [style] - Table style\r\n * @param {object} fields - All fields definition, in key-config pair, each key represents a column\r\n * @param {object} fields.key - Config for this **key** field\r\n * @param {renderable} [fields.key.label=key] - label for this field\r\n * @param {string | array.<string>} [fields.key.keyPath=key] - key path for this field\r\n * @param {renderable} [fields.key.sortable=false] - is column sortable?\r\n * @param {string | array.<string>} [fields.key.sortKeyPath=keyPath] - key path used for sorting\r\n * @param {renderable} [fields.key.hide=false] - hide this column?\r\n * @param {string} [fields.key.className] - classname of this column\r\n * @param {object} [fields.key.style] - column style, eg width, minWidth\r\n * @param {string | object | function | renderable} [fields.key.formatter] - what to render in this field?\r\n * * template string literal: eg 'Hi my name is ${value} and address is ${data.address}'\r\n * * renderable elements supported by react: eg <div>xxxx</div>\r\n * * format config object, with type='date'|'datetime'|'mapping'\r\n * * custom defined formatter function, first argument will be data value corresponding to the field, second argument is data for the entire row\r\n * @param {boolean} [fields.key.formatArrayItem=false] - if field value is an array, whether the formatter above is targeted towards the array item?\r\n * @param {function | component} [fields.key.editor] - If this field is an input, the react component class to use\r\n * @param {object | function} [fields.key.props] - If this field is an input, props for the above react class\r\n * * object - props as object\r\n * * function - function given row data, returning object props\r\n * @param {array} [data] - Data to fill table with\r\n * @param {object} [rows] - Limit data to show\r\n * @param {number} [rows.start=0] - row to start with\r\n * @param {number} [rows.end=data.length] - row to end with (not including end)\r\n * @param {string} [rowIdField] - The field key which will be used as row dom #id\r\n * @param {string | function} [rowClassName] - Classname of a data row\r\n * @param {string | function} [rowStyle] - Style of a data row\r\n * @param {object} [selection] - Table row selection settings\r\n * @param {boolean} [selection.enabled=false] - Is table rows selectable? If yes checkboxes will appear\r\n * @param {boolean} [selection.toggleAll=false] - Show toggle all checkbox in header?\r\n * @param {boolean} [selection.multiSelect=true] - Can select multiple rows?\r\n * @param {string | array.<string>} [defaultSelected] - Selected row id(s)\r\n * @param {string | array.<string>} [selected] - Default selected row id(s)\r\n * @param {object} [selectedLink] - Link to update selections. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} selectedLink.value - value to update\r\n * @param {function} selectedLink.requestChange - function to request value change\r\n * @param {function} [onSelectionChange] - Callback function when row is selected. <br> Required when selected prop is supplied\r\n * @param {string | array} onSelectionChange.value - current selected row ids\r\n * @param {object} onSelectionChange.eventInfo - event related info\r\n * @param {string | array} onSelectionChange.eventInfo.before - previous selected row ids\r\n * @param {string} onSelectionChange.eventInfo.id - id triggering change\r\n * @param {boolean} onSelectionChange.eventInfo.selected - selected?\r\n * @param {object} [defaultSort] - Default sort config\r\n * @param {string} [defaultSort.field] - Default sort field\r\n * @param {boolean} [defaultSort.desc=false] - Is sort order descending by default?\r\n * @param {object} [sort] - Current sort config\r\n * @param {string} [sort.field] - Current sort field\r\n * @param {boolean} [sort.desc=false] - Is sort order descending?\r\n * @param {object} [sortLink] - Link to update sort. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} sortLink.value - sort to update\r\n * @param {function} sortLink.requestChange - function to request sort change\r\n * @param {function} [onSort] - Callback function when sort is changed. <br> Required when sort prop is supplied\r\n * @param {object} onSort.value - current sort object\r\n * @param {object} onSort.eventInfo - event related info\r\n * @param {object} onSort.eventInfo.before - previous sort object\r\n * @param {function} [onRowClick] [description]\r\n * @param {function} [onRowDoubleClick] [description]\r\n * @param {function} [onRowMouseOver] - Row mouseover event\r\n * @param {function} [onRowMouseOut] - Row mouseout event\r\n * @param {function} [onRowContextMenu] [description]\r\n * @param {function} [onScroll] [description]\r\n * @param {function} [onInputChange] - Input change event\r\n * @param {string} onInputChange.rid - row id of this input\r\n * @param {string} onInputChange.name - input name\r\n * @param {string|number} onInputChange.value - input value\r\n * @param {renderable} [info] - React renderable object, display additional information about the list\r\n * @param {string} [infoClassName] - Assign className to info node\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport $ from 'jquery'\r\nimport cx from 'classnames'\r\nimport {Table} from 'react-ui'\r\n\r\nconst FIELDS = {\r\n    id: { label:'ID', sortable:true },\r\n    title: { label:'Title', sortable:true },\r\n    adult: {label:'Adult', formatter:{\r\n        type: 'mapping',\r\n        list: {true:'Yes', false:'No'}\r\n    }},\r\n    original_language: {\r\n        label:'Language',\r\n        formatter: {\r\n            type: 'mapping',\r\n            list: [\r\n                {lang:'en', desc:'English'},\r\n                {lang:'de', desc:'German'}\r\n            ],\r\n            valueField: 'lang',\r\n            textField: 'desc'\r\n        }\r\n    },\r\n    popularity: {label:'Popularity'},\r\n    release_date: {\r\n        label: 'Year',\r\n        formatter: {type:'date', format:'YYYY-MM-DD'},\r\n        sortable: true\r\n    }\r\n}\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            search: 'ab',\r\n            selected: [],\r\n            clicked: null,\r\n            info: null,\r\n            error: false,\r\n            data: []\r\n        }\r\n    },\r\n    componentDidMount() {\r\n        this.loadList()\r\n    },\r\n    handleSelect(selected) {\r\n        this.setState({selected})\r\n    },\r\n    handleClick(clicked) {\r\n        this.setState({clicked})\r\n    },\r\n    loadList() {\r\n        this.setState({data:[], info:'Loading...', error:false}, () => {\r\n            let {search} = this.state\r\n\r\n            $.get(`https://api.themoviedb.org/3/${search?'search':'discover'}/movie`,\r\n                {\r\n                    api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                    query: search\r\n                })\r\n                .done(({results:list=[], total_results:total=0}) => {\r\n                    if (total === 0) {\r\n                        this.setState({info:'No movies found!'})\r\n                        return\r\n                    }\r\n\r\n                    this.setState({info:null, data:list})\r\n                })\r\n                .fail(xhr => {\r\n                    this.setState({info:xhr.responseText, error:true})\r\n                })\r\n        })\r\n    },\r\n    render() {\r\n        let {data, info, error} = this.state\r\n\r\n        return <div className='c-box noborder'>\r\n            <div className='content'>\r\n                <Table\r\n                    data={data}\r\n                    fields={FIELDS}\r\n                    className='fixed-header'\r\n                    rowIdField='id'\r\n                    info={info}\r\n                    infoClassName={cx({'c-error':error})}\r\n                    defaultSort={{\r\n                        field: 'title',\r\n                        desc: false\r\n                    }}\r\n                    onRowClick={this.handleClick}\r\n                    selection={{\r\n                        enabled:true,\r\n                        toggleAll:true\r\n                    }}\r\n                    onSelectionChange={this.handleSelect} />\r\n            </div>\r\n        </div>\r\n    }\r\n});\r\n */\r\nclass Table extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        caption: PropTypes.node,\r\n        footer: PropTypes.node,\r\n        className: PropTypes.string,\r\n        style: PropTypes.object,\r\n        rowIdField: PropTypes.string,\r\n        rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n        rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n        fields: PropTypes.objectOf(PropTypes.shape({\r\n            label: PropTypes.node,\r\n            keyPath: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n            sortable: PropTypes.bool,\r\n            sortKeyPath: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\r\n            hide: PropTypes.bool,\r\n            className: PropTypes.string,\r\n            style: PropTypes.object,\r\n            formatter: PropTypes.oneOfType([\r\n                PropTypes.string,\r\n                PropTypes.object,\r\n                PropTypes.func,\r\n                PropTypes.node\r\n            ]),\r\n            formatArrayItem: PropTypes.bool,\r\n            editor: PropTypes.oneOfType([PropTypes.func, PropTypes.element, PropTypes.string]),\r\n            props: PropTypes.oneOfType([\r\n                PropTypes.object,\r\n                PropTypes.func\r\n            ])\r\n        })).isRequired,\r\n        data: PropTypes.array,\r\n        rows: PropTypes.shape({\r\n            start: PropTypes.number,\r\n            end: PropTypes.number\r\n        }),\r\n        forceRefresh: PropTypes.bool,\r\n        selection: PropTypes.shape({\r\n            enabled: PropTypes.bool,\r\n            multiSelect: PropTypes.bool,\r\n            toggleAll: PropTypes.bool\r\n        }),\r\n        selected: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.arrayOf(PropTypes.string)\r\n        ]),\r\n        onSelectionChange: PropTypes.func,\r\n        sort: PropTypes.shape({\r\n            field: PropTypes.string,\r\n            desc: PropTypes.bool\r\n        }),\r\n        onSort: PropTypes.func,\r\n        onRowClick: PropTypes.func,\r\n        onRowDoubleClick: PropTypes.func,\r\n        onRowContextMenu: PropTypes.func,\r\n        onScroll: PropTypes.func,\r\n        onInputChange: PropTypes.func,\r\n        onRowMouseOver: PropTypes.func,\r\n        onRowMouseOut: PropTypes.func,\r\n        info: PropTypes.node,\r\n        infoClassName: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n        selection: {\r\n            enabled: false\r\n        },\r\n        forceRefresh: false\r\n    };\r\n\r\n    state = {\r\n        fieldsSize: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleWindowResize)\r\n        if (this.isAutoLayout()) {\r\n            setTimeout(()=>{\r\n                this.resizeFields()\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {data:prevData, className:prevClassName} = prevProps\r\n        const {data, className} = this.props\r\n        if (this.isAutoLayout()) {\r\n            if (\r\n                (className !== prevClassName) ||\r\n                (!_.isEmpty(data) && JSON.stringify(data) !== JSON.stringify(prevData))\r\n            ) {\r\n                log.debug('Table::componentDidUpdate::resize fields')\r\n                this.resizeFields()\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleWindowResize)\r\n    }\r\n\r\n    getRowId = (rowData, rowIdField) => {\r\n        if (!rowIdField) {\r\n            log.error('getRowId:: rowIdField prop must be specified')\r\n            return null\r\n        }\r\n\r\n        const {fields} = this.props\r\n        const fieldCfg = this.formatField(rowIdField, fields[rowIdField])\r\n        const id = _.get(rowData, _.get(fieldCfg, 'keyPath', rowIdField))\r\n\r\n        if (!id) {\r\n            log.error(`getRowId:: unable to produce id based on config ${fieldCfg}`)\r\n            return null\r\n        }\r\n\r\n        return id+''\r\n    };\r\n\r\n    resizeFields = () => {\r\n        const {fields} = this.props\r\n        this.setState({\r\n            fieldsSize: null\r\n        }, ()=>{\r\n            let fieldsSize = {}\r\n            $(this.tableHeaderNode).children().each(function () {\r\n                fieldsSize[this.id] = _.get(fields, [this.id, 'style', 'width'], $(this).width()+14)\r\n            })\r\n\r\n            this.setState({fieldsSize})\r\n        })\r\n    };\r\n\r\n    isAutoLayout = (props) => {\r\n        const {className} = props || this.props\r\n        return _.indexOf(_.split(className, ' '), 'fixed-header')>=0\r\n    };\r\n\r\n    formatField = (key, fieldCfg) => {\r\n        if (_.isString(fieldCfg)) {\r\n            return {label:fieldCfg}\r\n        }\r\n        else {\r\n            return {\r\n                label: key,\r\n                ...fieldCfg\r\n            }\r\n        }\r\n    };\r\n\r\n    formatFields = () => {\r\n        let {\r\n            fields,\r\n            selection: {enabled:selectable, multiSelect=true, toggleAll=false},\r\n            selected,\r\n            data\r\n        } = this.props\r\n\r\n        fields = _.mapValues(fields, (fieldCfg, key) => this.formatField(key, fieldCfg))\r\n\r\n        if (selectable) {\r\n            const total = data.length\r\n            const numSelected = multiSelect ? selected.length : null\r\n\r\n            fields = {\r\n                selector: {\r\n                    label: toggleAll && multiSelect ? <Checkbox\r\n                        checked={numSelected>0}\r\n                        className={cx({partial:numSelected>0 && numSelected<total})}\r\n                        onChange={this.handleToggleAll} />: '',\r\n                    formatter: (v, row, rid)=>{\r\n                        const rowSelected = multiSelect ? _.includes(selected, rid) : selected===rid\r\n                        return <Checkbox checked={rowSelected} onChange={this.handleRowSelect.bind(this, rid)} />\r\n                    }\r\n                },\r\n                ...fields\r\n            }\r\n        }\r\n        return fields\r\n    };\r\n\r\n    handleWindowResize = () => {\r\n        if (this.isAutoLayout()) {\r\n            this.resizeFields()\r\n        }\r\n    };\r\n\r\n    handleSort = (evt) => {\r\n        const {onSort, sort:{field:sortField, desc:sortDesc}} = this.props\r\n        const newSortField = evt.currentTarget.id\r\n\r\n        const sortObj = {field:newSortField, desc:(newSortField===sortField?!sortDesc:false)}\r\n        onSort(sortObj)\r\n    };\r\n\r\n    handleToggleAll = (selected) => {\r\n        const {onSelectionChange, data, rowIdField} = this.props\r\n        const newSelected = (selected ? _.map(data, row=>this.getRowId(row, rowIdField)): [])\r\n        onSelectionChange(newSelected, {id:null, selected})\r\n    };\r\n\r\n    handleRowSelect = (rid, selected) => {\r\n        const {selection:{multiSelect=true}, onSelectionChange, selected:curSelected} = this.props\r\n        if (multiSelect) {\r\n            const newSelected = (selected ? [...curSelected, rid] : _.without(curSelected, rid))\r\n            onSelectionChange(newSelected, {id:rid, selected})\r\n        }\r\n        else {\r\n            onSelectionChange(selected ? rid : '')\r\n        }\r\n    };\r\n\r\n    handleRowClick = (row, evt) => {\r\n        const rid = evt.currentTarget.id\r\n        this.props.onRowClick && this.props.onRowClick(rid, row, evt)\r\n    };\r\n\r\n    handleRowDoubleClick = (row, evt) => {\r\n        const rid = evt.currentTarget.id\r\n        this.props.onRowDoubleClick && this.props.onRowDoubleClick(rid, row, evt)\r\n    };\r\n\r\n    handleRowMouseOver = (row, evt) => {\r\n        const rid = evt.currentTarget.id\r\n        this.props.onRowMouseOver && this.props.onRowMouseOver(rid, row, evt)\r\n    };\r\n\r\n    handleRowMouseOut = (row, evt) => {\r\n        const rid = evt.currentTarget.id\r\n        this.props.onRowMouseOut && this.props.onRowMouseOut(rid, row, evt)\r\n    };\r\n\r\n    handleContextMenu = (row, evt) => {\r\n        const rid = evt.currentTarget.id\r\n        this.props.onRowContextMenu && this.props.onRowContextMenu(rid, row, evt)\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            id, className, style={}, caption, footer, info, infoClassName,\r\n            data, rows, rowIdField,\r\n            selection: {enabled:selectable, multiSelect:multiSelectable=true},\r\n            selected, sort: {field:sortField, desc:sortDesc},\r\n            rowClassName, rowStyle, forceRefresh,\r\n            onRowClick, onRowDoubleClick, onRowContextMenu, onInputChange, onScroll, onRowMouseOver, onRowMouseOut} = this.props\r\n\r\n        const autoLayout = this.isAutoLayout()\r\n        const {fieldsSize} = this.state\r\n        const refreshAll = (forceRefresh === true)\r\n        const fields = this.formatFields()\r\n\r\n        if (!refreshAll && !_.isArray(forceRefresh)) {\r\n            forceRefresh = [forceRefresh]\r\n        }\r\n\r\n        if (sortField && fields[sortField].sortable) {\r\n            data = _.orderBy(\r\n                data,\r\n                [\r\n                    item => {\r\n                        const val = _.get(item, fields[sortField].sortKeyPath||fields[sortField].keyPath||sortField)\r\n                        return _.isString(val) ? val.toLowerCase() : val\r\n                    },\r\n                    rowIdField\r\n                ],\r\n                [sortDesc?'desc':'asc'])\r\n        }\r\n\r\n        if (rows) {\r\n            const {start, end} = rows\r\n            data = data.slice(start, end)\r\n        }\r\n\r\n        return (\r\n            <table\r\n                id={id}\r\n                className={cx(\r\n                    'c-table',\r\n                    _.replace(className, 'fixed-header', ''),\r\n                    {\r\n                        selectable,\r\n                        'fixed-header': autoLayout&&fieldsSize\r\n                    }\r\n                )}\r\n                style={{\r\n                    width: autoLayout&&!fieldsSize ? '100%': null,\r\n                    minWidth: autoLayout&&fieldsSize ? _.sum(_.values(fieldsSize)): null,\r\n                    ...style\r\n                }}>\r\n                {caption ? <caption>{caption}</caption> : null}\r\n                <thead><tr id='header' ref={ref=>{ this.tableHeaderNode=ref }}>\r\n                    {\r\n                    _.map(fields, ({sortable=false, hide=false, label, className:fieldClassName, style:fieldStyle}, key) => {\r\n                        if (hide) {\r\n                            return null\r\n                        }\r\n\r\n                        let fieldWidth = _.get(fieldStyle, 'width')\r\n                        if (autoLayout && _.has(fieldsSize, key)) {\r\n                            fieldWidth = fieldsSize[key]\r\n                        }\r\n                        return <th\r\n                            id={key}\r\n                            key={key}\r\n                            className={cx(key, {sortable}, fieldClassName)}\r\n                            style={{\r\n                                width: fieldWidth,\r\n                                ...fieldStyle\r\n                            }}\r\n                            onClick={sortable && this.handleSort}>\r\n                            {label}\r\n                            {\r\n                                sortable ?\r\n                                (\r\n                                    key===sortField ?\r\n                                    (\r\n                                        <span className={'dir selected '+(sortDesc?'desc':'')}>{sortDesc?'\\u25BC':'\\u25B2'}</span>\r\n                                    )\r\n                                    :\r\n                                        <span className='dir'>{'\\u25B2'}</span>\r\n                                )\r\n                                : ''\r\n                            }\r\n                        </th>\r\n                    })\r\n                }\r\n                </tr></thead>\r\n                <tbody onScroll={onScroll}>\r\n                    {\r\n                    info ? <tr><td className={cx('c-info', infoClassName)} colSpan={_.size(fields)}>{info}</td></tr> :\r\n                    _.map(data, (row, index) => {\r\n                        const rid = (rowIdField ? this.getRowId(row, rowIdField) : index)+''\r\n                        let _className = rowClassName\r\n                        if (rowClassName) {\r\n                            if (_.isFunction(rowClassName)) {\r\n                                _className = rowClassName(row)\r\n                            }\r\n                        }\r\n\r\n                        if ((multiSelectable && _.includes(selected, rid)) || (!multiSelectable && selected===rid)) {\r\n                            _className = [_className, 'selected']\r\n                        }\r\n\r\n                        let _rowStyle = rowStyle\r\n                        if (rowStyle) {\r\n                            if (_.isFunction(rowStyle)) {\r\n                                _rowStyle = _.isPlainObject(rowStyle(row)) ? rowStyle(row) : {}\r\n                            }\r\n                        }\r\n\r\n                        return (\r\n                            <Row\r\n                                key={rid}\r\n                                id={rid}\r\n                                fields={_.mapValues(fields, (v, k)=>{\r\n                                    const fieldWidth = _.get(v, 'style.width', autoLayout ? _.get(fieldsSize, k) : null)\r\n                                    return {\r\n                                        ...v,\r\n                                        style: {\r\n                                            width: fieldWidth,\r\n                                            ...(v.style || {})\r\n                                        }\r\n                                    };\r\n                                })}\r\n                                data={row}\r\n                                className={cx(_className)}\r\n                                style={_rowStyle}\r\n                                force={refreshAll || forceRefresh.indexOf(''+rid)>=0}\r\n                                onInputChange={onInputChange}\r\n                                onContextMenu={onRowContextMenu ? this.handleContextMenu.bind(this, row) : null}\r\n                                onClick={onRowClick ? this.handleRowClick.bind(this, row) : null}\r\n                                onDoubleClick={onRowDoubleClick ? this.handleRowDoubleClick.bind(this, row) : null}\r\n                                onMouseOver={onRowMouseOver ? this.handleRowMouseOver.bind(this, row) : null}\r\n                                onMouseOut={onRowMouseOut ? this.handleRowMouseOut.bind(this, row) : null} />\r\n                        );\r\n                    })\r\n                }\r\n                </tbody>\r\n                {footer ? <tfoot><tr><td>{footer}</td></tr></tfoot> : null}\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default wireSet(Table, {\r\n    sort: {\r\n        changeHandlerName: 'onSort',\r\n        defaultValue: {}\r\n    },\r\n    selected: {\r\n        changeHandlerName: 'onSelectionChange',\r\n        defaultValue: ({selection={}})=>{\r\n            const {enabled, multiSelect=true} = selection\r\n            if (enabled) {\r\n                return multiSelect ? [] : ''\r\n            }\r\n            return ''\r\n        }\r\n    }\r\n})","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\n\r\nimport {wire} from '../hoc/prop-wire'\r\n\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/tabs')\r\n\r\n/**\r\n * A React Tabs view component\r\n * @constructor\r\n * @param {string} [id] - Tab dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {object} menu Tab menu config\r\n * @param {object} menu.key menu item config\r\n * @param {renderable} menu.key.title menu item title\r\n * @param {string} menu.key.disabled is menu item disabled (cannot select)?\r\n * @param {string} [defaultCurrent] - Default selected tab key\r\n * @param {string} [current] - Current selected tab key\r\n * @param {object} [currentLink] - Link to update selected tab key. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} currentLink.value - value to update\r\n * @param {function} currentLink.requestChange - function to request value change\r\n * @param {object} [defaultContents] - Key-node pair of what to display in each tab by default\r\n * @param {renderable} [children] - Current tab content\r\n * @param {function} [onChange] - Callback function when tab is selected. <br> Required when current prop is supplied\r\n * @param {string} onChange.value - selected tab key\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {string} onChange.eventInfo.before - previously selected tab\r\n *\r\n * @todo  Maybe don't need defaultContents??\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {Tabs} from 'react-ui'\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            currentTab:'movies'\r\n        }\r\n    },\r\n    handleTabChange(newTab) {\r\n        this.setState({currentTab: newTab})\r\n    },\r\n    renderMovies() {\r\n        return 'movie list'\r\n    },\r\n    renderActors() {\r\n        return 'actor list'\r\n    },\r\n    render() {\r\n        let {currentTab} = this.state;\r\n        return <Tabs id='imdb'\r\n            menu={{\r\n                movies: 'MOVIES',\r\n                actors: 'ACTORS',\r\n                tv: {title:'TV', disabled:true}\r\n            }}\r\n            current={currentTab}\r\n            onChange={this.handleTabChange}>\r\n            {\r\n                currentTab==='movies' ? this.renderMovies() : this.renderActors()\r\n            }\r\n        </Tabs>\r\n    }\r\n})\r\n */\r\nclass Tabs extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        menu: PropTypes.objectOf(\r\n            PropTypes.oneOfType([\r\n                PropTypes.string,\r\n                PropTypes.shape({\r\n                    title: PropTypes.node,\r\n                    disabled: PropTypes.bool\r\n                })\r\n            ])\r\n        ),\r\n        current: PropTypes.string,\r\n        defaultContents: PropTypes.objectOf(PropTypes.node),\r\n        children: PropTypes.node,\r\n        onChange: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        menu: {},\r\n        defaultContents: {}\r\n    };\r\n\r\n    handleTabChange = (evt) => {\r\n        let {onChange} = this.props\r\n\r\n        onChange(evt.currentTarget.id)\r\n    };\r\n\r\n    render() {\r\n        let {menu, current, defaultContents, id, className, children} = this.props\r\n\r\n        let defaultContent = defaultContents[current]\r\n\r\n        return (\r\n            <div id={id} className={cx('c-tabs', className)}>\r\n                <ol className='menu'>\r\n                    {\r\n                    _.map(menu, (item, key) => {\r\n                        let isCurrent = (key === current)\r\n                        let disabled = false\r\n                        let title = ''\r\n                        if (_.isString(item)) {\r\n                            title = item\r\n                        }\r\n                        else {\r\n                            title = item.title || key\r\n                            disabled = item.disabled\r\n                        }\r\n                        let tabClassName = {\r\n                            current: isCurrent,\r\n                            disabled\r\n                        }\r\n                        return <li\r\n                            id={key}\r\n                            key={key}\r\n                            className={cx(tabClassName)}\r\n                            onClick={isCurrent||disabled ? null : this.handleTabChange}>\r\n                            {title}\r\n                        </li>\r\n                    })\r\n                }\r\n                </ol>\r\n                <div id={current} className='tabContent'>\r\n                    { children || defaultContent }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default wire(Tabs, 'current')\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/text')\r\n\r\n/*\r\nlet isInParentView = function(el, parent) {\r\n    let rect = el.getBoundingClientRect();\r\n    let parent2 = parent.parentNode.getBoundingClientRect();\r\n    return (\r\n        rect.top > parent2.top &&\r\n        rect.bottom < parent2.bottm\r\n    );\r\n}*/\r\nclass Text extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.any,\r\n        maxLines: PropTypes.number,\r\n        line: PropTypes.number,\r\n        content: PropTypes.string,\r\n        store: PropTypes.any\r\n    };\r\n\r\n    static defaultProps = {\r\n        content: ''\r\n    };\r\n\r\n    state = {\r\n        line: this.props.line || -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.store) {\r\n            this.unsubscribe = this.props.store.listen((line) => {\r\n                this.setState({line})\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.line && nextProps.line !== this.state.line) {\r\n            this.setState({line:nextProps.line})\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextState.line !== this.state.line ||\r\n            nextProps.maxLines !== this.props.maxLines ||\r\n            nextProps.content !== this.props.content\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let selected = $(this.node).find('li.selected')[0]\r\n        if (!this.disableAutoScroll && selected/* && !isInParentView(selected, node)*/) {\r\n            this.autoScrollComingUp = true\r\n            selected.scrollIntoView(false)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.unsubscribe) {\r\n            this.unsubscribe()\r\n        }\r\n    }\r\n\r\n    onScroll = () => {\r\n        log.debug('onScroll')\r\n        if (!this.autoScrollComingUp) {\r\n            this.disableAutoScroll = true\r\n        }\r\n        this.autoScrollComingUp = false\r\n    };\r\n\r\n    renderListItem = (item, id) => {\r\n        return <li key={id} className={cx({selected:id===this.state.line})}>\r\n            <span className='line'>{id}.</span>\r\n            <span>{item}</span>\r\n        </li>\r\n    };\r\n\r\n    render() {\r\n        let {className, content, maxLines, id} = this.props\r\n        let lines = content.split('\\n')\r\n        let line = this.state.line\r\n        let start = 1\r\n        let end = lines.length\r\n\r\n        if (maxLines) {\r\n            start = Math.max(line-Math.floor(maxLines/2), 1)\r\n            end = start+maxLines-1\r\n            if (end > lines.length) {\r\n                start = Math.max(1, start-(end-lines.length))\r\n                end = lines.length\r\n            }\r\n            lines = lines.slice(start-1, end)\r\n        }\r\n\r\n\r\n        return <ul id={id} ref={ref=>{ this.node=ref }} className={cx('c-text', className)} onScroll={this.onScroll}>\r\n            {\r\n                _.map(lines, (val, i) => {\r\n                    return this.renderListItem(val, start+i)\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default Text","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {wireValue} from '../hoc/prop-wire'\r\n\r\n/**\r\n * A React Textarea\r\n * @constructor\r\n * @param {string} [id] - Textarea #id\r\n * @param {string} [name] - Textarea name\r\n * @param {string} [className] - Classname for the textarea\r\n * @param {string|number} [placeholder] - Placeholder for textarea\r\n * @param {number} [rows] - Visible number of lines in a textarea\r\n * @param {number} [cols] - Visible width of a textarea\r\n * @param {boolean} [readOnly=false] - Is this field readonly?\r\n * @param {boolean} [disabled=false] - Is this field disabled?\r\n * @param {number} [maxLength] - The maximum number of characters allowed in the textarea\r\n * @param {string|number} [value] - Current value\r\n * @param {boolean} [required=false] - Is this field mandatory?\r\n * @param {function} [onChange] - Callback function when value is changed. <br> Required when value prop is supplied\r\n *\r\n * @example\r\nimport {Textarea} from 'react-ui'\r\n\r\nExamples.Textarea = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            feedback: ''\r\n        }\r\n    },\r\n    handleChange(field, value) {\r\n        this.setState({[field]:value})\r\n    },\r\n    render() {\r\n        const {feedback} = this.state\r\n        return <div className='c-form inline'>\r\n            <div>\r\n                <label htmlFor='feedback'>Feedback</label>\r\n                <Textarea\r\n                    id='feedback'\r\n                    onChange={this.handleChange.bind(this, 'feedback')}\r\n                    value={feedback} />\r\n            </div>\r\n        </div>\r\n    }\r\n})\r\n */\r\n\r\nclass Textarea extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        this.props.onChange(e.target.value)\r\n    }\r\n    render() {\r\n        const {id, name, className, placeholder, rows, cols, readOnly, disabled, maxLength, required, value} = this.props\r\n\r\n        return <textarea\r\n            id={id}\r\n            name={name}\r\n            className={className}\r\n            placeholder={placeholder}\r\n            rows={rows}\r\n            cols={cols}\r\n            readOnly={readOnly}\r\n            disabled={disabled}\r\n            maxLength={maxLength}\r\n            value={value}\r\n            required={required}\r\n            onChange={this.handleChange} />\r\n    }\r\n}\r\n\r\nTextarea.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    className: PropTypes.string,\r\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    rows: PropTypes.number,\r\n    cols: PropTypes.number,\r\n    readOnly: PropTypes.bool,\r\n    disabled: PropTypes.bool,\r\n    maxLength: PropTypes.number,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    required: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nTextarea.defaultProps = {\r\n    id: '',\r\n    className: '',\r\n    value: ''\r\n}\r\n\r\nexport default wireValue(Textarea)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\n/**\r\n * React Tiles - view made up of tiles, could be used for laying out images, videos, div,\r\n * or any self defined components.\r\n *\r\n * Allow specifying:\r\n * * spacing between tiles\r\n * * max # tiles, or auto calculate # tiles based on container size and tile size\r\n *\r\n * || max=number | max=auto | max=undefined |\r\n * | :-- | :-- | :-- | :-- |\r\n * | itemSize has width+height| flex layout, display max. # tiles| calculate # tiles from item & container size| flex layout |\r\n * | itemSize undefined | flex layout, display max. # tiles| flex layout | flex layout |\r\n *\r\n * Restrictions:\r\n * * All items in a row must (or forced to) have same height\r\n * * width/height of individual tile specified in css will be ignored\r\n *\r\n * @alias module:Tiles\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {string|function} base - React class to use for rendering the tile, eg 'div', 'img', <SelfDefinedComponent/>\r\n * @param {array.<object>} items - Tiles supplied as props to base component\r\n * @param {string} items.id - tile id\r\n * @param {number} [items.width] - tile width\r\n * @param {number} [items.height] - tile height\r\n * @param {number} [total=items.length] - Total number of tiles available, if total>max, overlay will be rendered on last tile\r\n * @param {'auto' | number} [max] - Max number of tiles. If 'auto' will try to calculate max, if not specified, will display all tiles\r\n * @param {function | boolean} [overlay=true] - overlay render function to call if total > max\r\n * @param {number} overlay.max - configured or automatically calculated max # of tiles\r\n * @param {number} overlay.total - total # of tiles\r\n * @param {object} [itemProps] - Props for individual tile\r\n * @param {object} [itemSize] - Default tile size, will be overwritten by size specified in individual tiles\r\n * @param {number} [itemSize.width] - Default tile width\r\n * @param {number} [itemSize.height] - Default tile height\r\n * @param {number} [spacing=0] - Spacing (in px) between tiles\r\n * @param {'%' | 'px'} [unit='px'] - itemSize unit\r\n * @param {function} [onClick] - Function to call when clicked\r\n * @param {object} onClick.id - tile id clicked\r\n * @param {object} onClick.eventInfo - other event info\r\n * @param {number} onClick.eventInfo.index - current array index of clicked tile\r\n * @param {number} onClick.eventInfo.max - max (configured of auto calculated) # tiles\r\n * @param {number} onClick.eventInfo.total - total # tiles\r\n * @param {boolean} onClick.eventInfo.isLast - is the clicked event the last one of this bunch?\r\n * @param {function} [onMouseOver] - Function to call when mouse over, see onClick for callback function spec\r\n * @param {function} [onMouseOut] - Function to call when mouse out, see onClick for callback function spec\r\n *\r\n *\r\n * @example\r\nimport {Tiles, Popover} from 'react-ui'\r\nimport _ from 'lodash'\r\n\r\nconst IMAGES = [\r\n    'bs', 'camera', 'car', 'drug', 'email', 'fb_messenger', 'goods',\r\n    'gun', 'home', 'ic_airplane', 'ic_alert_2', 'ic_bs',\r\n    'ic_cam_2', 'ic_cam_3', 'ic_car_2', 'ic_case', 'ic_creditcard', 'ic_database', 'ic_drug',\r\n    'ic_email', 'ic_etag', 'ic_etag_gate', 'ic_globe', 'ic_goods', 'ic_gun', 'ic_help', 'ic_home', 'ic_info', 'ic_ip',\r\n    'ip', 'landline', 'line', 'mobile', 'parking', 'person'\r\n]\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            selected: null,\r\n            max: null,\r\n            isLast: false,\r\n            hasMore: false\r\n        }\r\n    },\r\n    handleClick(id, {index, max, total, isLast}) {\r\n        this.setState({\r\n            selected: id,\r\n            max,\r\n            isLast,\r\n            hasMore: total>max\r\n        })\r\n    },\r\n    openPopover(id, data, evt) {\r\n        Popover.openId(\r\n            'my-popover-id',\r\n            evt,\r\n            <div className='c-box'>\r\n                <header>{id}</header>\r\n                <div className='content c-result aligned'>\r\n                    {\r\n                        _.map(data, (v,k)=><div key={k}>\r\n                            <label>{k}</label>\r\n                            <div>{v+''}</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </div>,\r\n            {pointy:true}\r\n        )\r\n    },\r\n    closePopover() {\r\n        Popover.closeId('my-popover-id')\r\n    },\r\n    render() {\r\n        return <Tiles id='auto'\r\n            base='img'\r\n            itemSize={{\r\n                width:30,\r\n                height:20\r\n            }}\r\n            unit='%'\r\n            spacing={5}\r\n            items={_.map(IMAGES, item=>({id:item, src:`/images/tiles/${item}.png`}))}\r\n            max='auto'\r\n            onClick={this.handleClick}\r\n            onMouseOver={this.openPopover}\r\n            onMouseOut={this.closePopover} />\r\n    }\r\n})\r\n */\r\n\r\nclass Tiles extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        base: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\r\n        items: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string,\r\n            width: PropTypes.number,\r\n            height: PropTypes.number\r\n        })).isRequired,\r\n        total: PropTypes.number,\r\n        max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n        overlay: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\r\n        itemProps: PropTypes.object,\r\n        itemSize: PropTypes.shape({\r\n            width: PropTypes.number,\r\n            height: PropTypes.number\r\n        }),\r\n        spacing: PropTypes.number,\r\n        unit: PropTypes.oneOf(['%', 'px']),\r\n        onClick: PropTypes.func,\r\n        onMouseOver: PropTypes.func,\r\n        onMouseOut: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        items: [],\r\n        overlay: true,\r\n        itemProps: {},\r\n        spacing: 0,\r\n        unit: 'px'\r\n    };\r\n\r\n    state = {\r\n        containerWidth: 0,\r\n        containerHeight: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.updateDimension)\r\n        this.updateDimension()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimension)\r\n    }\r\n\r\n    updateDimension = () => {\r\n        const {width:containerWidth, height:containerHeight} = this.node.getBoundingClientRect()\r\n        this.setState({\r\n            containerHeight,\r\n            containerWidth\r\n        })\r\n    };\r\n\r\n    renderItem = (item, index, {width, height}, max, columns) => {\r\n        const {base, items, itemProps, spacing, overlay, onClick, onMouseOver, onMouseOut} = this.props\r\n        const {id:itemId} = item\r\n\r\n        const tileStyle = {\r\n            height: `${height}px`,\r\n            width: `${width}px`,\r\n            marginTop: (index <= columns - 1) ? 0 : `${spacing}px`, // only items in first row do not have top margin\r\n            marginLeft: (index % columns === 0) ? 0 : `${spacing}px`, // only items in first column do not have left margin\r\n            marginRight: 0,\r\n            marginBottom: 0\r\n        }\r\n\r\n        const isLast = index===(max-1)\r\n        const tile = React.createElement(base, {\r\n            ...itemProps,\r\n            ...item\r\n        })\r\n\r\n        // For last tile's overlay\r\n        const total = _.has(this.props, 'total') ? this.props.total : items.length\r\n        const tileOverlay = isLast && total>max && overlay ? this.renderOverlay(overlay, max, total) : null\r\n\r\n        const eventArgs = [itemId, {index, max, total, isLast}]\r\n\r\n        return <div\r\n            key={`tile-${itemId}`}\r\n            className={cx('tile-wrapper c-flex aic jcc', {last:isLast})}\r\n            style={tileStyle}\r\n            onClick={onClick ? onClick.bind(null, ...eventArgs) : null}\r\n            onMouseOver={onMouseOver ? onMouseOver.bind(null, ...eventArgs) : null}\r\n            onMouseOut={onMouseOut ? onMouseOut.bind(null, ...eventArgs) : null} >\r\n            {tile}\r\n            {tileOverlay}\r\n        </div>\r\n    };\r\n\r\n    renderOverlay = (overlay, max, total) => {\r\n        return <span className='tile-overlay c-flex aic jcc'>\r\n            {\r\n                _.isFunction(overlay)\r\n                    ? overlay(max-1, total)\r\n                    : `+${total - max + 1}`\r\n            }\r\n        </span>\r\n    };\r\n\r\n    render() {\r\n        const {id, className, items, itemSize:{width:itemWidth, height:itemHeight}, max, unit, spacing} = this.props\r\n        const {containerWidth, containerHeight} = this.state\r\n\r\n        // Calculate the width and height by ratio when unit is '%'\r\n        const tileSize = {\r\n            height: unit === '%' ? Math.floor(containerHeight / 100 * itemHeight) : itemHeight,\r\n            width: unit === '%' ? Math.floor(containerWidth / 100 * itemWidth) : itemWidth\r\n        }\r\n\r\n        // number of row/column of tiles\r\n        const rows = Math.floor((containerHeight + spacing) / (tileSize.height + spacing))\r\n        const columns = Math.floor((containerWidth + spacing) / (tileSize.width + spacing))\r\n        const maxTiles = max === 'auto' ? (columns * rows) : max\r\n        this.maxTiles = maxTiles\r\n\r\n        return <div\r\n            id={id}\r\n            className={cx('c-tiles c-flex aic jcc acc fww', className)}\r\n            ref={ref => { this.node = ref }} >\r\n            {\r\n                _(items)\r\n                    .slice(0, maxTiles)\r\n                    .map((el, i) => this.renderItem(el, i, tileSize, maxTiles, columns))\r\n                    .value()\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Tiles","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\n\r\n/**\r\n * A React Timeline\r\n * @todo  Auto time traversal??\r\n *\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {number} [defaultTime] - Default current time\r\n * @param {number} [time] - Current time (center of timeline)\r\n * @param {object} [timeLink] - Link to update time. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} timeLink.value - value to update\r\n * @param {function} timeLink.requestChange - function to request value change\r\n * @param {function} [onTimeChange] - Callback function when value is selected. <br> Required when value prop is supplied\r\n * @param {number} onTimeChange.value - selected value\r\n * @param {object} onTimeChange.eventInfo - event related info\r\n * @param {number} onTimeChange.eventInfo.before - previously selected value\r\n * @param {boolean} [onTimeChange.eventInfo.byUser=false] - triggered by user?\r\n * @param {number} [defaultInterval] - Default interval config\r\n * @param {number} [interval] - Current interval config\r\n * @param {object} [intervalLink] - Link to update interval. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} intervalLink.value - interval to update\r\n * @param {function} intervalLink.requestChange - function to request interval change\r\n * @param {function} [onIntervalChange] - Callback function when interval is changed. <br> Required when interval prop is supplied\r\n * @param {number} onIntervalChange.value - current interval object\r\n * @param {object} onIntervalChange.eventInfo - event related info\r\n * @param {number} onIntervalChange.eventInfo.before - previous interval object\r\n * @param {array.<object>} eventGroups - Group config\r\n * @param {string | number} eventGroups.id - Group id\r\n * @param {renderable} [eventGroups.label] - Group label\r\n * @param {array.<object>} [events] - List of events\r\n * @param {string | number} events.id - event id\r\n * @param {renderable} [events.label=id] - event label\r\n * @param {number} events.start - event start time\r\n * @param {number} [events.end=start] - event end time\r\n * @param {string | number} [events.group] - event group id\r\n * @param {boolean | string} [move=['month','day','hour']] - Can timeline be moved by user?\r\n * @param {boolean} [zoom=false] - Can timeline be zoomed?\r\n * @param {boolean} [autoRun=false] - Automatic running time\r\n *\r\n * @example\r\nimport {Timeline} from 'react-ui'\r\n\r\n// controlled with events and zooming\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            time: 60000,\r\n            interval: 60000\r\n        }\r\n    },\r\n    handleTimeChange(time, {byUser}) {\r\n        this.setState({time})\r\n    },\r\n    handleIntervalChange(interval) {\r\n        this.setState({interval})\r\n    },\r\n    render() {\r\n        let {time, interval} = this.state\r\n        return <div>\r\n            <label>Drag or select a Time</label>\r\n            <Timeline id='timeline'\r\n                className='customize-timeline'\r\n                time={time}\r\n                onTimeChange={this.handleTimeChange}\r\n                interval={interval}\r\n                onIntervalChange={this.handleIntervalChange}\r\n                eventGroups={[\r\n                    {id:'x',label:'X'},\r\n                    {id:'y',label:'Y'}\r\n                ]}\r\n                events={[\r\n                    {id:'a',time:60},\r\n                    {id:'b',label:'B',start:60,group:'x'},\r\n                    {id:'c',label:'C',start:120,group:'y'}\r\n                ]}\r\n                autoRun\r\n                zoom/>\r\n        </div>\r\n    }\r\n})\r\n\r\n// simulates a movie player, can only move time not interval\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            time: 0\r\n        }\r\n    },\r\n    handleTimeChange(time) {\r\n        this.setState({time})\r\n    },\r\n    render() {\r\n        let {time} = this.state\r\n        return <div>\r\n            <label>Drag or select a Time</label>\r\n            <Timeline\r\n                time={time}\r\n                onTimeChange={this.handleTimeChange}\r\n                interval={{min:0, max:3600}}\r\n                traverse={false}/>\r\n        </div>\r\n    }\r\n})\r\n */\r\n\r\n\r\nclass Timeline extends Component {\r\n    render() {\r\n        return (\r\n            <div />\r\n        )\r\n    }\r\n}\r\n\r\nTimeline.propTypes = {\r\n    id: PropTypes.string,\r\n    className: PropTypes.string,\r\n    time: PropTypes.number,\r\n    onTimeChange: PropTypes.func,\r\n    interval: PropTypes.number,\r\n    onIntervalChange: PropTypes.func,\r\n    eventGroups: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]),\r\n        label: PropTypes.element\r\n    })),\r\n    events: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.element,\r\n        start: PropTypes.number,\r\n        end: PropTypes.number,\r\n        group: PropTypes.oneOfType([\r\n            PropTypes.number, PropTypes.string\r\n        ])\r\n    })),\r\n    zoom: PropTypes.bool,\r\n    autoRun: PropTypes.bool\r\n}\r\n\r\nexport default Timeline","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport cx from 'classnames'\r\nimport $ from 'jquery'\r\n\r\nimport {wire} from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/toggle-button')\r\n\r\n/**\r\n * A React toggle button\r\n * @constructor\r\n * @param {string} [id] - Container dom element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {boolean} [defaultOn] - Default on value\r\n * @param {boolean} [on=false] - Current on value\r\n * @param {object} [onLink] - Link to update check value. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {*} onLink.value - value to update\r\n * @param {function} onLink.requestChange - function to request check value change\r\n * @param {boolean} [disabled=false] - Is toggle button disabled?\r\n * @param {function} onChange  - Callback function when toggle on/off. <br> Required when value prop is supplied\r\n * @param {boolean} onChange.on - on?\r\n * @param {object} onChange.eventInfo - event related info\r\n * @param {boolean} onChange.eventInfo.before - was on or off?\r\n * @param {string} [onText] - Text shown in toggle when the toggle is turned on\r\n * @param {string} [offText] - Text shown in toggle when the toggle is turned off\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport {ToggleButton} from 'react-ui'\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {subscribe:false}\r\n    },\r\n    handleChange(subscribe) {\r\n        this.setState({subscribe})\r\n    },\r\n    render() {\r\n        let {subscribe} = this.state\r\n        return <div className='c-flex aic'>\r\n            <label htmlFor='subscribe'>Would you like to subscribe to this newsletter?</label>\r\n            <ToggleButton id='subscribe'\r\n                onChange={this.handleChange}\r\n                on={subscribe}/>\r\n        </div>\r\n    }\r\n})\r\n */\r\nclass ToggleButton extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        on: PropTypes.bool,\r\n        disabled: PropTypes.bool,\r\n        onChange: PropTypes.func,\r\n        onText: PropTypes.string,\r\n        offText: PropTypes.string\r\n    };\r\n\r\n    static defaultProps = {\r\n        disabled: false,\r\n        on: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.id && !this.props.disabled) {\r\n            this.getLabelForToggle().on('click', () => {\r\n                this.handleChange()\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.getLabelForToggle().off()\r\n    }\r\n\r\n    getLabelForToggle = () => {\r\n        return $(this.node).parent().find('label[for=\"'+this.props.id+'\"]')\r\n    };\r\n\r\n    handleChange = () => {\r\n        let {onChange, on} = this.props\r\n        onChange(!on)\r\n    };\r\n\r\n    render() {\r\n        let {id, className, on, disabled, onText, offText} = this.props\r\n\r\n        return (\r\n            <div id={id} ref={ref=>{ this.node=ref }} className={cx('c-toggle-btn', {disabled}, className)}>\r\n                <input\r\n                    type='checkbox'\r\n                    onChange={disabled ? null : this.handleChange}\r\n                    checked={on}\r\n                    disabled={disabled} />\r\n                <div>\r\n                    <label htmlFor={id} className='on'>{onText}</label>\r\n                    <label htmlFor={id} className='off'>{offText}</label>\r\n                    <span />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default wire(ToggleButton, 'on', false)","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\nimport cx from 'classnames'\r\n\r\nimport {wireSet} from '../hoc/prop-wire'\r\n\r\nlet log = require('loglevel').getLogger('react-ui/components/tree')\r\n\r\n/**\r\n * A React Tree Component.\r\n *\r\n * * Currently supports only single select\r\n *\r\n * @constructor\r\n * @param {string} [id] - Tree element #id\r\n * @param {string} [className] - Classname for the container\r\n * @param {object} [data={}] - Data to fill tree with\r\n * @param {string} [data.id] - node id. Note if top level id is not specified, then root node will not be displayed\r\n * @param {renderable} [data.label] - node label\r\n * @param {array<data>} [data.children] - children of the node (can be defined recursively)\r\n * @param {boolean} [allowToggle=true] - Allow toggle? If false all tree structure will show\r\n * @param {string} [selected] - Current selected node id\r\n * @param {string} [defaultSelected] - Default selected node id\r\n * @param {object} [selectedLink] - link to update selected node id. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {string} selectedLink.value - value to update\r\n * @param {function} selectedLink.requestChange - function to request selection change\r\n * @param {function} [onSelect] - Callback function when selection is changed. <br> Required when selected prop is supplied\r\n * @param {string} onSelect.value - current selected node id\r\n * @param {object} onSelect.eventInfo - event related info\r\n * @param {string} onSelect.eventInfo.before - previously selected node id\r\n * @param {array} onSelect.eventInfo.path - selected node in the form of path (array), with id & child index\r\n * @param {array<string>} [opened] - Current opened node ids\r\n * @param {array<string>} [defaultOpened] - Default opened node ids\r\n * @param {object} [openedLink] - link to update opened node ids. Used in conjuction with [linked-state-mixins]{@link module:linked-state-mixins}\r\n * @param {array<string>} openedLink.value - value to update\r\n * @param {function} openedLink.requestChange - function to request open change\r\n * @param {function} [onToggleOpen] - Callback function when open is changed. <br> Required when opened prop is supplied\r\n * @param {array<string>} onToggleOpen.value - current opened node ids\r\n * @param {object} onToggleOpen.eventInfo - event related info\r\n * @param {array<string>} onToggleOpen.eventInfo.before - previously opened node ids\r\n * @param {string} onToggleOpen.eventInfo.id - triggering id\r\n * @param {boolean} onToggleOpen.eventInfo.open - triggered by opening?\r\n * @param {array<string>} onToggleOpen.eventInfo.path - selected node in the form of path (array), with id & child index\r\n *\r\n * @example\r\n// controlled\r\n\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\nimport {Tree} from 'react-ui'\r\n\r\nconst INITIAL_DATA = {\r\n    id:'home',\r\n    label:'Home',\r\n    children:[\r\n        {\r\n            id:'C', label:'C - click to load children dynamically',\r\n            children:[]\r\n        },\r\n        {\r\n            id:'A',\r\n            children: [\r\n                {\r\n                    id:'A.a',\r\n                    children: [\r\n                        {id:'A.a.1'},\r\n                        {\r\n                            id:'A.a.2',\r\n                            children:[\r\n                                {id:'A.a.2.x'},\r\n                                {id:'A.a.2.y'}\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id:'B', label:'B',\r\n            children: [\r\n                {id:'B.a', label:'B.a custom label'},\r\n                {id:'B.b', label:'B.b custom label'}\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nReact.createClass({\r\n    getInitialState() {\r\n        return {\r\n            allowToggle:true,\r\n            selected:'A.a',\r\n            data:INITIAL_DATA\r\n        }\r\n    },\r\n    toggleAll() {\r\n        let {allowToggle} = this.state;\r\n        this.setState({allowToggle: !allowToggle})\r\n    },\r\n    selectEntry(selected, eventData) {\r\n        this.setState({selected})\r\n    },\r\n    toggleOpen(opened, eventData) {\r\n        let {id, open, path} = eventData;\r\n\r\n        if (id === 'C' && open) {\r\n            let setPath = (_(path).map(p=>p.index).tail().map(p=>'children.'+p).value()).join('.')+'.children'\r\n\r\n            console.log(`loading more data for ${id}: ${setPath}`)\r\n\r\n            let newData = im.set(this.state.data, setPath, [\r\n                {id:'C.a'},\r\n                {id:'C.b'}\r\n            ])\r\n            this.setState({data:newData})\r\n        }\r\n    },\r\n    render() {\r\n        let {data, selected, allowToggle} = this.state;\r\n\r\n        return <div>\r\n            <button onClick={this.toggleAll}>{allowToggle?'Disable':'Enable'} toggle</button>\r\n            <Tree\r\n                data={data}\r\n                allowToggle={allowToggle}\r\n                selected={selected}\r\n                defaultOpened={['home','A']}\r\n                onToggleOpen={this.toggleOpen}\r\n                onSelect={this.selectEntry}/>\r\n        </div>\r\n    }\r\n});\r\n */\r\nclass Tree extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        className: PropTypes.string,\r\n        data: PropTypes.shape({\r\n            id: PropTypes.string,\r\n            label: PropTypes.node,\r\n            children: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    id: PropTypes.string.isRequired,\r\n                    label: PropTypes.node,\r\n                    children: PropTypes.array\r\n                })\r\n            )\r\n        }),\r\n        allowToggle: PropTypes.bool, // when false, will overwrite opened config, since full tree will always be opened (opened=true)\r\n        selected: PropTypes.string,\r\n        onSelect: PropTypes.func,\r\n        opened: PropTypes.arrayOf(PropTypes.string),\r\n        onToggleOpen: PropTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: {},\r\n        allowToggle: true,\r\n        opened: []\r\n    };\r\n\r\n    selectNode = (id, isBranch, path) => {\r\n        let {allowToggle, onSelect, opened, onToggleOpen} = this.props\r\n\r\n        if (isBranch && allowToggle) {\r\n            let idIndex = _.findIndex(opened, item => item===id)\r\n            let open = idIndex < 0\r\n\r\n            let newOpened = (\r\n                open ?\r\n                    [...opened, id]:\r\n                    im.del(opened, idIndex)\r\n            )\r\n            onToggleOpen(newOpened, {open, id, path})\r\n        }\r\n\r\n        // to resolve onToggleOpen & onSelect setState conflict (onSelect will overwrite onToggleOpen's state)\r\n        // use timeout\r\n        // TODO: think of better way to address\r\n        setTimeout(()=>{\r\n            onSelect(id, {path})\r\n        }, 0)\r\n    };\r\n\r\n    renderNode = (id, isBranch, label, openBranch, path) => {\r\n        let {selected, allowToggle} = this.props\r\n        let isSelected = id===selected\r\n\r\n        return <span\r\n            className={cx(isBranch?'branch':'leaf', {selected:isSelected})}\r\n            onClick={this.selectNode.bind(this, id, isBranch, path)}>\r\n            {\r\n                    isBranch && allowToggle ? <span>\r\n                        [<i className={cx('fg', openBranch?'fg-less':'fg-add')} />]\r\n                        <span className='label'>{(label || id)}</span>\r\n                    </span> :\r\n                    (label || id)\r\n                }\r\n        </span>\r\n    };\r\n\r\n    renderTree = (root, parentPath, index) => {\r\n        let {allowToggle, opened} = this.props\r\n        let {id, label, children} = root\r\n\r\n        if (!id) {\r\n            log.error('renderTree::A child without id')\r\n            return null\r\n        }\r\n\r\n        let currentPath = [...parentPath, {id, index}]\r\n\r\n        if (children) {\r\n            let shouldOpen = !allowToggle || _.find(opened, item=>item===id)\r\n\r\n            return <li key={id}>\r\n                {\r\n                    this.renderNode(id, true, label, shouldOpen, currentPath)\r\n                }\r\n                {\r\n                    shouldOpen ?\r\n                        <ul>\r\n                            {\r\n                        _.map(children, (child, i) => {\r\n                            return this.renderTree(child, currentPath, i)\r\n                        })\r\n                    }\r\n                        </ul> : null\r\n                }\r\n            </li>\r\n        }\r\n        else {\r\n            return <li key={id}>\r\n                {\r\n                    this.renderNode(id, false, label, false, currentPath)\r\n                }\r\n            </li>\r\n        }\r\n    };\r\n\r\n    // TODO: allow customizing leaf node and parent nodes\r\n    render() {\r\n        let {id, data, className} = this.props\r\n        let {id:rootId} = data\r\n\r\n        return <ul id={id} className={cx('c-tree', className)}>\r\n            {\r\n                rootId ?\r\n                this.renderTree(data, []) :\r\n                _.map(data.children, (item, i) => {\r\n                    return this.renderTree(item, [], i)\r\n                })\r\n            }\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default wireSet(Tree, {\r\n    selected: {defaultValue:'', changeHandlerName:'onSelect'},\r\n    opened: {defaultValue:[], changeHandlerName:'onToggleOpen'}\r\n})","/**\r\n * @module prop-types\r\n * @desc Defines commonly used prop types, as well as prop type generators\r\n */\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\n\r\n/**\r\n * A Simple value prop\r\n * @typedef {number | string} SIMPLE_VALUE_PROP\r\n */\r\nexport const SIMPLE_VALUE_PROP =\r\n    PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ])\r\n\r\n/**\r\n * An array of simple values prop\r\n * @typedef {SIMPLE_VALUE_PROP[]} SIMPLE_ARRAY_PROP\r\n * @example [1,2,3]\r\n * @example ['1','2']\r\n */\r\nexport const SIMPLE_ARRAY_PROP =\r\n    PropTypes.arrayOf(SIMPLE_VALUE_PROP)\r\n\r\n\r\n/**\r\n * An object of simple values prop\r\n * @typedef {Object.<SIMPLE_VALUE_PROP>} SIMPLE_OBJECT_PROP\r\n * @example {key1:1, key2:'val2'}\r\n */\r\nexport const SIMPLE_OBJECT_PROP =\r\n    PropTypes.objectOf(SIMPLE_VALUE_PROP)\r\n\r\n\r\n/**\r\n * A Renderable List\r\n * @typedef {Array<Object.<value:SIMPLE_VALUE_PROP, text:SIMPLE_VALUE_PROP>>} LIST_PROP\r\n * @example [{value:2,text:'this is 2'}]\r\n */\r\nexport const LIST_PROP =\r\n    PropTypes.arrayOf(PropTypes.shape({\r\n        value: SIMPLE_VALUE_PROP,\r\n        text: SIMPLE_VALUE_PROP,\r\n        children: PropTypes.node\r\n    }))","import _ from 'lodash'\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/hoc/list-normalizer')\r\n\r\n\r\nexport function normalize(Component, listPropName='list', transformPropName='listTransform', fields=['value', 'text']) {\r\n    return class extends React.Component {\r\n        static propTypes = {\r\n            [transformPropName]: PropTypes.object,\r\n            [listPropName]: PropTypes.array\r\n        };\r\n\r\n        render() {\r\n            const {[transformPropName]:transform, [listPropName]:listToTransform} = this.props\r\n            if (!transform) {\r\n                return React.createElement(Component, {\r\n                    ...this.props,\r\n                    ref: ref=>{ this._component=ref }\r\n                })\r\n            }\r\n\r\n            const transformCfg = {\r\n                ..._.reduce(fields, (acc, field)=>({...acc, [field]:field}), {}), // make sure all fields are pre-filled with defaults\r\n                ...transform\r\n            }\r\n\r\n            return React.createElement(Component, {\r\n                ..._.omit(this.props, transformPropName),\r\n                [listPropName]: _.map(listToTransform, item=>_.mapKeys(item, (v, k)=>_.get(_.invert(transformCfg), k))),\r\n                ref: ref=>{ this._component=ref }\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nexport default normalize","import _ from 'lodash'\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react'\r\n\r\nimport PageNav from '../components/page-nav'\r\nimport {wireSet} from './prop-wire'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/hoc/paginator')\r\n\r\nexport function withPaginate(Component, options={}) {\r\n    const {\r\n        target='data'\r\n    } = options\r\n\r\n    const propTypes = {\r\n        [target]: PropTypes.array,\r\n        paginate: PropTypes.shape({\r\n            wrapperClassName: PropTypes.string,\r\n            pageSize: PropTypes.number,\r\n            pages: PropTypes.number,\r\n            current: PropTypes.number,\r\n            thumbnails: PropTypes.number,\r\n            className: PropTypes.string,\r\n            onChange: PropTypes.func\r\n        })\r\n    }\r\n\r\n    return wireSet(class extends React.Component {\r\n        static propTypes = propTypes;\r\n\r\n        static defaultProps = {\r\n            paginate: {}\r\n        };\r\n\r\n        render() {\r\n            const {\r\n                paginate,\r\n                [target]: data\r\n            } = this.props\r\n\r\n            const {\r\n                enabled: enablePagination=true,\r\n                pageSize=30,\r\n                wrapperClassName,\r\n                ...pageNavProps\r\n            } = paginate\r\n\r\n            if (enablePagination===false) {\r\n                return <Component\r\n                    {..._.omit(this.props, 'paginate')}\r\n                    ref={ref=>{ this._component=ref }} />\r\n            }\r\n\r\n            let {pages} = paginate\r\n            let propsToPass = _.omit(this.props, ['paginate'])\r\n            if (!pages) {\r\n                const {current} = pageNavProps\r\n                const total = data.length\r\n                pages = Math.ceil(total/pageSize)\r\n                propsToPass[target] = _.slice(data, (current-1)*pageSize, current*pageSize)\r\n            }\r\n\r\n            return <div className={wrapperClassName}>\r\n                <Component\r\n                    {...propsToPass}\r\n                    ref={ref=>{ this._component=ref }} />\r\n                {pages > 1 && <PageNav\r\n                    className='c-flex jcc c-margin'\r\n                    pages={pages}\r\n                    {...pageNavProps} />\r\n                }\r\n            </div>\r\n        }\r\n    }, {\r\n        paginate: {\r\n            name: 'paginate.current',\r\n            defaultName: 'paginate.defaultCurrent',\r\n            defaultValue: 1,\r\n            changeHandlerName: 'paginate.onChange'\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport default withPaginate","import _ from 'lodash'\r\nimport React from 'react'\r\nimport im from 'object-path-immutable'\r\n\r\nconst log = require('loglevel').getLogger('react-ui/hoc/prop-wire')\r\n\r\n\r\nexport function wireSet(Component, propsCfg) {\r\n    propsCfg = _.mapValues(propsCfg, (cfg, propName)=>{\r\n        const {name=propName, linkName, defaultName, changeHandlerName, defaultValue, enforceHandler=true} = cfg\r\n        return {\r\n            name,\r\n            linkName: linkName || propName+'Link',\r\n            defaultName: defaultName || 'default'+_.capitalize(propName),\r\n            changeHandlerName: changeHandlerName || 'on'+_.capitalize(propName)+'Change',\r\n            defaultValue: _.has(cfg, 'defaultValue') ? defaultValue : '',\r\n            enforceHandler\r\n        }\r\n    })\r\n\r\n    return class extends React.Component {\r\n        state = _.mapValues(propsCfg, ({name, linkName, defaultName, defaultValue:masterDefaultValue}) => {\r\n            let val = _.get(this.props, name)\r\n            const valueLink = _.get(this.props, linkName)\r\n            const defaultValue = _.get(this.props, defaultName)\r\n\r\n            if (val==null && valueLink) {\r\n                val = valueLink.value\r\n            }\r\n            if (val == null) {\r\n                val = defaultValue\r\n            }\r\n\r\n            if (val == null) {\r\n                if (_.isFunction(masterDefaultValue)) {\r\n                    val = masterDefaultValue(this.props)\r\n                }\r\n                else {\r\n                    val = masterDefaultValue\r\n                }\r\n            }\r\n\r\n            return val\r\n        });\r\n\r\n        componentWillReceiveProps(nextProps) {\r\n            const nextState = _.mapValues(propsCfg, ({name, linkName, defaultName, defaultValue:masterDefaultValue}, propName) => {\r\n                const isControlled = _.has(nextProps, name)\r\n\r\n                let val = _.get(nextProps, name)\r\n                const valueLink = _.get(nextProps, linkName)\r\n                const defaultValue = _.get(nextProps, defaultName)\r\n\r\n                let {[propName]:curVal} = this.state\r\n\r\n                if (val==null && valueLink) {\r\n                    val = valueLink.value\r\n                }\r\n\r\n                if (val == null) {\r\n                    if (isControlled) {\r\n                        val = defaultValue\r\n\r\n                        if (val == null) {\r\n                            if (_.isFunction(masterDefaultValue)) {\r\n                                val = masterDefaultValue(nextProps)\r\n                            }\r\n                            else {\r\n                                val = masterDefaultValue\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        val = curVal\r\n                    }\r\n                }\r\n\r\n                return val\r\n            })\r\n\r\n            this.setState(nextState)\r\n        }\r\n\r\n        handleChange = (propName, newVal, eventInfo) => {\r\n            const {name, linkName, changeHandlerName, enforceHandler} = propsCfg[propName]\r\n            const isControlled = _.has(this.props, name)\r\n            const valueLink = _.get(this.props, linkName)\r\n            const handler = _.get(this.props, changeHandlerName)\r\n\r\n            const eventData = {\r\n                before: this.state[propName],\r\n                ...eventInfo\r\n            }\r\n\r\n            if (isControlled && handler) {\r\n                handler(newVal, eventData)\r\n            }\r\n            else if (isControlled && !handler && enforceHandler) {\r\n                log.error(`handleChange::${Component.displayName}::${propName}. Controlled component without a '${JSON.stringify(changeHandlerName)}' event prop`)\r\n            }\r\n            else if (valueLink) {\r\n                valueLink.requestChange(newVal, eventData)\r\n            }\r\n            else {\r\n                this.setState({[propName]:newVal}, () => {\r\n                    if (handler) {\r\n                        handler(this.state[propName], eventData)\r\n                    }\r\n                })\r\n            }\r\n        };\r\n\r\n        render() {\r\n            const propsToIgnore = _.reduce(propsCfg, (acc, {name, linkName, defaultName, changeHandlerName})=>{\r\n                return [\r\n                    ...acc,\r\n                    name,\r\n                    linkName,\r\n                    defaultName,\r\n                    changeHandlerName\r\n                ]\r\n            }, [])\r\n\r\n            const baseProps = _.omit(this.props, propsToIgnore)\r\n\r\n            const newProps = _.reduce(propsCfg, (acc, {name, changeHandlerName}, propName)=>{\r\n                return im(acc)\r\n                    .set(name, this.state[propName])\r\n                    .set(changeHandlerName, this.handleChange.bind(this, propName))\r\n                    .value()\r\n            }, baseProps)\r\n\r\n            return React.createElement(Component, {\r\n                ...newProps,\r\n                ref: ref=>{ this._component=ref }\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nexport function wire(Component, propName, defaultValue='', changeHandlerName='onChange') {\r\n    return wireSet(Component, {\r\n        [propName]: {\r\n            defaultValue,\r\n            changeHandlerName\r\n        }\r\n    })\r\n}\r\n\r\nexport function wireValue(Component) {\r\n    return wire(Component, 'value')\r\n}\r\n\r\nexport function wireChecked(Component) {\r\n    return wire(Component, 'checked', false)\r\n}\r\n\r\nexport default {\r\n    wireValue,\r\n    wireChecked,\r\n    wire\r\n}","/**\r\n  * @module linked-state-mixins\r\n  * @description Input mixin methods for React components.\r\n  */\r\n\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\n\r\nlet log = require('loglevel').getLogger('core/mixins/linked-state-mixins')\r\n\r\n/**\r\n * Mixin methods for React components. <br>\r\n * Used for linking input value with component's state\r\n *\r\n * @mixin\r\n * @todo Change this into HOC or pure js module, to avoid prerequisites\r\n */\r\nexport const LinkedStateMixin = {\r\n    requestChange(field, newValue) {\r\n        this.setState({[field]:newValue})\r\n    },\r\n    linkState(field) {\r\n        let value = _.get(this.state, field, null)\r\n\r\n        return {\r\n            requestChange: this.requestChange.bind(this, field),\r\n            value\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Mixin methods for React components. <br>\r\n * Used for linking input value with component's NESTED state\r\n *\r\n * @mixin\r\n * @todo Change this into HOC or pure js module, to avoid prerequisites\r\n */\r\nexport const LinkedDeepStateMixin = {\r\n    requestDeepChange(field, newValue) {\r\n        this.setState(im.set(this.state, field, newValue))\r\n    },\r\n    linkDeepState(field) {\r\n        let value = _.get(this.state, field, null)\r\n\r\n        return {\r\n            requestChange: this.requestDeepChange.bind(this, field),\r\n            value\r\n        }\r\n    }\r\n}","/**\r\n  * @module ajax-helper\r\n  * @description Ajax utilities for request\r\n  */\r\n\r\nimport _ from 'lodash'\r\nimport Promise from 'bluebird'\r\nimport $ from 'jquery'\r\nimport path from 'path'\r\n\r\nimport Progress from '../components/progress'\r\nimport {default as globalEh, createInstance as createEh} from './error-helper'\r\n\r\nconst log = require('loglevel').getLogger('core/utils/ajax-helper')\r\n\r\nconst defaultFailParser = (json, text)=>{\r\n    if (json) {\r\n        const {code, message, errors} = json\r\n        return {\r\n            code,\r\n            message,\r\n            errors\r\n        }\r\n    }\r\n\r\n    if (text) {\r\n        return {\r\n            message: text\r\n        }\r\n    }\r\n\r\n    return {}\r\n}\r\n\r\nconst defaultSuccessParser = (json)=>{\r\n    return json\r\n}\r\n\r\nconst defaultGt = (code)=>{\r\n    const mapping = {\r\n        'txt-uploading': 'Uploading...',\r\n        'txt-uploaded': 'Done'\r\n    }\r\n    return mapping[code] || code\r\n}\r\n\r\n\r\n/**\r\n * Send one ajax request\r\n * @param {string|Object} req - url string or jquery request object\r\n * @param {Object} [options] - options\r\n * @param {boolean} [options.showProgress=true] - whether blocking spinner will be shown during request (before response is received)\r\n * @param {string} [options.prefix] - prefix to prepend to requested url\r\n * @param {function} [options.parseFail] - parse function to return error data {code,message,errors} upon receiving error\r\n * @param {function} [options.parseSuccess] - parse function to return data upon successfully receiving response\r\n * @param {function} [options.eh] - error handler instance. See [error-helper]{@link module:error-helper.createInstance}\r\n * @param {function} [options.et] - error translator function for translating error\r\n * @param {function} [options.ft] - field translator function for translating field name upon receiving error\r\n * @return {Object} Promise object\r\n *\r\n * @example\r\n *\r\n * // use default parsers\r\n * ah.one('/url/...')\r\n *     .then(data=>{\r\n *     })\r\n *     .catch(err=>{\r\n *         console.log(err.message)\r\n *     })\r\n *\r\n * // use customized parsers\r\n * ah.one('/url/...', {\r\n *     parseSuccess:(json)=>json.data,\r\n *     parseFail:(json, text)=>({code:json.errCode, message:json.errMessage})\r\n * })\r\n *     .then(data=>{\r\n *     })\r\n *     .catch(err=>{\r\n *         console.log(err.message)\r\n *     })\r\n */\r\nexport function one(req, options={}) {\r\n    const {\r\n        showProgress=true,\r\n        prefix,\r\n        parseFail=defaultFailParser,\r\n        parseSuccess=defaultSuccessParser,\r\n        eh=globalEh\r\n    } = options\r\n\r\n    showProgress && Progress.startSpin()\r\n\r\n    if (_.isString(req)) {\r\n        req = {\r\n            url: req\r\n        }\r\n    }\r\n\r\n    if (prefix) {\r\n        req = {\r\n            ...req,\r\n            url: path.join(prefix, req.url)\r\n        }\r\n    }\r\n\r\n    return Promise.resolve($.ajax({type:'GET', ...req}))\r\n        .catch(xhr => {\r\n            showProgress && Progress.done()\r\n\r\n            const {code, message, errors} = parseFail(xhr.responseJSON, xhr.responseText, xhr.status)\r\n            const tOptions = _.pick(options, ['et', 'ft'])\r\n            if (!errors || errors.length === 0) {\r\n                throw new Error(eh.getMsg([{code, message}], tOptions))\r\n            }\r\n            else {\r\n                throw new Error(eh.getMsg(errors, tOptions))\r\n            }\r\n        })\r\n        .then(res => {\r\n            showProgress && Progress.done()\r\n            return parseSuccess(res)\r\n        })\r\n}\r\n\r\n\r\n/**\r\n * Send multiple ajax requests all at once\r\n * @param {array.<string|Object>} req - array of url strings or jquery request objects\r\n * @param {Object} [options] - options\r\n * @param {boolean} [options.showProgress=true] - whether blocking spinner will be shown during request (before response is received)\r\n * @param {string} [options.prefix] - prefix to prepend to requested urls\r\n * @param {function} [options.parseFail] - parse function to return error data {code,message,errors} upon receiving error\r\n * @param {function} [options.parseSuccess] - parse function to return data upon successfully receiving response\r\n * @param {function} [options.eh] - error handler instance. See [error-helper]{@link module:error-helper.createInstance}\r\n * @param {function} [options.et] - error translator function for translating error\r\n * @param {function} [options.ft] - field translator function for translating field name upon receiving error\r\n * @return {Object} Promise object\r\n *\r\n * @example\r\n *\r\n * ah.all([\r\n *     '/url/...',\r\n *     {type:'GET', url:'/url2/...', data:{key:'value'}}\r\n * ])\r\n *     .then(([data1, data2])=>{\r\n *     })\r\n *     .catch(err=>{\r\n *         console.log(err.message)\r\n *     })\r\n */\r\nexport function all(reqArr, options={}) {\r\n    const {\r\n        showProgress=true\r\n    } = options\r\n\r\n    showProgress && Progress.startSpin()\r\n\r\n    return Promise.map(reqArr, (reqItem) => {\r\n        return one(reqItem, {...options, showProgress:false})\r\n    })\r\n        .then(result => {\r\n            showProgress && Progress.done()\r\n\r\n            return result\r\n        })\r\n        .catch(e => {\r\n            showProgress && Progress.done()\r\n\r\n            throw new Error(e)\r\n        })\r\n}\r\n\r\n/**\r\n * Send multiple ajax requests in sequence (send subsequest request upon completion of previous request)\r\n * @param {array.<string|Object>} req - array of url strings or jquery request objects\r\n * @param {Object} [options] - options\r\n * @param {boolean} [options.showProgress=true] - whether blocking spinner will be shown during request (before response is received)\r\n * @param {string} [options.prefix] - prefix to prepend to requested urls\r\n * @param {function} [options.parseFail] - parse function to return error data {code,message,errors} upon receiving error\r\n * @param {function} [options.parseSuccess] - parse function to return data upon successfully receiving response\r\n * @param {function} [options.eh] - error handler instance. See [error-helper]{@link module:error-helper.createInstance}\r\n * @param {function} [options.et] - error translator function for translating error\r\n * @param {function} [options.ft] - field translator function for translating field name upon receiving error\r\n * @return {Object} Promise object\r\n *\r\n * @example\r\n * ah.series([\r\n *     '/url/...',\r\n *     {type:'GET', url:'/url2/...', data:{key:'value'}}\r\n * ])\r\n *     .then(([data1, data2])=>{\r\n *     })\r\n *     .catch(err=>{\r\n *         console.log(err.message)\r\n *     })\r\n *\r\n */\r\nexport function series(reqArr, options={}) {\r\n    const {\r\n        showProgress=true\r\n    } = options\r\n\r\n    showProgress && Progress.startSpin()\r\n\r\n    return Promise.reduce(reqArr, (values, reqItem) => {\r\n        return one(reqItem, {...options, showProgress:false})\r\n            .then(value => {\r\n                values.push(value)\r\n                return values\r\n            })\r\n    }, [])\r\n        .then(result => {\r\n            showProgress && Progress.done()\r\n\r\n            return result\r\n        })\r\n        .catch(e => {\r\n            showProgress && Progress.done()\r\n\r\n            throw new Error(e)\r\n        })\r\n}\r\n\r\n\r\n/**\r\n * Send multi part ajax request\r\n * @param {url} req - url string\r\n * @param {Object} data - key-value pairs of input elements or raw data\r\n * @param {Object} [options] - options\r\n * @param {boolean} [options.showProgress=true] - whether blocking spinner will be shown during request (before response is received)\r\n * @param {string} [options.prefix] - prefix to prepend to requested url\r\n * @param {function} [options.parseFail] - parse function to return error data {code,message,errors} upon receiving error\r\n * @param {function} [options.parseSuccess] - parse function to return data upon successfully receiving response\r\n * @param {function} [options.eh] - error handler instance. See [error-helper]{@link module:error-helper.createInstance}\r\n * @param {function} [options.et] - error translator function for translating error\r\n * @param {function} [options.ft] - field translator function for translating field name upon receiving error\r\n * @return {Object} Promise object\r\n *\r\n * @example\r\n * ah.multi(\r\n *     '/url/...',\r\n *     {key:'value',file:FILE} // file is HTMLInputElement\r\n * )\r\n *     .then(data=>{\r\n *     })\r\n *     .catch(err=>{\r\n *         console.log(err.message)\r\n *     })\r\n */\r\nexport function multi(url, data, options={}) {\r\n    const {\r\n        showProgress=true,\r\n        prefix,\r\n        parseFail=defaultFailParser,\r\n        parseSuccess=defaultSuccessParser,\r\n        gt=defaultGt,\r\n        eh=globalEh\r\n    } = options\r\n\r\n    const hasFile = _.some(data, (v)=>v instanceof HTMLInputElement && v.type==='file')\r\n\r\n    if (showProgress) {\r\n        if (hasFile) {\r\n            Progress.startProgress(gt('txt-uploading'))\r\n        }\r\n        else {\r\n            Progress.startSpin()\r\n        }\r\n    }\r\n\r\n    let p, result\r\n\r\n    if (prefix) {\r\n        url = path.join(prefix, url)\r\n    }\r\n\r\n    if (window.FormData) {\r\n        let formData = new FormData()\r\n\r\n        _.forEach(data, (v, k)=>{\r\n            if (v instanceof HTMLInputElement) {\r\n                if (v.type==='file') {\r\n                    formData.append(k, v.files[0])\r\n                }\r\n                else {\r\n                    formData.append(k, v.value)\r\n                }\r\n            }\r\n            else {\r\n                formData.append(k, v)\r\n            }\r\n        })\r\n\r\n        p = one({\r\n            url,\r\n            type: 'POST',\r\n            contentType: false,\r\n            processData: false,\r\n            data: formData,\r\n            progress: showProgress && hasFile && ((loaded, total) => {\r\n                Progress.setProgress(loaded, total)\r\n            })\r\n        }, {...options, showProgress:false})\r\n    }\r\n    else {\r\n        p = new Promise((resolve, reject) => {\r\n            // Let's create the iFrame used to send our data\r\n            let iframe = document.createElement('iframe')\r\n            iframe.name = 'multi'\r\n\r\n            // Next, attach the iFrame to the main document\r\n            iframe.style.display = 'none'\r\n            document.body.appendChild(iframe)\r\n\r\n            // Define what should happen when the response is loaded\r\n            iframe.addEventListener('load', () => {\r\n                // iframe.contentWindow.document - for IE<7\r\n                let doc = iframe.contentDocument\r\n                let innerHTML = doc.body.innerHTML\r\n\r\n                //plain text response may be  wrapped  in <pre> tag\r\n                if (innerHTML.slice(0, 5).toLowerCase() === '<pre>' && innerHTML.slice(-6).toLowerCase() === '</pre>') {\r\n                    innerHTML = doc.body.firstChild.firstChild.nodeValue\r\n                }\r\n\r\n                // Remove iframe after receiving response\r\n                document.body.removeChild(iframe)\r\n\r\n                let json\r\n                try {\r\n                    json = JSON.parse(innerHTML)\r\n\r\n                    let {code, message, errors} = parseFail(json)\r\n\r\n                    if (code === 0) {\r\n                        resolve(parseSuccess(json))\r\n                    }\r\n                    else {\r\n                        const tOptions = _.pick(options, ['et', 'ft'])\r\n                        if (!errors || errors.length === 0) {\r\n                            reject(new Error(eh.getMsg([{code, message}], tOptions)))\r\n                        }\r\n                        else {\r\n                            reject(new Error(eh.getMsg(errors, tOptions)))\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e)\r\n                }\r\n            })\r\n\r\n            // create form\r\n            let form = document.createElement('form')\r\n            form.action = url\r\n            form.method = 'POST'\r\n            form.enctype = 'multipart/form-data' // others\r\n            form.encoding = 'multipart/form-data' // in IE\r\n            form.target = iframe.name\r\n\r\n            // Add data to form\r\n            _.forEach(data, (v, k)=> {\r\n                let node = document.createElement('input')\r\n                node.name = k\r\n\r\n                if (v instanceof HTMLInputElement) {\r\n                    if (v.type==='file') {\r\n                        node = $(v).clone(true)\r\n                        v.name = k\r\n                        $(v).hide()\r\n                        node.insertAfter(v)\r\n                        form.appendChild(v)\r\n                    }\r\n                    else {\r\n                        node.value = v.value\r\n                        form.appendChild(node.cloneNode())\r\n                    }\r\n                }\r\n                else {\r\n                    node.value = v\r\n                    form.appendChild(node.cloneNode())\r\n                }\r\n            })\r\n\r\n            form.style.display = 'none'\r\n            document.body.appendChild(form)\r\n\r\n            // submit form\r\n            form.submit()\r\n\r\n            // Remove form after sent\r\n            document.body.removeChild(form)\r\n        })\r\n    }\r\n\r\n    return p\r\n        .then(res => {\r\n            showProgress && hasFile && Progress.set(gt('txt-uploaded'))\r\n            result = res\r\n            return Promise.delay(1000)\r\n        })\r\n        .then(() => {\r\n            showProgress && Progress.done()\r\n            return result\r\n        })\r\n        .catch(err => {\r\n            showProgress && Progress.done()\r\n            throw err\r\n        })\r\n}\r\n\r\n\r\nclass Ajaxer {\r\n    constructor(id, options={}) {\r\n        this.id = id\r\n        const {\r\n            prefix,\r\n            parseFail=defaultFailParser,\r\n            parseSuccess=defaultSuccessParser,\r\n            et\r\n        } = options\r\n\r\n        this.setupPrefix(prefix)\r\n        this.setupResponseParser(parseFail, parseSuccess)\r\n        this.setupErrorHandler(et)\r\n    }\r\n\r\n    setupPrefix(prefix) {\r\n        this.prefix = prefix\r\n    }\r\n\r\n    setupResponseParser(parseFail, parseSuccess) {\r\n        if (parseFail) {\r\n            this.parseFail = parseFail\r\n        }\r\n        if (parseSuccess) {\r\n            this.parseSuccess = parseSuccess\r\n        }\r\n    }\r\n\r\n    setupErrorHandler(et) {\r\n        if (et) {\r\n            this.eh = createEh(`${this.id}-eh`, {et})\r\n        }\r\n        else {\r\n            this.eh = globalEh\r\n        }\r\n    }\r\n\r\n    one(req, options={}) {\r\n        return one(req, {\r\n            prefix: this.prefix,\r\n            parseFail: this.parseFail,\r\n            parseSuccess: this.parseSuccess,\r\n            eh: this.eh,\r\n            ...options\r\n        })\r\n    }\r\n\r\n    all(reqArr, options={}) {\r\n        return all(reqArr, {\r\n            prefix: this.prefix,\r\n            parseFail: this.parseFail,\r\n            parseSuccess: this.parseSuccess,\r\n            eh: this.eh,\r\n            ...options\r\n        })\r\n    }\r\n\r\n    series(reqArr, options={}) {\r\n        return series(reqArr, {\r\n            prefix: this.prefix,\r\n            parseFail: this.parseFail,\r\n            parseSuccess: this.parseSuccess,\r\n            eh: this.eh,\r\n            ...options\r\n        })\r\n    }\r\n\r\n    multi(url, data, options={}) {\r\n        return multi(url, data, {\r\n            prefix: this.prefix,\r\n            parseFail: this.parseFail,\r\n            parseSuccess: this.parseSuccess,\r\n            eh: this.eh,\r\n            ...options\r\n        })\r\n    }\r\n\r\n}\r\n\r\nAjaxer.instances = {}\r\n\r\n\r\n/**\r\n * Create a new ajax handler instance\r\n * @param {string} id - instance id, may be used to retrieve instance in future calls\r\n * @param {Object} [options] - options\r\n * @param {function} [options.eh] - error handler instance used by this instance. See [error-helper]{@link module:error-helper.createInstance}\r\n * @param {function} [options.parseFail] - parse function to return error data {code,message,errors} upon receiving error\r\n * @param {function} [options.parseSuccess] - parse function to return data upon successfully receiving response\r\n * @return {Object} created ajax handler instance object\r\n *\r\n * @example\r\n *\r\n * const moduleAjaxer = createInstance(\r\n *     'module-id',\r\n *     {\r\n *         parseSuccess:(json)=>json.data,\r\n *         parseFail:(json, text)=>({code:json.errCode, message:json.errMessage})\r\n *     }\r\n * )\r\n */\r\nexport function createInstance(id, options={}) {\r\n    if (Ajaxer.instances[id]) {\r\n        log.error(`Cannot create instance, instance with id ${id} already exists`)\r\n        return null\r\n    }\r\n\r\n    const newInstance = new Ajaxer(id, options)\r\n    Ajaxer.instances[id] = newInstance\r\n    return newInstance\r\n}\r\n\r\n/**\r\n * Retrieves ajax handler instance\r\n * @param {string} id - instance id, may be used to retrieve instance in future calls\r\n * @return {Object} ajax handler instance object\r\n *\r\n * @example\r\n * const moduleAjaxer = getInstance('module-id')\r\n */\r\nexport function getInstance(id) {\r\n    return Ajaxer.instances[id]\r\n}\r\n\r\nconst ah = createInstance('global')\r\n\r\nexport default ah","/**\r\n  * @module date\r\n  * @description A set of date-related input utils, such as token-conversion\r\n  */\r\n\r\nlet log = require('loglevel').getLogger('utils/date')\r\n\r\nexport function flatpickrToMomentToken(dateFormat, timeFormat, enableTime) {\r\n    const format = {\r\n        date: dateFormat,\r\n        time: timeFormat\r\n    }\r\n\r\n    // Year format, only 2 and 4 digits are supported in flatpickr\r\n    format.date = format.date.replace(/Y/g, 'YYYY')\r\n    format.date = format.date.replace(/y/g, 'YY')\r\n\r\n    // Month format, textual and numeric representations are supported in flatpickr\r\n    format.date = format.date.replace(/M/g, 'MMM')  // Short textual representation\r\n    format.date = format.date.replace(/F/g, 'MMMM') // Full textual representation\r\n    format.date = format.date.replace(/m/g, 'MM')\r\n    format.date = format.date.replace(/n/g, 'M')\r\n\r\n    // Day format, with ordinal suffix, and with/without zero leading\r\n    format.date = format.date.replace(/J/g, 'Do')   // with ordinal suffix\r\n    format.date = format.date.replace(/d/g, 'DD')\r\n    format.date = format.date.replace(/j/g, 'D')\r\n\r\n    if (enableTime) {\r\n        // Hour format\r\n        // Tokens of hour 1~12 are the same in Momentjs & flatpickr\r\n        // Thus, only handle 24 hours format\r\n        format.time = format.time.replace(/H/g, 'HH')\r\n\r\n        // Moment format, only two-digits format is supported in flatpickr\r\n        format.time = format.time.replace(/i/g, 'mm')\r\n\r\n        // Second format\r\n        // Tokens of second without 0 leading are the same in Momentjs & flatpickr\r\n        // Thus, only handle the token with 0 leading\r\n        format.time = format.time.replace(/S/g, 'ss')\r\n\r\n        // AM/PM format. Only uppercase is supported in flatpickr\r\n        format.time = format.time.replace(/K/g, 'A')\r\n    }\r\n\r\n    return format\r\n}\r\n\r\nexport default {\r\n    flatpickrToMomentToken\r\n}","/**\r\n  * @module error-helper\r\n  * @description Error message helpers\r\n  */\r\n\r\nimport _ from 'lodash'\r\n\r\nlet log = require('loglevel').getLogger('core/utils/error-helper')\r\n\r\nconst defaultEt = (codes, params={})=>`Error: ${codes} - ${JSON.stringify(_.values(params))}`\r\n\r\n\r\nfunction _getMsg({code, params={}, message}, options={}) {\r\n    const {\r\n        et=defaultEt,\r\n        ft\r\n    } = options\r\n\r\n    let msg = ''\r\n\r\n    // try to localize 'field' parameter if exists\r\n    if (params.field && ft) {\r\n        msg += ft('fields.'+params.field) + ': '\r\n    }\r\n    return msg + et([''+code, '-1'], {code, ...params, message})\r\n}\r\n\r\n\r\nexport function getSystemMsg(et=defaultEt) {\r\n    return et('-1')\r\n}\r\n\r\n/**\r\n * Converts error object(s) into an error message\r\n * @param {array.<Object>} errors - array of errors\r\n * @param {Object} [options] - options\r\n * @param {function} [options.et] - error translator\r\n * @param {function} [options.ft] - field translator\r\n * @return {string} error message\r\n *\r\n */\r\nexport function getMsg(errors, options={}) {\r\n    if (!errors || errors.length === 0) {\r\n        return getSystemMsg()\r\n    }\r\n    return _.map(errors, (error) => _getMsg(error, options)).join('<br/>')\r\n}\r\n\r\n\r\nclass ErrorHandler {\r\n    constructor(id, options={}) {\r\n        this.id = id\r\n        const {\r\n            et=defaultEt\r\n        } = options\r\n\r\n        this.setupErrorTranslate(et)\r\n    }\r\n\r\n    setupErrorTranslate(et) {\r\n        this.et = et\r\n    }\r\n\r\n    getSystemMsg() {\r\n        return getSystemMsg(this.et)\r\n    }\r\n\r\n    getMsg(errors, options={}) {\r\n        options = (_.isObject(options)) ? options : {}\r\n        return getMsg(errors, {et:this.et, ...options})\r\n    }\r\n}\r\n\r\nErrorHandler.instances = {}\r\n\r\n/**\r\n * Create a new error handler instance\r\n * @param {string} id - instance id, may be used to retrieve instance in future calls\r\n * @param {Object} [options] - options\r\n * @param {function} [options.et] - error translator\r\n * @return {Object} created error handler instance object\r\n *\r\n */\r\nexport function createInstance(id, options) {\r\n    if (ErrorHandler.instances[id]) {\r\n        log.error(`Cannot create instance, instance with id ${id} already exists`)\r\n        return null\r\n    }\r\n\r\n    const newInstance = new ErrorHandler(id, options)\r\n    ErrorHandler.instances[id] = newInstance\r\n    return newInstance\r\n}\r\n\r\n/**\r\n * Retrieves error handler instance\r\n * @param {string} id - instance id, may be used to retrieve instance in future calls\r\n * @return {Object} error handler instance object\r\n *\r\n * @example\r\n * const moduleErrorHandler = getInstance('module-id')\r\n */\r\nexport function getInstance(id) {\r\n    return ErrorHandler.instances[id]\r\n}\r\n\r\nconst eh = createInstance('global')\r\n\r\nexport default eh","/**\r\n * @module grid-event\r\n * @description An event addon for navigating between input cells in grid\r\n * With this module, a table can be turned into grid, with the following abilities:\r\n *\r\n * * left, right, up, down arrows to traverse between input cells\r\n * * receive row/column change events\r\n */\r\n\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\n\r\nlet log = require('loglevel').getLogger('core/mixins/grid-mixin')\r\n\r\n\r\nfunction unsubscribe(node) {\r\n    log.debug('unsubscribe')\r\n    $(node).off()\r\n}\r\n\r\n/**\r\n * @typedef {Object} handler\r\n * @property {function} on attach event, possible events 'row'/'column' change\r\n * @property {function} unsubscribe unsubscribe from event\r\n */\r\n\r\n/**\r\n * Subscribe to data grid input traverse events.\r\n *\r\n * @param {dom} node - node to attach grid events to\r\n * @param {boolean} [columnLayout=false] - is the table direction in columns (not rows)?\r\n * @return {handler} handler for attaching or unsubscribe from the event\r\n *\r\n * @example\r\n * let handler = subscribe(document.getElementById('table'), false)\r\n *     .on('row', (rowId)=>{ console.log('row changed',rowId)})\r\n *     .on('column', ()=>{ console.log('column changed')})\r\n *\r\n * handler.unsubscribe()\r\n */\r\nexport function subscribe(node, columnLayout=false) {\r\n    log.debug('subscribe')\r\n\r\n    let left=37,\r\n        up=38,\r\n        right=39,\r\n        down=40\r\n\r\n    if (columnLayout) {\r\n        left = 38\r\n        right = 40\r\n        up = 37\r\n        down = 39\r\n    }\r\n\r\n    let handle, register\r\n    let events = {\r\n    }\r\n\r\n    register = (type, func) => {\r\n        if (!func || !_.isFunction(func)) {\r\n            log.error('register event failed')\r\n            return null\r\n        }\r\n        if (!type || !_.includes(['row', 'column'], type)) {\r\n            log.error('event type must be row or column')\r\n            return null\r\n        }\r\n\r\n        events[type] = func\r\n\r\n        return handle\r\n    }\r\n\r\n    handle = {\r\n        unsubscribe: unsubscribe.bind(null, node),\r\n        on: register\r\n    }\r\n\r\n\r\n    $(node).on('keydown', 'input, div[contenteditable]', evt => {\r\n        let key = evt.which\r\n        let input = evt.target\r\n        let name = input.name || input.id\r\n        let tr = $(input).closest('tr')\r\n        let td = $(input).closest('td')\r\n        let targetItem\r\n        switch (key) {\r\n            case left:\r\n            case right:\r\n                targetItem = (key === left ? td.prev() : td.next())\r\n                targetItem && targetItem.find('input, div[contenteditable]').focus()\r\n                events.column && events.column()\r\n                break\r\n            case up:\r\n            case down:\r\n                targetItem = (key === up ? tr.prev() : tr.next())\r\n                if (targetItem && targetItem.length>0) {\r\n                    targetItem.find('input[name=\"'+name+'\"], div[id=\"'+name+'\"][contenteditable]').focus()\r\n                    events.row && events.row(targetItem[0].id)\r\n                }\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    })\r\n\r\n    return handle\r\n}\r\n\r\n\r\nexport default subscribe","/**\r\n  * @module input-helper\r\n  * @description A set of input related utilities such as validation, retrieval\r\n  */\r\n\r\nimport _ from 'lodash'\r\nimport _str from 'underscore.string'\r\nimport path from 'path'\r\nimport $ from 'jquery'\r\n\r\nimport eh from './error-helper'\r\n\r\nlet log = require('loglevel').getLogger('core/utils/input-helper')\r\n\r\n\r\nconst UNIT_BYTE = 1024 * 1024\r\n\r\n\r\n/**\r\n * Is the given value an integer (or integer like string)?\r\n * @param {integer|string} n - input\r\n * @return {boolean}\r\n *\r\n * @example\r\n * isInteger(1) === isInteger('1') === true\r\n * isInteger(1.2) === isIntger('1.2') === false\r\n */\r\nexport function isInteger(n) {\r\n    return !isNaN(n) && Number(n)%1===0\r\n}\r\n\r\n/**\r\n * Retrieve all inputs within dom element.<br/>\r\n * Currently detected elements are:\r\n * * input[type='text']\r\n * * input[type='checkbox']\r\n * * input[type='file']\r\n * * select\r\n * * textarea\r\n *\r\n * @param {HTMLElement} node - dom element\r\n * @return {object} Result in key-value pair\r\n *\r\n * @example\r\n * // node = <div><input id='a'/><select name='b'>...</select></div>\r\n * let data = retrieveFormData(node)\r\n * // data = { a:'1', b:'2' }\r\n */\r\nexport function retrieveFormData(node) {\r\n    let inputs = $(node).find('input:text, input:checkbox, input:password, input:file, select, textarea')\r\n\r\n    let result = {}\r\n    if (inputs.length>0) {\r\n        result = _.reduce(inputs, (acc, input) => {\r\n            let {value, type, id, name} = input\r\n\r\n            if (type==='checkbox') {\r\n                value = input.checked\r\n            }\r\n            else if (type==='file') {\r\n                value = input.files[0]\r\n            }\r\n\r\n            acc[id || name] = value\r\n            return acc\r\n        }, {})\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport function getErrorMessage(errors, options) {\r\n    if (!errors || errors.length===0) {\r\n        return null\r\n    }\r\n\r\n    if (!_.isArray(errors)) {\r\n        errors = [errors]\r\n    }\r\n    return eh.getMsg(errors, options)\r\n}\r\n\r\n\r\n/**\r\n * Validate field given type/required/validate information\r\n * @param {number|string} value - value to validate\r\n * @param {Object} format - format to check value against\r\n * @param {string} format.name field name\r\n * @param {'text'|'number'|'integer'|'file'} [format.type='text']\r\n * @param {boolean} [format.required=false] is this field mandatory?\r\n * @param {RegExp|string} [format.pattern] validate using regexp pattern\r\n * @param {string} [format.patternReadable] readable error message for pattern\r\n * @param {string | Array.<string>} [format.extension] accepted file extension (when type=file)\r\n * @param {number} [format.min] min value (when type=number|integer)\r\n * @param {number} [format.max] max value (when type=number|integer|file)\r\n * @param {boolean|Object} [tOptions=true] - translator options\r\n * @param {function} [tOptions.et=default error translator] - error translator function\r\n * @param {function} [tOptions.ft] - field translator function\r\n * @return {Object<{code:string, params:{field:string,value:(string|object),min:number,max:number,pattern:string,extension:string}}>} returns error object if tOptions=false\r\n * @return {string} returns translated error message if tOptions is specified\r\n *\r\n * @example\r\n * let error = validateField(7, {name:'field_name',type:'interger',max:6}, false)\r\n * // error == {code:'out-of-bound', params:{field:'field_name',value:7,max:6}}\r\n *\r\n * let error = validateField('07123456', {name:'field_name', pattern:/^[0-9]{10}$/, patternReadable:'not a valid mobile phone #'}, false)\r\n * // error == {code:'no-match', params:{field:'field_name', value:'07123456', pattern:'not a valid mobile phone #'}}\r\n *\r\n * let error = validateField(file, {name: 'file_input', type: 'file', required: true, max: 10}, false)\r\n * // error == {code: 'file-too-large', params: {field: 'file_input', size: 10, value: File}}\r\n */\r\nexport function validateField(value, {name:field, type:inputType='text', required=false, pattern, patternReadable, extension, min, max}, tOptions={}) {\r\n    let errCode = ''\r\n    let errParams = {}\r\n\r\n    if (value==null || _str.isBlank(value)) {\r\n        if (required) {\r\n            errCode = 'missing'\r\n        }\r\n    }\r\n    else if (pattern) {\r\n        if (\r\n            (pattern instanceof RegExp && !pattern.test(value)) ||\r\n            (_.isString(pattern) && !new RegExp(pattern).test(value))\r\n        ) {\r\n            errCode = 'no-match'\r\n            errParams = {pattern:patternReadable || pattern}\r\n        }\r\n    }\r\n    else if (inputType==='number' || inputType==='integer') {\r\n        if (inputType==='integer' && !isInteger(value)) {\r\n            errCode = 'not-int'\r\n        }\r\n        else if (inputType==='number' && isNaN(value)) {\r\n            errCode = 'not-num'\r\n        }\r\n        else {\r\n            let parsedValue = parseFloat(value)\r\n            let hasMin = (min!=null)\r\n            let hasMax = (max!=null)\r\n            if ((hasMin && (parsedValue < min)) || (hasMax && parsedValue > max)) {\r\n                errCode = 'out-of-bound'\r\n                errParams = {min:(hasMin?min:''), max:(hasMax?max:'')}\r\n            }\r\n        }\r\n    }\r\n    else if (inputType==='file') {\r\n        const extName = _.toLower(path.extname(value.name))\r\n        const mimeType = value.type\r\n\r\n        if (max && value.size > max * UNIT_BYTE) {\r\n            errCode = 'file-too-large'\r\n            errParams = {\r\n                max\r\n            }\r\n        }\r\n        else if (extension) {\r\n            if (Array.isArray(extension)) {\r\n                const lowerCaseExt = _.map(extension, _.toLower)\r\n                const isPass = _.some(lowerCaseExt, el => {\r\n                    return (el === extName)\r\n                        || (el === mimeType)\r\n                        || (RegExp(/^[\\w\\d]+\\/\\*$/).test(el) && RegExp(el).test(mimeType))\r\n                })\r\n\r\n                if (!isPass) {\r\n                    errCode = 'file-wrong-format'\r\n                    errParams = {\r\n                        extension: lowerCaseExt.toString()\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                const lowerCaseExt = _.toLower(extension)\r\n                const isRangedExt = RegExp(/^[\\w\\d]+\\/\\*$/).test(lowerCaseExt)\r\n\r\n                const isPass = (extName === lowerCaseExt)\r\n                            || (mimeType === lowerCaseExt)\r\n                            || (isRangedExt && RegExp(lowerCaseExt).test(mimeType))\r\n\r\n                if (!isPass) {\r\n                    errCode = 'file-wrong-format'\r\n                    errParams = {\r\n                        extension: lowerCaseExt\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let error = null\r\n    if (errCode) {\r\n        error = {code:errCode, params:{field, value, ...errParams}}\r\n    }\r\n\r\n    if (tOptions) {\r\n        return getErrorMessage(error, tOptions)\r\n    }\r\n\r\n    return error\r\n}\r\n\r\n/**\r\n * Validate data input(s) against given format.<br/>\r\n *\r\n * @param {object} data - key-value pairs\r\n * @param {object} format - format to check\r\n * @param {boolean|Object} [tOptions=true] - translator options\r\n * @param {function} [tOptions.et=default error translator] - error translator function\r\n * @param {function} [tOptions.ft] - field translator function\r\n * @return {Array.<error>} Array of errors if tOptions=false. See [validateField]{@link module:input-helper.validateField}\r\n * @return {string} returns translated error message if tOptions is specified\r\n *\r\n * @example\r\n * let data = {'key1':'value1', 'key2':7, 'key3':3}\r\n * let format = { required:true, type:'integer', max:6 }\r\n * let errors = validateData(data, format, false)\r\n * // errors == [\r\n * //   {code:'not-int', params:{field:'key1',value:'value1'}},\r\n * //   {code:'out-of-bound', params:{field:'key2', value:7, max:6}}\r\n * // ]\r\n *\r\n */\r\nexport function validateData(data, format, tOptions={}) {\r\n    log.debug('validateData', data, format)\r\n    let result = _.reduce(data, (acc, v, k) => {\r\n        // if all fields use different format, then format[k] is used as validation\r\n        // otherwise assume format is a global format\r\n        let formatToCheck = format[k] || format\r\n\r\n        if (!_.isArray(v)) {\r\n            v = [v]\r\n        }\r\n\r\n        if (formatToCheck.required && v.length <= 0) {\r\n            log.warn('validateData::array input required', k)\r\n            acc.push({code:'missing', params:{field:k}})\r\n        }\r\n        else {\r\n            _.forEach(v, item => {\r\n                let err = validateField(item, {name:k, ...formatToCheck}, false)\r\n                if (err) {\r\n                    acc.push(err)\r\n                }\r\n            })\r\n        }\r\n\r\n        return acc\r\n    }, [])\r\n\r\n    if (result.length <= 0) {\r\n        result = null\r\n    }\r\n    log.debug('validateData::result', result)\r\n\r\n    if (tOptions) {\r\n        return getErrorMessage(result, tOptions)\r\n    }\r\n\r\n    return result\r\n}\r\n\r\n/**\r\n * Validate form input(s) contained in specified dom node against given format.<br/>\r\n *\r\n * @param {HTMLElement} node - dom element containing form inputs\r\n * @param {object} format - format to check\r\n * @param {boolean|Object} [tOptions=true] - translator options\r\n * @param {function} [tOptions.et=default error translator] - error translator function\r\n * @param {function} [tOptions.ft] - field translator function\r\n * @return {Array.<error>} Array of errors if tOptions=false. See [validateField]{@link module:input-helper.validateField}\r\n * @return {string} returns translated error message if tOptions is specified\r\n *\r\n */\r\nexport function validateForm(node, format, tOptions) {\r\n    let data = retrieveFormData(node)\r\n    return validateData(data, format, tOptions)\r\n}\r\n\r\n\r\nexport default {\r\n    retrieveFormData,\r\n    validateField,\r\n    validateForm,\r\n    validateData,\r\n    getErrorMessage\r\n}","/**\r\n  * @module outside-event\r\n  * @description A subscription for clicking on inside/outside events\r\n  */\r\n\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\n\r\nlet log = require('loglevel').getLogger('core/utils/outside-event')\r\n\r\nfunction unsubscribe() {\r\n    log.debug('unsubscribe')\r\n    $('html').off()\r\n}\r\n\r\n/**\r\n * @typedef {Object} handler\r\n * @property {function} onInside attach inside event\r\n * @property {function} onOutside attach outside event\r\n * @property {function} unsubscribe unsubscribe from event\r\n */\r\n\r\n/**\r\n * Subscribe to inside/outside events.\r\n * @param {dom} node - node to initialze handler for\r\n * @return {handler} handler for attaching or unsubscribe from the event\r\n *\r\n * @example\r\n * let handler = subscribe(document.getElementById('region'))\r\n *     .onInside(target=>{ console.log('inside is clicked') })\r\n *     .onOutside(target=>{ console.log('outside is clicked') })\r\n *\r\n * handler.unsubscribe()\r\n */\r\nexport function subscribe(node) {\r\n    log.debug('subscribe')\r\n\r\n    let onInside, onOutside, handle\r\n\r\n    let register = (type, func) => {\r\n        if (!func || !_.isFunction(func)) {\r\n            log.error('register event failed')\r\n            return null\r\n        }\r\n        if (type==='inside') {\r\n            onInside = func\r\n        }\r\n        else if (type === 'outside') {\r\n            onOutside = func\r\n        }\r\n        else {\r\n            log.error('unsupported event type', type)\r\n        }\r\n        return handle\r\n    }\r\n\r\n\r\n    handle = {\r\n        unsubscribe,\r\n        onInside: register.bind(null, 'inside'),\r\n        onOutside: register.bind(null, 'outside')\r\n    }\r\n\r\n    $('html').on('click', evt => {\r\n        let target = evt.target\r\n\r\n        if (node) {\r\n            if (target.id!=='overlay' && $.contains(node, target)) {\r\n                onInside && onInside(target)\r\n            }\r\n            else {\r\n                onOutside && onOutside(target)\r\n            }\r\n        }\r\n    })\r\n\r\n    return handle\r\n}\r\n\r\n\r\nexport default subscribe","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Router, browserHistory } from 'react-router'\r\nimport loglevel from 'loglevel'\r\nimport logger from 'loglevel-prefix-persist/client'\r\n\r\nimport 'font-gorilla/css/font-gorilla.css'\r\nimport 'purecss/build/pure-min.css'\r\n\r\nlet initialState = JSON.parse(document.getElementById('initial-state').innerHTML)\r\n\r\nlet {envCfg:cfg} = initialState\r\n\r\nlet log = logger(cfg.env, loglevel, cfg.log)\r\n\r\nlet Routes = require('./routes').default\r\n\r\nrender((\r\n    <Router history={browserHistory}>\r\n        {Routes}\r\n    </Router>\r\n), document.getElementById('app-container'))\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport createExample from './example-factory'\r\n\r\nlet Examples = {}\r\n\r\nfunction formatXml(xml) {\r\n    let formatted = ''\r\n    let reg = /(>)(<)(\\/*)/g\r\n    xml = xml.replace(reg, '$1\\r\\n$2$3')\r\n    let pad = 0\r\n    _.forEach(xml.split('\\r\\n'), (node) => {\r\n        let indent = 0\r\n        if (node.match(/.+<\\/\\w[^>]*>$/)) {\r\n            indent = 0\r\n        }\r\n        else if (node.match(/^<\\/\\w/)) {\r\n            if (pad !== 0) {\r\n                pad -= 1\r\n            }\r\n        }\r\n        else if (node.match(/^<\\w([^>]*[^\\/])?>.*$/)) {\r\n            indent = 1\r\n        }\r\n        else {\r\n            indent = 0\r\n        }\r\n\r\n        let padding = ''\r\n        for (let i = 0; i < pad; i++) {\r\n            padding += '  '\r\n        }\r\n\r\n        formatted += padding + node + '\\r\\n'\r\n        pad += indent\r\n    })\r\n\r\n    return formatted\r\n}\r\n\r\n\r\nExamples.Buttons = class extends React.Component {\r\n    state = {isPress:[false, false, false, false]};\r\n\r\n    click = (index) => {\r\n        let {isPress} = this.state\r\n        let newPress = []\r\n        let len = isPress.length\r\n        for (let i =0; i < len; i++) {\r\n            newPress.push((i===index)?!isPress[i]:isPress[i])\r\n        }\r\n        this.setState({isPress:newPress}, ()=>{\r\n            this.setState({\r\n                $test: formatXml(this.node.innerHTML)\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {isPress} = this.state\r\n\r\n        return (\r\n            <div ref={ref=>{ this.node=ref }}>\r\n                <button onClick={this.click.bind(this, 0)}>Primary</button>\r\n                <button className='standard' onClick={this.click.bind(this, 1)}>Standard</button>\r\n                <button disabled onClick={this.click.bind(this, 2)}>Disabled</button>\r\n                <button className='standard' disabled onClick={this.click.bind(this, 3)}>Standard Disabled</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nExamples.Radios = class extends React.Component {\r\n    state = {isPress:[false, false]};\r\n\r\n    click = (index) => {\r\n        let {isPress} = this.state\r\n        console.log(index)\r\n        console.log(isPress)\r\n        let newPress = []\r\n        let len = isPress.length\r\n        for (let i =0; i < len; i++) {\r\n            newPress.push((i===index))\r\n        }\r\n        this.setState({isPress:newPress}, ()=>{\r\n            this.setState({\r\n                $test: formatXml(this.node.innerHTML)\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        // let {movie} = this.state\r\n        let {isPress} = this.state\r\n\r\n        return (\r\n            <div ref={ref=>{ this.node=ref }}>\r\n                <input type='radio' id='r0' onClick={this.click.bind(this, 0)} checked={isPress[0]} /><label htmlFor='r0'>choose1</label>\r\n                <input type='radio' id='r2' onClick={this.click.bind(this, 1)} checked={isPress[1]} /><label htmlFor='r2'>choose2</label>\r\n                <input type='radio' name='r' disabled /><label htmlFor='r'>Unckecked disabled</label>\r\n                <input type='radio' name='r1' checked disabled /><label htmlFor='r'>Checked disabled</label>\r\n            </div>)\r\n    }\r\n}\r\n\r\nExamples.Menus = class extends React.Component {\r\n    state = {isPress:[false, false, false, false, false, false, false, false]};\r\n\r\n    click = (index) => {\r\n        let {isPress} = this.state\r\n        let newPress = []\r\n        let len = isPress.length\r\n        for (let i =0; i < len; i++) {\r\n            newPress.push((i===index)?!isPress[i]:isPress[i])\r\n        }\r\n        this.setState({isPress:newPress}, ()=>{\r\n            this.setState({\r\n                $test: formatXml(this.node.innerHTML)\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {isPress} = this.state\r\n\r\n        return (\r\n            <div ref={ref=>{ this.node=ref }}>\r\n                <ul className='c-menu'>\r\n                    <li className={cx({'header current':isPress[0], header:!isPress[0]})} onClick={this.click.bind(this, 0)}>Primary Menu</li>\r\n                    <li className={cx({current:isPress[1]})} onClick={this.click.bind(this, 1)}>Item 1</li>\r\n                    <li className={cx({current:isPress[2]})} onClick={this.click.bind(this, 2)}>Item 2</li>\r\n                    <li className='disabled'>Disabled</li>\r\n                </ul>\r\n                <ul className='c-menu plain'>\r\n                    <li className={cx({'header current':isPress[4], header:!isPress[4]})} onClick={this.click.bind(this, 4)}>Plain Menu</li>\r\n                    <li className={cx({current:isPress[5]})} onClick={this.click.bind(this, 5)}>Item 1</li>\r\n                    <li className={cx({current:isPress[6]})} onClick={this.click.bind(this, 6)}>Item 2</li>\r\n                    <li className='disabled'>Disabled</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nExamples.Lists = class extends React.Component {\r\n    state = {isPress:[false, false, false, false, false, false, false, false]};\r\n\r\n    click = (index) => {\r\n        let {isPress} = this.state\r\n        let newPress = []\r\n        let len = isPress.length\r\n        for (let i =0; i < len; i++) {\r\n            newPress.push((i===index)?!isPress[i]:isPress[i])\r\n        }\r\n        this.setState({isPress:newPress}, ()=>{\r\n            this.setState({\r\n                $test: formatXml(this.node.innerHTML)\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {isPress} = this.state\r\n\r\n        return (\r\n            <div ref={ref=>{ this.node=ref }}>\r\n                <ul className='c-menu sub'>\r\n                    <li className={cx({'header current':isPress[0], header:!isPress[0]})} onClick={this.click.bind(this, 0)}>List Title1</li>\r\n                    <li className={cx({current:isPress[1]})} onClick={this.click.bind(this, 1)}>Item 1</li>\r\n                    <li className={cx({current:isPress[2]})} onClick={this.click.bind(this, 2)}>Item 2</li>\r\n                    <li className='disabled'>Disabled</li>\r\n                    <li className={cx({'header current':isPress[4], header:!isPress[4]})} onClick={this.click.bind(this, 4)}>List Title2</li>\r\n                    <li className={cx({current:isPress[5]})} onClick={this.click.bind(this, 5)}>Item 5</li>\r\n                    <li className={cx({current:isPress[6]})} onClick={this.click.bind(this, 6)}>Item 6</li>\r\n                    <li className='disabled'>Disabled</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nExamples.Navs = class extends React.Component {\r\n    state = {isPress:[false, false, false, false, false, false, false, false]};\r\n\r\n    click = (index) => {\r\n        let {isPress} = this.state\r\n        let newPress = []\r\n        let len = isPress.length\r\n        for (let i =0; i < len; i++) {\r\n            newPress.push((i===index))\r\n        }\r\n        this.setState({isPress:newPress}, ()=>{\r\n            this.setState({\r\n                $test: formatXml(this.node.innerHTML)\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {isPress} = this.state\r\n\r\n        return (\r\n            <div ref={ref=>{ this.node=ref }}>\r\n                <div className='c-nav'>\r\n                    <div className={cx({current:isPress[1]})} onClick={this.click.bind(this, 1)}>Item 1</div>\r\n                    <div className={cx({current:isPress[2]})} onClick={this.click.bind(this, 2)}>Item 2</div>\r\n                    <div className={cx({current:isPress[3]})} onClick={this.click.bind(this, 3)}>Item 3</div>\r\n                    <div className={cx({current:isPress[4]})} onClick={this.click.bind(this, 4)}>Item 4</div>\r\n                    <div className={cx({current:isPress[5]})} onClick={this.click.bind(this, 5)}>Item 5</div>\r\n                    <div className={cx({current:isPress[6]})} onClick={this.click.bind(this, 6)}>Item 6</div>\r\n                    <div className={cx({current:isPress[7]})} onClick={this.click.bind(this, 7)}>Item 7</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nExamples.SubNavs = class extends React.Component {\r\n    state = {isPress:[false, false, false, false, false, false, false, false]};\r\n\r\n    click = (index) => {\r\n        let {isPress} = this.state\r\n        let newPress = []\r\n        let len = isPress.length\r\n        for (let i =0; i < len; i++) {\r\n            newPress.push((i===index))\r\n        }\r\n        this.setState({isPress:newPress}, ()=>{\r\n            this.setState({\r\n                $test: formatXml(this.node.innerHTML)\r\n            })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {isPress} = this.state\r\n\r\n        return (\r\n            <div ref={ref=>{ this.node=ref }}>\r\n                <div className='c-nav sub'>\r\n                    <div className={cx({current:isPress[1]})} onClick={this.click.bind(this, 1)}>Item 1</div>\r\n                    <div className={cx({current:isPress[2]})} onClick={this.click.bind(this, 2)}>Item 2</div>\r\n                    <div className={cx({current:isPress[3]})} onClick={this.click.bind(this, 3)}>Item 3</div>\r\n                    <div className={cx({current:isPress[4]})} onClick={this.click.bind(this, 4)}>Item 4</div>\r\n                    <div className={cx({current:isPress[5]})} onClick={this.click.bind(this, 5)}>Item 5</div>\r\n                    <div className={cx({current:isPress[6]})} onClick={this.click.bind(this, 6)}>Item 6</div>\r\n                    <div className={cx({current:isPress[7]})} onClick={this.click.bind(this, 7)}>Item 7</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nexport default function (Component, title) {\r\n    return class extends React.Component {\r\n        state = {};\r\n\r\n        componentDidMount() {\r\n            this.interval = setInterval(()=>{\r\n                this.updateStateInfo()\r\n            }, 500)\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            clearInterval(this.interval)\r\n        }\r\n\r\n        updateStateInfo = () => {\r\n            if (JSON.stringify(this.component.state || {}) !== JSON.stringify(this.state)) {\r\n                this.setState(this.component.state || {})\r\n            }\r\n        };\r\n\r\n        render() {\r\n            return <fieldset>\r\n                <legend>{title}</legend>\r\n                <div className='example'>\r\n                    <div className='demo'>\r\n                        <Component ref={ref=>{ this.component=ref }} />\r\n                    </div>\r\n                    <pre className='state'>\r\n                        {\r\n                            _.map(_.omitBy(this.state, (v, k)=>_.startsWith(k, '_')), (v, k)=>{\r\n                                const isHtml = _.startsWith(k, '$')\r\n                                return <div key={k}>\r\n                                    <label>{k}:</label>\r\n                                    <div>{isHtml ? v : JSON.stringify(v, null, '  ')}</div>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </pre>\r\n                </div>\r\n            </fieldset>\r\n        }\r\n    };\r\n}","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport _ from 'lodash'\r\nimport $ from 'jquery'\r\nimport im from 'object-path-immutable'\r\nimport cx from 'classnames'\r\n\r\n\r\nimport Form from 'core/components/form'\r\nimport {Combobox, Dropdown, Input, MultiInput/*, Form*/} from 'core/components'\r\n\r\nimport createExample from './example-factory'\r\n\r\nlet Examples = {}\r\n\r\n\r\nExamples.Combobox = class extends React.Component {\r\n    state = {\r\n        movie: {\r\n            selected: 'test',\r\n            eventInfo: null,\r\n            info: null,\r\n            error: false,\r\n            list: [{value:'test', text:'TEST'}]\r\n        },\r\n        tv: {\r\n            selected: [],\r\n            eventInfo: null,\r\n            info: null,\r\n            error: false,\r\n            list: []\r\n        },\r\n        producers: {}\r\n    };\r\n\r\n    handleChange = (field, value, eventInfo) => {\r\n        this.setState(\r\n            im(this.state)\r\n                .set(field+'.selected', value)\r\n                .set(field+'.eventInfo', eventInfo)\r\n                .value()\r\n        )\r\n    };\r\n\r\n    handleSearch = (type, text) => {\r\n        // ajax to fetch movies, but doesn't need to be ajax\r\n        this.setState(\r\n            im(this.state)\r\n                .set(type+'.list', [])\r\n                .set(type+'.error', false)\r\n                .set(type+'.info', 'Loading...')\r\n                .value(),\r\n            () => {\r\n                $.get(\r\n                    `https://api.themoviedb.org/3/${text?'search':'discover'}/${type}`,\r\n                    {\r\n                        api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                        query: text\r\n                    })\r\n                    .done(({results:list=[], total_results:total=0})=>{\r\n                        if (total <= 0) {\r\n                            this.setState(\r\n                                im(this.state)\r\n                                    .set(type+'.list', [])\r\n                                    .set(type+'.info', `No ${type} found`)\r\n                                    .value()\r\n                            )\r\n                        }\r\n                        else {\r\n                            this.setState(\r\n                                im(this.state)\r\n                                    .set(type+'.list', _.map(list, ({id, name, title})=>({value:id, text:title||name})))\r\n                                    .set(type+'.info', total>10 ? `There are ${total} results, only show the first 10 records` : null)\r\n                                    .value()\r\n                            )\r\n                        }\r\n                    })\r\n                    .fail((xhr)=>{\r\n                        this.setState(im.set(this.state, type+'.error', xhr.responseText))\r\n                    })\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return <div className='c-form'>\r\n            {\r\n                ['movie', 'tv'].map(type=>{\r\n                    let {info, error, list, selected} = this.state[type]\r\n\r\n                    return <div key={type}>\r\n                        <label htmlFor={type}>Select {type}</label>\r\n                        <Combobox\r\n                            id={type}\r\n                            required={true}\r\n                            onChange={this.handleChange.bind(this, type)}\r\n                            search={{\r\n                                enabled: true,\r\n                                onSearch: this.handleSearch.bind(this, type)\r\n                            }}\r\n                            info={info}\r\n                            infoClassName={cx({'c-error':error})}\r\n                            list={list}\r\n                            placeholder={type}\r\n                            enableClear={type==='tv'}\r\n                            multiSelect={{\r\n                                enabled: type==='tv',\r\n                                toggleAll: true,\r\n                                toggleAllText: 'All'\r\n                            }}\r\n                            value={selected} />\r\n                    </div>\r\n                })\r\n            }\r\n            <div>\r\n                <label htmlFor='producers'>Select producers</label>\r\n                <Combobox\r\n                    id='producers'\r\n                    list={['abc', 'def', 'xyz', 'ijk'].map(i=>({value:i, text:i}))}\r\n                    multiSelect={{\r\n                        enabled: true,\r\n                        toggleAll: true\r\n                    }}\r\n                    search={{\r\n                        enabled: true\r\n                    }}\r\n                    info={(list)=>{\r\n                        return list.length <=0 ? 'No Results Found' : ''\r\n                    }}\r\n                    onChange={this.handleChange.bind(this, 'producers')}\r\n                    value={this.state.producers.selected} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.MultiInput = class extends React.Component {\r\n    state = {\r\n        phones: [],\r\n        movies: [],\r\n        actors: [],\r\n        files: [],\r\n        forms: [{field1:'value1'}],\r\n        settings: {\r\n            layout: '',\r\n            readOnly: false\r\n        }\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings inline'\r\n            fields={{\r\n                layout: {\r\n                    label: 'layout',\r\n                    editor: 'RadioGroup',\r\n                    props: {\r\n                        className: 'inline',\r\n                        list: _.map(['', 'inline', 'expand', 'boxed'], item=>({value:item, text:item||'default(none)'}))\r\n                    }\r\n                },\r\n                readOnly: {\r\n                    label: 'readOnly',\r\n                    editor: 'Checkbox'\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        let {phones, movies, actors, forms, settings:{layout, readOnly}} = this.state\r\n        const layoutProp = {[layout]:true}\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <div className='c-form'>\r\n                <div>\r\n                    <label htmlFor='phones'>Enter phones</label>\r\n                    <MultiInput\r\n                        id='phones'\r\n                        base='Input'\r\n                        props={{validate: {\r\n                            pattern: /^[0-9]{10}$/,\r\n                            t: ()=>'Incorrect phone number, should read like 0900000000'\r\n                        }}}\r\n                        readOnly={readOnly}\r\n                        {...layoutProp}\r\n                        onChange={this.handleChange.bind(this, 'phones')}\r\n                        value={phones} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='movies'>Select movies</label>\r\n                    <MultiInput\r\n                        id='movies'\r\n                        base='Combobox'\r\n                        props={{\r\n                            enableClear: false,\r\n                            list: ['abc', 'def', 'xyz', 'ijk'].map(i=>({value:i, text:i})),\r\n                            search: {\r\n                                enabled: true\r\n                            }\r\n                        }}\r\n                        readOnly={readOnly}\r\n                        {...layoutProp}\r\n                        onChange={this.handleChange.bind(this, 'movies')}\r\n                        value={movies} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='actors'>Select actors</label>\r\n                    <MultiInput\r\n                        id='actors'\r\n                        base='Dropdown'\r\n                        props={{list:['abc', 'def', 'xyz', 'ijk'].map(i=>({value:i, text:i}))}}\r\n                        readOnly={readOnly}\r\n                        {...layoutProp}\r\n                        onChange={this.handleChange.bind(this, 'actors')}\r\n                        value={actors} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='files'>Select files (using FileInput component)</label>\r\n                    <MultiInput\r\n                        id='files'\r\n                        base='FileInput'\r\n                        props={{\r\n                            accept: '.csv',\r\n                            enableClear: false\r\n                        }}\r\n                        readOnly={readOnly}\r\n                        {...layoutProp}\r\n                        persistKeys\r\n                        onChange={this.handleChange.bind(this, 'files')} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='input'>React Native Inputs</label>\r\n                    <MultiInput\r\n                        id='react'\r\n                        base='input'\r\n                        props={{\r\n                            type: 'text'\r\n                        }}\r\n                        readOnly={readOnly}\r\n                        {...layoutProp}\r\n                        onChange={this.handleChange.bind(this, 'react')} />\r\n                </div>\r\n                <div>\r\n                    <label>Multi Forms</label>\r\n                    <MultiInput\r\n                        base='Form'\r\n                        props={{\r\n                            className: 'inline',\r\n                            fields: {\r\n                                field1: {editor:'Input'},\r\n                                field2: {editor:'Input'},\r\n                                field3: {editor:'Input'},\r\n                                field4: {editor:'Input'}\r\n                            }\r\n                        }}\r\n                        value={forms}\r\n                        readOnly={readOnly}\r\n                        {...layoutProp}\r\n                        addText='Add New Form'\r\n                        defaultItemValue={{}}\r\n                        onChange={this.handleChange.bind(this, 'forms')} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nclass Query extends React.Component {\r\n    static propTypes = {\r\n        onChange: PropTypes.func,\r\n        value: PropTypes.shape({\r\n            app: PropTypes.string,\r\n            time: PropTypes.string\r\n        })\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        let {onChange, value:curValue} = this.props\r\n        onChange({\r\n            ...curValue,\r\n            [field]: value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {value:{app, time}} = this.props\r\n        const APPLICATIONS = ['Facebook', 'Twitter', 'Plurk', 'Line', 'Yahoo']\r\n        return <div>\r\n            <span> Web Application:\r\n                <Dropdown\r\n                    required={true}\r\n                    onChange={this.handleChange.bind(this, 'app')}\r\n                    value={app}\r\n                    list={APPLICATIONS.map(type=>({value:type, text:type}))} />\r\n            </span>\r\n            <span>Time:\r\n                <Input placeholder='Enter Time' onChange={this.handleChange.bind(this, 'time')} value={time} />\r\n            </span>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.MultiInputCustom = class extends React.Component {\r\n    state = {\r\n        queries: [\r\n            {app:'Facebook', time:'2016-07-26 14:00'},\r\n            {app:'Facebook', time:'2016-07-25 14:45'}\r\n        ]\r\n    };\r\n\r\n    handleChange = (queries) => {\r\n        this.setState({queries})\r\n    };\r\n\r\n    render() {\r\n        let {queries} = this.state\r\n        return <MultiInput\r\n            base={Query}\r\n            value={queries}\r\n            addText='Add Query'\r\n            removeText='Remove'\r\n            defaultItemValue={{app:'Facebook'}}\r\n            onChange={this.handleChange} />\r\n    }\r\n}\r\n\r\nExamples.BasicForm = class extends React.Component {\r\n    state = {\r\n        movie: {\r\n            id: 99,\r\n            year: '1982',\r\n            title: 'Blade Runner',\r\n            director: 'Ridley Scott',\r\n            languages: ['english', 'japanese'],\r\n            reviews: 'Great movie!',\r\n            genre: 'scifi', // index into 'scifi' drop down list\r\n            notes: [],\r\n            scores: {\r\n                imdb: 8.2,\r\n                rottenTomatoes: 8.9\r\n            }\r\n        },\r\n        settings: {\r\n            withActions: false,\r\n            columns: 3,\r\n            classNames: ['inline', 'left']\r\n        }\r\n    };\r\n\r\n    handleChange = (movie, eventInfo) => {\r\n        this.setState({movie, eventInfo})\r\n    };\r\n\r\n    handleSearch = (movie) => {\r\n        // do some ajax here\r\n        console.log('search for movie', {movie})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                withActions: {\r\n                    label: 'Include Actions',\r\n                    editor: 'Checkbox'\r\n                },\r\n                columns: {\r\n                    label: '# columns',\r\n                    editor: 'Dropdown',\r\n                    props: {\r\n                        list: _.map([1, 2, 3, 4], c=>({value:c, text:c}))\r\n                    }\r\n                },\r\n                classNames: {\r\n                    label: 'Apply classNames',\r\n                    editor: 'CheckboxGroup',\r\n                    props: {\r\n                        className: 'inline',\r\n                        list: _.map(['inline', 'aligned', 'left'], cn=>({value:cn, text:cn}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        const {settings:{withActions, classNames, columns}, movie} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <Form\r\n                id='movie'\r\n                formClassName={cx(classNames)}\r\n                actions={withActions ? {\r\n                    clear: {text:'Clear', clearForm:true},\r\n                    search: {text:'Search', triggerOnComplete:false, handler:this.handleSearch}\r\n                }: null}\r\n                columns={columns}\r\n                fields={{\r\n                    id: {label:'ID', formatter:id=>`X${id}`},\r\n                    year: {label:'Year', editor:'Input', props:{type:'integer', required:true, validate:{min:1900}}},\r\n                    title: {label:'Title', editor:'Input', props:{required:true}},\r\n                    director: {label:'Director', editor:'Input', props:{required:true}},\r\n                    directedIn: {label:'Directed In', editor:'DatePicker', props:{}},\r\n                    genre: {label: 'Genre', editor: 'Dropdown', props: {\r\n                        list: [\r\n                            {value:'drama', text:'Drama'},\r\n                            {value:'horror', text:'Horror'},\r\n                            {value:'scifi', text:'Sci-Fi'}\r\n                        ],\r\n                        defaultText: 'Please select a genre'\r\n                    }},\r\n                    languages: {label: 'Languages', className: 'group', editor: 'CheckboxGroup', props: {\r\n                        list: [\r\n                            {value:'english', text:'English'},\r\n                            {value:'japanese', text:'Japanese'},\r\n                            {value:'german', text:'German'},\r\n                            {value:'xyz', text:'XYZ'}\r\n                        ],\r\n                        disabled: ['xyz']\r\n                    }},\r\n                    reviews: {label:'Reviews', editor:'Textarea', props:{required:false}},\r\n                    notes: {label:'Notes', editor:'MultiInput', props:{base:'Input', inline:true}},\r\n                    'scores.imdb': {label: 'IMDB Score', editor: 'Input', props: (data)=>{\r\n                        // disable IMDB score when production year is in the future\r\n                        if (data.year >= 2017) {\r\n                            return {disabled:true}\r\n                        }\r\n                        else {\r\n                            return {type:'number', validate:{min:0}}\r\n                        }\r\n                    }},\r\n                    'scores.rottenTomatoes': {label:'Tomatoes Score', editor:'Input', props:{type:'number', validate:{min:0}}}\r\n                }}\r\n                onChange={this.handleChange}\r\n                value={movie} />\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.ComplexForm = class extends React.Component {\r\n    state = {\r\n        movie: {\r\n            id: 99,\r\n            year: '1982',\r\n            title: 'Blade Runner',\r\n            director: 'Ridley Scott',\r\n            languages: ['english', 'japanese'],\r\n            genre: 'scifi', // index into 'scifi' drop down list\r\n            notes: [],\r\n            scores: {\r\n                imdb: 8.2,\r\n                rottenTomatoes: 8.9\r\n            }\r\n        },\r\n        settings: {\r\n            withActions: false,\r\n            columns: 2,\r\n            classNames: ['aligned', 'inline']\r\n        }\r\n    };\r\n\r\n    handleChange = (movie, eventInfo) => {\r\n        this.setState({movie, eventInfo})\r\n    };\r\n\r\n    handleSearch = (movie) => {\r\n        // do some ajax here\r\n        console.log('search for movie', {movie})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                withActions: {\r\n                    label: 'Include Actions',\r\n                    editor: 'Checkbox'\r\n                },\r\n                columns: {\r\n                    label: '# columns',\r\n                    editor: 'Dropdown',\r\n                    props: {\r\n                        list: _.map([1, 2, 3, 4], c=>({value:c, text:c}))\r\n                    }\r\n                },\r\n                classNames: {\r\n                    label: 'Apply classNames',\r\n                    editor: 'CheckboxGroup',\r\n                    props: {\r\n                        className: 'inline',\r\n                        list: _.map(['inline', 'aligned', 'left'], cn=>({value:cn, text:cn}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        const {settings:{withActions, classNames, columns}, movie} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <Form\r\n                id='movie'\r\n                header='Create New Movie'\r\n                footer='* required fields'\r\n                formClassName={cx(classNames)}\r\n                actions={withActions ? {\r\n                    clear: {text:'Clear', clearForm:true},\r\n                    search: {text:'Search', triggerOnComplete:true, handler:this.handleSearch}\r\n                }: null}\r\n                columns={columns}\r\n                fields={{\r\n                    summary: {\r\n                        merge: true,\r\n                        editor: 'Form',\r\n                        props: {\r\n                            header: 'Movie',\r\n                            formClassName: 'inline',\r\n                            fields: {\r\n                                id: {label:'ID', formatter:id=>`X${id}`},\r\n                                year: {label:'Year', editor:'Input', props:{type:'integer', required:true, validate:{min:1900}}},\r\n                                title: {label:'Title', editor:'Input', props:{required:true}}\r\n                            }\r\n                        }\r\n                    },\r\n                    director: {\r\n                        merge: true,\r\n                        editor: 'Form',\r\n                        props: {\r\n                            header: 'Director',\r\n                            formClassName: 'inline',\r\n                            fields: {\r\n                                director: {label:'Director', editor:'Input', props:{required:true}},\r\n                                directedIn: {label:'Directed In', editor:'DatePicker', props:{}}\r\n                            }\r\n                        }\r\n                    },\r\n                    misc: {\r\n                        merge: true,\r\n                        editor: 'Form',\r\n                        props: {\r\n                            header: 'Misc',\r\n                            formClassName: cx('aligned', {left:_.includes(classNames, 'left')}),\r\n                            fields: {\r\n                                genre: {label: 'Genre', editor: 'Dropdown', props: {\r\n                                    list: [\r\n                                        {value:'drama', text:'Drama'},\r\n                                        {value:'horror', text:'Horror'},\r\n                                        {value:'scifi', text:'Sci-Fi'}\r\n                                    ],\r\n                                    defaultText: 'Please select a genre'\r\n                                }},\r\n                                languages: {label: 'Languages', editor: 'CheckboxGroup', props: {\r\n                                    className: 'inline',\r\n                                    list: [\r\n                                        {value:'english', text:'English'},\r\n                                        {value:'japanese', text:'Japanese'},\r\n                                        {value:'german', text:'German'},\r\n                                        {value:'xyz', text:'XYZ'}\r\n                                    ],\r\n                                    disabled: ['xyz']\r\n                                }},\r\n                                notes: {label:'Notes', editor:'MultiInput', props:{base:'Input', inline:false}}\r\n                            }\r\n                        }\r\n                    },\r\n                    scores: {\r\n                        label: '',\r\n                        editor: 'Form',\r\n                        props: {\r\n                            header: 'Reviews',\r\n                            formClassName: cx('aligned', {left:_.includes(classNames, 'left')}),\r\n                            fields: {\r\n                                imdb: {label: 'IMDB', editor: 'Input', props: (data)=>{\r\n                                    // disable IMDB score when production year is in the future\r\n                                    if (data.year >= 2017) {\r\n                                        return {disabled:true}\r\n                                    }\r\n                                    else {\r\n                                        return {type:'number', validate:{min:0}}\r\n                                    }\r\n                                }},\r\n                                rottenTomatoes: {label:'Rotten Tomatoes', editor:'Input', props:{type:'number', validate:{min:0}}}\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                onComplete={this.handleSearch}\r\n                onChange={this.handleChange}\r\n                value={movie} />\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default () => <div id='example-form-advanced'>\r\n    {\r\n        _.map(Examples, (example, key)=>{\r\n            return React.createElement(createExample(example, key), {key})\r\n        })\r\n    }\r\n</div>\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport Form from 'core/components/form'\r\n\r\nimport {\r\n    /*Form, */CheckboxGroup, Checkbox, DateRange,\r\n    DatePicker, RangeCalendar, Dropdown, Input, Textarea,\r\n    RadioGroup, ButtonGroup, FileInput, Slider, ToggleButton\r\n} from 'core/components'\r\n\r\nimport createExample from './example-factory'\r\n\r\nlet Examples = {}\r\n\r\nExamples.Checkbox = class extends React.Component {\r\n    state = {subscribe:false};\r\n\r\n    handleChange = (subscribe) => {\r\n        this.setState({subscribe})\r\n    };\r\n\r\n    render() {\r\n        let {subscribe} = this.state\r\n        return <div>\r\n            <div className='c-flex aic'>\r\n                <label htmlFor='subscribe'>Would you like to subscribe to this newsletter?</label>\r\n                <Checkbox\r\n                    id='subscribe'\r\n                    onChange={this.handleChange}\r\n                    checked={subscribe} />\r\n            </div>\r\n            <div className='c-flex aic'>\r\n                <label htmlFor='subscribe-disabled'>Always checked</label>\r\n                <Checkbox\r\n                    id='subscribe-disabled'\r\n                    checked={true}\r\n                    disabled />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nExamples.CheckboxGroup = class extends React.Component {\r\n    state = {\r\n        movies: [1],\r\n        eventInfo: null,\r\n        settings: {\r\n            enableAll: false,\r\n            classNames: []\r\n        }\r\n    };\r\n\r\n    handleChange = (movies, eventInfo) => {\r\n        this.setState({movies, eventInfo})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                enableAll: {\r\n                    label: 'Show All',\r\n                    editor: 'Checkbox'\r\n                },\r\n                classNames: {\r\n                    label: 'Apply classNames',\r\n                    editor: 'CheckboxGroup',\r\n                    props: {\r\n                        list: _.map(['inline'], cn=>({value:cn, text:cn}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        const {movies, settings:{enableAll, classNames}} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <div className='c-form-item'>\r\n                <label>Select movies</label>\r\n                <CheckboxGroup\r\n                    list={[\r\n                        {value:1, text:'1 - Finding Dory (selected by default, cannot deselect)'},\r\n                        {value:2, text:'2 - Wizard of Oz'},\r\n                        {value:3, text:'3 - Citizen Kane', className:'ck'},\r\n                        {value:4, text:'4 - Poppy Shakespear (cannot select)'}\r\n                    ]}\r\n                    className={cx(classNames)}\r\n                    toggleAll={enableAll}\r\n                    toggleAllText='Select/Unselect all'\r\n                    onChange={this.handleChange}\r\n                    value={movies}\r\n                    disabled={[1, 4]} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.RadioGroup = class extends React.Component {\r\n    state = {\r\n        movie: 'oz',\r\n        eventInfo: null,\r\n        settings: {\r\n            classNames: []\r\n        }\r\n    };\r\n\r\n    handleChange = (movie, eventInfo) => {\r\n        this.setState({movie, eventInfo})\r\n    };\r\n\r\n    handleDemoSettingChange = (settings) => {\r\n        this.setState({settings})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                classNames: {\r\n                    label: 'Apply classNames',\r\n                    editor: 'CheckboxGroup',\r\n                    props: {\r\n                        list: _.map(['inline'], cn=>({value:cn, text:cn}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={this.handleDemoSettingChange} />\r\n    };\r\n\r\n    render() {\r\n        const {movie, settings:{classNames}} = this.state\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <div className='c-form-item'>\r\n                <label>Select a movie</label>\r\n                <RadioGroup\r\n                    id='movie'\r\n                    className={cx(classNames)}\r\n                    list={[\r\n                        {value:'dory', text:'dory - Finding Dory'},\r\n                        {value:'oz', text:'oz - Wizard of Oz'},\r\n                        {value:'kane', text:'kane - Citizen Kane', children:<input defaultValue='abc' type='text' />}\r\n                    ]}\r\n                    onChange={this.handleChange}\r\n                    value={movie} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.ButtonGroup = class extends React.Component {\r\n    state = {\r\n        type: 'movie',\r\n        types: ['tv']\r\n    };\r\n\r\n    handleChange = (name, val) => {\r\n        this.setState({[name]:val})\r\n    };\r\n\r\n    render() {\r\n        let {type, types} = this.state\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label>Select a type</label>\r\n                <ButtonGroup\r\n                    id='type'\r\n                    list={[\r\n                        {value:'movie', text:'Movie'},\r\n                        {value:'tv', text:'TV'},\r\n                        {value:'actors', text:'Actors'}\r\n                    ]}\r\n                    onChange={this.handleChange.bind(this, 'type')}\r\n                    value={type} />\r\n            </div>\r\n            <div>\r\n                <label>Select multiple types (movie disabled)</label>\r\n                <ButtonGroup\r\n                    id='types'\r\n                    list={[\r\n                        {value:'movie', text:'Movie'},\r\n                        {value:'tv', text:'TV'},\r\n                        {value:'actors', text:'Actors'}\r\n                    ]}\r\n                    multi\r\n                    disabled={['movie']}\r\n                    onChange={this.handleChange.bind(this, 'types')}\r\n                    value={types} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Dropdown = class extends React.Component {\r\n    state = {\r\n        movie: '',\r\n        director: ''\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    render() {\r\n        let {movie, director} = this.state\r\n        return <div className='c-form' id='dropdown'>\r\n            <div>\r\n                <label htmlFor='movie'>Select movie (optional)</label>\r\n                <Dropdown\r\n                    id='movie'\r\n                    list={[\r\n                        {a:'fd', b:'Finding Dory'},\r\n                        {a:'woo', b:'Wizard of Oz'},\r\n                        {a:'ck', b:'Citizen Kane'}\r\n                    ]}\r\n                    listTransform={{value:'a', text:'b'}}\r\n                    onChange={this.handleChange.bind(this, 'movie')}\r\n                    defaultValue='fd'\r\n                    value={movie} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='director'>Select director (mandatory)</label>\r\n                <Dropdown\r\n                    id='director'\r\n                    list={[\r\n                        {value:'a', text:'Steven Spielberg'},\r\n                        {value:'b', text:'Spike'},\r\n                        {value:'c', text:'Lynch'},\r\n                        {value:'d', text:'Bergman'}\r\n                    ]}\r\n                    size={3}\r\n                    required={true}\r\n                    onChange={this.handleChange.bind(this, 'director')}\r\n                    defaultText='Please select a director'\r\n                    value={director} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Input = class extends React.Component {\r\n    state = {\r\n        name: '',\r\n        age: '',\r\n        email: '',\r\n        interest: '',\r\n        job: ''\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    render() {\r\n        let {name, age, email, interest, job} = this.state\r\n        return <div className='c-form inline'>\r\n            <div>\r\n                <label htmlFor='name'>Name</label>\r\n                <Input\r\n                    id='name'\r\n                    onChange={this.handleChange.bind(this, 'name')}\r\n                    value={name}\r\n                    required={true}\r\n                    placeholder='Your name' />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='age'>Age</label>\r\n                <Input\r\n                    id='age'\r\n                    type='number'\r\n                    validate={{\r\n                        max: 100,\r\n                        t: (code, {value})=>`Age ${value} is invalid`\r\n                    }}\r\n                    className='my-age'\r\n                    onChange={this.handleChange.bind(this, 'age')}\r\n                    value={age}\r\n                    placeholder='Your age' />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='email'>Email</label>\r\n                <Input\r\n                    id='email'\r\n                    validate={{\r\n                        pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                        patternReadable: 'xxx@xxx.xxx',\r\n                        t: (code, {value, pattern})=>{\r\n                            if (code==='missing') {\r\n                                return 'You didn\\'t enter an email address'\r\n                            }\r\n                            else { // assume pattern issue\r\n                                return `${value} You didn't provide a valid email, the correct format should be ${pattern}`\r\n                            }\r\n                        }\r\n                    }}\r\n                    onChange={this.handleChange.bind(this, 'email')}\r\n                    value={email} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='interest'>Interest</label>\r\n                <Input\r\n                    id='interest'\r\n                    onChange={this.handleChange.bind(this, 'interest')}\r\n                    value={interest}\r\n                    required={false}\r\n                    placeholder='Your Interest' />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='job'>Job</label>\r\n                <Input\r\n                    id='job'\r\n                    onChange={this.handleChange.bind(this, 'job')}\r\n                    value={job}\r\n                    required={true}\r\n                    placeholder='Your Job' />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Textarea = class extends React.Component {\r\n    state = {\r\n        feedback: ''\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    render() {\r\n        const {feedback} = this.state\r\n        return <div className='c-form inline'>\r\n            <div>\r\n                <label htmlFor='feedback'>Feedback</label>\r\n                <Textarea\r\n                    id='feedback'\r\n                    onChange={this.handleChange.bind(this, 'feedback')}\r\n                    value={feedback} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.DateRange = class extends React.Component {\r\n    state = {\r\n        date: {\r\n            from: '2012-04-26',\r\n            to: '2012-10-26'\r\n        },\r\n        datetime: {\r\n            from: '2012-10-26 12:00',\r\n            to: '2012-10-26 17:00'\r\n        }\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    render() {\r\n        let {date, datetime} = this.state\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='date'>Select Date Range</label>\r\n                <DateRange\r\n                    id='date'\r\n                    onChange={this.handleChange.bind(this, 'date')}\r\n                    value={date}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing') { return 'Please input date' }\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='datetime'>Select Date Time Range</label>\r\n                <DateRange\r\n                    id='datetime'\r\n                    onChange={this.handleChange.bind(this, 'datetime')}\r\n                    enableTime={true}\r\n                    value={datetime}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing') { return 'Please input date' }\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Datepicker = class extends React.Component {\r\n    state = {\r\n        date: '2017-03-20',\r\n        datetime: '2017-03-20 16:01'\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    render() {\r\n        let {date, datetime} = this.state\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='date'>Select Date</label>\r\n                <DatePicker\r\n                    id='date'\r\n                    onChange={this.handleChange.bind(this, 'date')}\r\n                    value={date}\r\n                    locale='zh'\r\n                    t={(code, params) => {\r\n                        if (code === 'missing') { return 'Please input date' }\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='datetime'>Select Date Time</label>\r\n                <DatePicker\r\n                    id='datetime'\r\n                    onChange={this.handleChange.bind(this, 'datetime')}\r\n                    enableTime={true}\r\n                    value={datetime}\r\n                    t={(code, params) => {\r\n                        if (code === 'missing') { return 'Please input date' }\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.RangeCalendar = class extends React.Component {\r\n    state = {\r\n        date: {\r\n            from: '2012-04-26',\r\n            to: '2012-10-26'\r\n        },\r\n        datetime: {\r\n            from: '2012-10-26 12:00',\r\n            to: '2012-10-26 17:00'\r\n        }\r\n    };\r\n\r\n    handleChange = (field, value) => {\r\n        this.setState({[field]:value})\r\n    };\r\n\r\n    render() {\r\n        let {date, datetime} = this.state\r\n        return <div className='c-form'>\r\n            <div>\r\n                <label htmlFor='date'>Select Date Range</label>\r\n                <RangeCalendar\r\n                    id='date'\r\n                    onChange={this.handleChange.bind(this, 'date')}\r\n                    value={date}\r\n                    shortcut\r\n                    t={(code, params) => {\r\n                        if (code === 'missing') { return 'Please input date' }\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor='datetime'>Select Date Time Range</label>\r\n                <RangeCalendar\r\n                    id='datetime'\r\n                    onChange={this.handleChange.bind(this, 'datetime')}\r\n                    enableTime={true}\r\n                    value={datetime}\r\n                    shortcut={\r\n                    [\r\n                            {value:1, text:'Hour', unit:'hours'},\r\n                            {value:1, text:'Day', unit:'days'},\r\n                            {value:1, text:'Month', unit:'months'},\r\n                            {value:1, text:'Quarter', unit:'quarters'},\r\n                            {value:1, text:'Year', unit:'years'}\r\n                    ]\r\n                    }\r\n                    t={(code, params) => {\r\n                        if (code === 'missing') { return 'Please input date' }\r\n                        else {\r\n                            return `Invalid date format. Should be ${params.pattern}`\r\n                        }\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.FileInput = class extends React.Component {\r\n    state = {\r\n        name: '',\r\n        type: '',\r\n        size: 0\r\n    };\r\n\r\n    handleChange = (file) => {\r\n        this.setState({\r\n            name: file ? file.name : '',\r\n            type: file ? file.type : '',\r\n            size: file ? file.size : 0\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <div className='c-flex aic'>\r\n            <FileInput\r\n                onChange={this.handleChange} required={true} name='fileDemo'\r\n                validate={{\r\n                    max: 10,\r\n                    extension: ['.mp3', '.wma', '.pdf'],\r\n                    t: (code, params) => {\r\n                        if (code === 'file-too-large') {\r\n                            return `File size should be lower than ${params.max} MB`\r\n                        }\r\n                        else {\r\n                            return `File format should be ${params.extension}`\r\n                        }\r\n                    }\r\n                }} />\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Slider = class extends React.Component {\r\n    state = {value:40, value1:20};\r\n\r\n    handleChange = (e) => {\r\n        let value = e\r\n        this.setState({value})\r\n    };\r\n\r\n    render() {\r\n        let {value, value1} = this.state\r\n        return (\r\n            <div>\r\n                <Slider value={value} onChange={this.handleChange} showProgress={true} min={0} max={100} step={5} />\r\n                <Slider value={value1} showProgress={true} min={0} max={100} step={5} disabled />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nExamples.ToggleButton = class extends React.Component {\r\n    state = {subscribe:false, subscribe1:false, subscribe2:true, subscribe3:false};\r\n\r\n    handleChange = (subscribe) => {\r\n        this.setState({subscribe})\r\n    };\r\n\r\n    handleChangeName = (subscribe1) => {\r\n        // let result = {};\r\n        // result[`${name}`]=obj;\r\n        this.setState({subscribe1})\r\n    };\r\n\r\n    render() {\r\n        let {subscribe, subscribe1, subscribe2, subscribe3} = this.state\r\n        return (<div className='c-form'>\r\n            <div className='inline'>\r\n                <label htmlFor='subscribe'>Would you like to subscribe to this newsletter?</label>\r\n                <ToggleButton\r\n                    id='subscribe'\r\n                    onChange={this.handleChange}\r\n                    onText='On'\r\n                    offText='Off'\r\n                    on={subscribe} />\r\n            </div>\r\n            <div className='inline'>\r\n                <ToggleButton\r\n                    id='subscribe1'\r\n                    onChange={this.handleChangeName}\r\n                    onText='On'\r\n                    offText='Off'\r\n                    on={subscribe1} />\r\n                <label htmlFor='subscribe1'>Primary toggle button</label>\r\n            </div>\r\n            <div className='inline'>\r\n                <ToggleButton\r\n                    id='subscribe2'\r\n                    onText='On'\r\n                    offText='Off'\r\n                    on={subscribe2}\r\n                    disabled />\r\n                <label htmlFor='subscribe2'>Primary toggle button disabled</label>\r\n            </div>\r\n            <div className='inline'>\r\n                <ToggleButton\r\n                    id='subscribe3'\r\n                    onText='On'\r\n                    offText='Off'\r\n                    on={subscribe3}\r\n                    disabled />\r\n                <label htmlFor='subscribe3'>Primary toggle button disabled</label>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-form'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\n\r\nimport {Tree, Hierarchy} from 'core/components'\r\nimport Form from 'core/components/form'\r\n\r\nimport createExample from './example-factory'\r\n\r\nconst log = require('loglevel').getLogger('examples/tree')\r\n\r\nlet Examples = {}\r\n\r\nconst INITIAL_DATA = {\r\n    id: 'home',\r\n    label: 'Home',\r\n    children: [\r\n        {\r\n            id: 'C', label: 'C - click to load children dynamically',\r\n            children: []\r\n        },\r\n        {\r\n            id: 'A',\r\n            children: [\r\n                {\r\n                    id: 'A.a',\r\n                    children: [\r\n                        {id:'A.a.1'},\r\n                        {\r\n                            id: 'A.a.2',\r\n                            children: [\r\n                                {id:'A.a.2.x'},\r\n                                {id:'A.a.2.y'}\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    id: 'A.b',\r\n                    children: [\r\n                        {id:'A.b.1', disabled:true},\r\n                        {id:'A.b.2'},\r\n                        {id:'A.b.3'}\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'B', label: 'B',\r\n            children: [\r\n                {id:'B.a', label:'B.a custom label'},\r\n                {id:'B.b', label:'B.b custom label'}\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nExamples.Hierarchy = class extends React.Component {\r\n    state = {\r\n        current: 'A.a',\r\n        selected: [],\r\n        data: INITIAL_DATA,\r\n        settings: {\r\n            showRoot: false,\r\n            foldable: true,\r\n            selectable: true,\r\n            layout: 'accordion'\r\n        }\r\n    };\r\n\r\n    handleLabelClick = (current) => {\r\n        this.setState({current})\r\n    };\r\n\r\n    handleSelectChange = (selected) => {\r\n        this.setState({selected})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                showRoot: {\r\n                    label: 'Show Root?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                foldable: {\r\n                    label: 'Allow Expand/Collapse?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                selectable: {\r\n                    label: 'Selectable?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                layout: {\r\n                    label: 'Layout',\r\n                    editor: 'RadioGroup',\r\n                    props: {\r\n                        className: 'inline',\r\n                        list: _.map(['tree', 'accordion'], l=>({value:l, text:l}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        let {data, current, selected, settings:{showRoot, foldable, selectable, layout}} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <Hierarchy\r\n                layout={layout}\r\n                foldable={foldable}\r\n                data={showRoot?data:{children:data.children}}\r\n                selection={{\r\n                    enabled: selectable\r\n                }}\r\n                selected={selected}\r\n                onSelectionChange={this.handleSelectChange}\r\n                current={current}\r\n                onLabelClick={this.handleLabelClick}\r\n                onLabelMouseOver={(...args)=>{ console.log('label mouseover', args) }}\r\n                defaultOpened={['home', 'A']} />\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Panels = class extends React.Component {\r\n    state = {\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <Hierarchy\r\n                className='c-border'\r\n                layout='accordion'\r\n                foldable={true}\r\n                indent={[4, 0]}\r\n                data={{\r\n                    id: 'all',\r\n                    foldable: false,\r\n                    children: [\r\n                        {\r\n                            id: 'A',\r\n                            children: [\r\n                                {\r\n                                    id: 'A.a',\r\n                                    label: <div className='c-result nopad'>\r\n                                        <div>\r\n                                            <label>key 1</label>\r\n                                            <div>value 1</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>key 2</label>\r\n                                            <div>value 2</div>\r\n                                        </div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    id: 'A.b',\r\n                                    label: <div className='c-result nopad'>\r\n                                        <div>\r\n                                            <label>key 1</label>\r\n                                            <div>value 1</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>key 2</label>\r\n                                            <div>value 2</div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            id: 'B',\r\n                            children: [\r\n                                {\r\n                                    id: 'B.a',\r\n                                    label: <div className='c-result nopad'>\r\n                                        <div>\r\n                                            <label>key 1</label>\r\n                                            <div>value 1</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>key 2</label>\r\n                                            <div>value 2</div>\r\n                                        </div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    id: 'B.b',\r\n                                    label: <div className='c-result nopad'>\r\n                                        <div>\r\n                                            <label>key 1</label>\r\n                                            <div>value 1</div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label>key 2</label>\r\n                                            <div>value 2</div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }}\r\n                defaultOpened={['all']} />\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.Tree = class extends React.Component {\r\n    state = {\r\n        selected: 'A.a',\r\n        data: INITIAL_DATA,\r\n        settings: {\r\n            allowToggle: true\r\n        }\r\n    };\r\n\r\n    selectEntry = (selected) => {\r\n        this.setState({selected})\r\n    };\r\n\r\n    toggleOpen = (opened, eventData) => {\r\n        let {id, open, path} = eventData\r\n\r\n        if (id === 'C' && open) {\r\n            let setPath = (\r\n                _(path)\r\n                    .map(p=>p.index)\r\n                    .tail()\r\n                    .map(p=>'children.'+p)\r\n                    .value()\r\n            ).join('.')+'.children'\r\n\r\n            log.info(`loading more data for ${id}: ${setPath}`)\r\n\r\n            let newData = im.set(this.state.data, setPath, [\r\n                {id:'C.a'},\r\n                {id:'C.b'}\r\n            ])\r\n            this.setState({data:newData})\r\n        }\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                allowToggle: {\r\n                    label: 'Allow Toggle?',\r\n                    editor: 'Checkbox',\r\n                    className: 'inline aic'\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        let {data, selected, settings:{allowToggle}} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <Tree\r\n                data={data}\r\n                allowToggle={allowToggle}\r\n                selected={selected}\r\n                defaultOpened={['home', 'A']}\r\n                onToggleOpen={this.toggleOpen}\r\n                onSelect={this.selectEntry} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-tree'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport {List} from 'core/components'\r\nimport Form from 'core/components/form'\r\nimport paginate from 'core/hoc/paginator'\r\n\r\nimport createExample from './example-factory'\r\n\r\nlet Examples = {}\r\nconst ListWithPageNav = paginate(List, {target:'list'})\r\n\r\nExamples.List = class extends React.Component {\r\n    state = {\r\n        movies: _(_.range(0, 200)).map(i=>({id:`${i}`, title:`Movie ${i}`})).value(),\r\n        selected: null,\r\n        settings: {\r\n            multicols: false,\r\n            selectable: true,\r\n            multiSelect: true\r\n        }\r\n    };\r\n\r\n    handleSelectionChange = (selected) => {\r\n        this.setState({selected})\r\n    };\r\n\r\n    handleClick = (id, movie) => {\r\n        console.log('movie clicked', {id, movie})\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            formClassName='inline'\r\n            fields={{\r\n                multicols: {\r\n                    label: 'Multi-columns?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                selectable: {\r\n                    label: 'Selectable?',\r\n                    editor: 'Checkbox'\r\n                },\r\n                multiSelect: {\r\n                    label: 'Multiple Selection?',\r\n                    editor: 'Checkbox'\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        const {movies, settings:{multicols, selectable, multiSelect}, selected} = this.state\r\n\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <List\r\n                id='movies'\r\n                className={cx({multicols})}\r\n                list={movies}\r\n                itemClassName='aic'\r\n                itemStyle={{padding:'5px'}}\r\n                selection={{enabled:selectable, multiSelect}}\r\n                selected={selected}\r\n                onSelectionChange={this.handleSelectionChange}\r\n                onClick={this.handleClick}\r\n                formatter={movie=>`${movie.id} - ${movie.title}`} />\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.ListWithPageNav = class extends React.Component {\r\n    state = {\r\n        movies: _(_.range(0, 200)).map(i=>({id:`${i}`, title:`Movie ${i}`})).value(),\r\n        selected: null\r\n    };\r\n\r\n    handleSelectionChange = (selected) => {\r\n        this.setState({selected})\r\n    };\r\n\r\n    render() {\r\n        const {movies, selected} = this.state\r\n\r\n        return <ListWithPageNav\r\n            id='movies'\r\n            list={movies}\r\n            itemClassName='aic'\r\n            selection={{enabled:true, multiSelect:true}}\r\n            selected={selected}\r\n            onSelectionChange={this.handleSelectionChange}\r\n            formatter={movie=>`${movie.id} - ${movie.title}`}\r\n            paginate={{\r\n                pageSize: 20,\r\n                defaultCurrent: 2\r\n            }} />\r\n    }\r\n}\r\n\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-list'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport createReactClass from 'create-react-class';\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\nimport Promise from 'bluebird'\r\n\r\nimport {\r\n    PopupDialog, Popover, Contextmenu, Progress,\r\n    ModalDialog, Dropdown\r\n} from 'core/components'\r\n\r\nimport {LinkedStateMixin} from 'core/mixins/linked-state-mixins'\r\n\r\nimport createExample from './example-factory'\r\n\r\nlet Examples = {}\r\n\r\nconst INITIAL_STATE = {\r\n    open: false,\r\n    info: null,\r\n    error: false,\r\n    movieId: null\r\n}\r\nconst RateMovieDialog = createReactClass({\r\n    displayName: 'RateMovieDialog',\r\n\r\n    propTypes: {\r\n        onDone: PropTypes.func\r\n    },\r\n\r\n    mixins: [LinkedStateMixin],\r\n\r\n    getInitialState() {\r\n        return _.clone(INITIAL_STATE)\r\n    },\r\n\r\n    open(movieId, {rating}) {\r\n        // ajax get movie details by id\r\n        this.setState({movieId, rating, open:true})\r\n    },\r\n\r\n    close(changed, data) {\r\n        this.setState(_.clone(INITIAL_STATE), () => {\r\n            this.props.onDone(changed, data)\r\n        })\r\n    },\r\n\r\n    rateMovie() {\r\n        let {rating} = this.state\r\n        // can be ajax to post rating\r\n        if (rating) {\r\n            this.close(true, {rating})\r\n        }\r\n        else {\r\n            this.setState({info:'Please select rating', error:true})\r\n        }\r\n    },\r\n\r\n    render() {\r\n        let {movieId, open, info, error} = this.state\r\n        if (!open) {\r\n            return null\r\n        }\r\n\r\n        let actions = {\r\n            cancel: {text:'Cancel', className:'standard', handler:this.close.bind(this, false, null)},\r\n            confirm: {text:'OK!', handler:this.rateMovie}\r\n        }\r\n        return <ModalDialog\r\n            id='rate-movie-dialog'\r\n            title={`Rate ${movieId}!`}\r\n            draggable={true}\r\n            global={true}\r\n            info={info}\r\n            infoClassName={cx({'c-error':error})}\r\n            actions={actions}>\r\n            <Dropdown\r\n                list={_.map(_.range(1, 11), i=>({value:i, text:i}))}\r\n                valueLink={this.linkState('rating')} />\r\n        </ModalDialog>\r\n    },\r\n})\r\n\r\nExamples.ModalDialog = class extends React.Component {\r\n    state = {\r\n        movieId: 1,\r\n        data: {}\r\n    };\r\n\r\n    showRating = () => {\r\n        let {movieId, data} = this.state\r\n        this.dialog.open(movieId, data)\r\n    };\r\n\r\n    handleDone = (changed, data) => {\r\n        if (changed) {\r\n            this.setState({data})\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <button onClick={this.showRating}>Rate Movie!</button>\r\n            <RateMovieDialog ref={ref=>{ this.dialog=ref }} onDone={this.handleDone} />\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nExamples.PopupDialog = class extends React.Component {\r\n    state = {\r\n        prompt: null,\r\n        confirm: null\r\n    };\r\n\r\n    alert = () => {\r\n        PopupDialog.alert({\r\n            title: 'ALERT',\r\n            display: 'Error!'\r\n        })\r\n    };\r\n\r\n    prompt = () => {\r\n        PopupDialog.prompt({\r\n            display: <div className='c-form'>\r\n                <div><label htmlFor='name'>Name</label><input type='text' id='name' /></div>\r\n                <div><label htmlFor='phone'>Phone</label><input type='text' id='phone' /></div>\r\n                <div><label htmlFor='address'>Address</label><input type='text' id='address' /></div>\r\n            </div>,\r\n            act: (confirmed, data)=>{\r\n                if (confirmed) {\r\n                    this.setState({prompt:data})\r\n                    // return Promise.resolve($.post('/api/save/user',data)) // post user information\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    confirm = () => {\r\n        PopupDialog.confirm({\r\n            title: 'DELETE?',\r\n            display: 'Are you sure you want to delete?',\r\n            cancelText: 'NOOO',\r\n            confirmText: 'YESSS',\r\n            act: (confirmed) => {\r\n                if (confirmed) {\r\n                    // do something, eg ajax to DELETE\r\n                }\r\n                this.setState({\r\n                    confirm: confirmed\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    openChild = () => {\r\n        PopupDialog.alertId('g-nested-popup-container', {\r\n            title: 'Child Dialog',\r\n            display: 'NESTED!!',\r\n            confirmText: 'Close Child'\r\n        })\r\n    };\r\n\r\n    openParent = () => {\r\n        PopupDialog.alert({\r\n            title: 'Nested Parent Dialog',\r\n            display: <button onClick={this.openChild}>Show child dialog</button>,\r\n            confirmText: 'Close Parent'\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <button onClick={this.alert}>Show me alert!</button>\r\n            <button onClick={this.prompt}>Ask me something!</button>\r\n            <button onClick={this.confirm}>Show confirmation!</button>\r\n            <button onClick={this.openParent}>Try nested dialog!</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nExamples.Popover = class extends React.Component {\r\n    openPopover = (evt) => {\r\n        Popover.openId(\r\n            'my-popover-id',\r\n            evt,\r\n            <img alt='popover' src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9ShYQxVabIxy5akkOaFXZiCOfP0WQvmDXaSAq52bjW4xqFy8q' style={{maxWidth:100, maxHeight:100}} />,\r\n            {pointy:true}\r\n        )\r\n    };\r\n\r\n    closePopover = () => {\r\n        Popover.closeId('my-popover-id')\r\n    };\r\n\r\n    render() {\r\n        return <span onMouseOver={this.openPopover} onMouseOut={this.closePopover}>\r\n            hover over me\r\n        </span>\r\n    }\r\n}\r\n\r\n\r\nExamples.Contextmenu = class extends React.Component {\r\n    state = {};\r\n\r\n    fetchMovieDetails = (source) => {\r\n        // load data from source\r\n        this.setState({source})\r\n    };\r\n\r\n    handleContextMenu = (evt) => {\r\n        let menuItems = _.map(['imdb', 'rotten'], source=>{\r\n            return [\r\n                {text:`${source} header`, isHeader:true},\r\n                {id:source, text:`Fetch ${source} Data`, action:this.fetchMovieDetails.bind(this, source)},\r\n                {id:`${source}-disabled`, text:`${source} Disabled Item`, disabled:true}\r\n            ]\r\n        })\r\n        Contextmenu.open(evt, _.flatten(menuItems))\r\n    };\r\n\r\n    render() {\r\n        return <span className='c-link' onContextMenu={this.handleContextMenu}>\r\n            Right click on me\r\n        </span>\r\n    }\r\n}\r\n\r\nExamples.Progress = class extends React.Component {\r\n    startProgress = () => {\r\n        Promise.delay(100)\r\n            .then(()=>{ Progress.startProgress('Uploading...') })\r\n            .then(()=>{ return Promise.delay(1000) })\r\n            .then(()=>{ Progress.setProgress(50, 100) })\r\n            .then(()=>{ return Promise.delay(2000) })\r\n            .then(()=>{ Progress.setProgress(100, 100) })\r\n            .then(()=>{ return Promise.delay(1000) })\r\n            .then(()=>{ Progress.set('Done!') })\r\n            .then(()=>{ return Promise.delay(1000) })\r\n            .then(()=>{ Progress.done() })\r\n    };\r\n\r\n    startSpin = () => {\r\n        Progress.startSpin()\r\n        Progress.done(2000)\r\n    };\r\n\r\n    render() {\r\n        return <div>\r\n            <button onClick={this.startProgress}>Simulate Upload Progress</button>\r\n            <button onClick={this.startSpin}>Simulate Spin</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-tabs'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport { Route, Link } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\nimport qs from 'query-string'\r\n\r\nimport DropDownList from 'core/components/dropdown'\r\n\r\nimport Form from './form'\r\nimport AdvancedForm from './form-advanced'\r\nimport Table from './table'\r\nimport List from './list'\r\nimport Tabs from './tabs'\r\nimport Modal from './modal'\r\nimport Tiles from './tiles'\r\nimport Hierarchy from './hierarchy'\r\nimport CssDemo from './css'\r\n\r\n\r\nconst MENU = {\r\n    form: {component:Form, title:'Basic Form'},\r\n    advancedForm: {component:AdvancedForm, title:'Advanced Form'},\r\n    table: {component:Table, title:'Table & PageNav & Search'},\r\n    list: {component:List, title:'List & PageNav'},\r\n    tabs: {component:Tabs, title:'Tabs'},\r\n    hierarchy: {component:Hierarchy, title:'Hierarchy'},\r\n    tiles: {component:Tiles, title:'Tiles'},\r\n    modal: {component:Modal, title:'Modal & Friends'},\r\n    cssDemo: {component:CssDemo, title:'CSS'}\r\n}\r\n\r\nconst NoMatch = () => <div>Page Not Found!</div>\r\n\r\nclass Examples extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.node\r\n    };\r\n\r\n    handleThemeChange = (theme) => {\r\n        window.location = `${window.location.pathname}?theme=${theme}`\r\n    };\r\n\r\n    render() {\r\n        const {theme:currentTheme} = qs.parse(window.location.search)\r\n        return <div id='g-app'>\r\n            <div id='g-header'>\r\n                <ul id='g-menu' className='c-nav'>\r\n                    {\r\n                        _.map(MENU, ({title, component}, tag)=><Link key={tag} activeClassName='current' to={{pathname:tag}}>{title}</Link>)\r\n                    }\r\n                    <li>\r\n                        <a href='/docs' target='_blank'>API Documentation</a>\r\n                    </li>\r\n                </ul>\r\n                <div className='c-flex aic jcfe c-margin'>\r\n                    <label>Select Theme </label>\r\n                    <DropDownList\r\n                        onClick={this.handleThemeChange}\r\n                        list={_.map(['dark', 'purple', 'green'], theme=>({value:theme, text:theme}))}\r\n                        required\r\n                        defaultValue={currentTheme || 'dark'}\r\n                        onChange={this.handleThemeChange} />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    this.props.children\r\n                }\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst Routes = (\r\n    <Route path='/' component={Examples}>\r\n        {\r\n            _.map(MENU, ({component}, tag)=><Route key={tag} path={tag} component={component} />)\r\n        }\r\n        <Route path='*' component={NoMatch} />\r\n    </Route>)\r\n\r\nexport default Routes","import React from 'react'\r\nimport cx from 'classnames'\r\nimport $ from 'jquery'\r\nimport _ from 'lodash'\r\nimport im from 'object-path-immutable'\r\n\r\nimport Form from 'core/components/form'\r\nimport {Table, PageNav, Search, Dropdown, Input} from 'core/components'\r\n\r\nimport subscribeGrid from 'core/utils/grid-event'\r\n\r\nimport createExample from './example-factory'\r\n\r\nconst FIELDS = {\r\n    id: { label:'ID', sortable:true },\r\n    title: { label:'Title', sortable:true},\r\n    adult: {\r\n        label: 'Adult',\r\n        formatter: {\r\n            type: 'mapping',\r\n            list: {true:'Yes', false:'No'}\r\n        },\r\n        className: 'center'\r\n    },\r\n    original_language: {\r\n        label: 'Language',\r\n        formatter: {\r\n            type: 'mapping',\r\n            list: [\r\n                {lang:'en', desc:'English'},\r\n                {lang:'de', desc:'German'}\r\n            ],\r\n            listTransform: {\r\n                value: 'lang',\r\n                text: 'desc'\r\n            }\r\n        }\r\n    },\r\n    popularity: {label:'Popularity'},\r\n    release_date: {\r\n        label: 'Year',\r\n        formatter: {type:'date', format:'YYYY-MM-DD'},\r\n        sortable: true,\r\n        style: {\r\n            width: 100,\r\n            minWidth: 100\r\n        }\r\n    }\r\n}\r\n\r\nlet Examples = {}\r\n\r\nExamples.PagedTable = class extends React.Component {\r\n    state = {\r\n        settings: {\r\n            classNames: []\r\n        },\r\n        search: null,\r\n        page: 1,\r\n        pages: null,\r\n        sort: {\r\n            field: 'title',\r\n            desc: false\r\n        },\r\n        info: null,\r\n        error: false,\r\n        data: []\r\n    };\r\n\r\n    handleSort = (sort) => {\r\n        let {search} = this.state\r\n        if (search) {\r\n            this.loadList({sort})\r\n        }\r\n        else {\r\n            this.setState({sort})\r\n        }\r\n    };\r\n\r\n    handleSearch = (search) => {\r\n        this.loadList({search, page:1})\r\n    };\r\n\r\n    gotoPage = (page) => {\r\n        this.loadList({page})\r\n    };\r\n\r\n    handleInputChange = (rid, field, value) => {\r\n        let {data} = this.state\r\n        let index = _.findIndex(data, ({id})=>id==rid)\r\n        this.setState({data:im.set(data, [index, field], value)})\r\n    };\r\n\r\n    loadList = (newState) => {\r\n        this.setState({...newState, data:[], info:'Loading...', error:false}, () => {\r\n            let {page, sort:{field:sortBy, desc:sortDesc}, search} = this.state\r\n\r\n            $.get(`https://api.themoviedb.org/3/${search?'search':'discover'}/movie`,\r\n                {\r\n                    api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                    query: search,\r\n                    page,\r\n                    sortBy,\r\n                    sortDesc\r\n                })\r\n                .done(({results:list=[], total_results:total=0, total_pages:pages=null}) => {\r\n                    if (total === 0) {\r\n                        this.setState({info:'No movies found!', pages:null})\r\n                        return\r\n                    }\r\n\r\n                    this.setState({info:null, data:list, pages})\r\n                })\r\n                .fail(xhr => {\r\n                    this.setState({info:xhr.responseText, error:true})\r\n                })\r\n        })\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            fields={{\r\n                classNames: {\r\n                    label: 'Apply classNames',\r\n                    editor: 'CheckboxGroup',\r\n                    props: {\r\n                        className: 'inline',\r\n                        list: _.map([\r\n                            'bland', 'nohover', 'fixed-header', 'column',\r\n                            'border-inner-vertical', 'border-inner-horizontal',\r\n                            'border-inner', 'border-outer', 'border-all'], cn=>({value:cn, text:cn}))\r\n                    }\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        let {settings:{classNames}, data, sort, pages, page, info, error} = this.state\r\n\r\n        return <div className='c-box noborder'>\r\n            {this.renderDemoSettings()}\r\n            <header className='c-flex aic'>\r\n                <Search className='end' onSearch={this.handleSearch} enableClear />\r\n            </header>\r\n            <div className='content nopad'>\r\n                <Table\r\n                    id='paged-table'\r\n                    data={data}\r\n                    fields={{\r\n                        ...FIELDS,\r\n                        rate: {\r\n                            label: 'Rating',\r\n                            editor: Dropdown,\r\n                            props: {\r\n                                list: _.map(_.range(1, 11), i=>({value:i, text:i}))\r\n                            }\r\n                        },\r\n                        actions: {label: '', formatter: (val, {id})=>{\r\n                            return <span>\r\n                                <i className='c-link fg fg-eye' onClick={()=>{ window.alert(`open ${id} edit box!`) }} />\r\n                            </span>\r\n                        }}\r\n                    }}\r\n                    rowIdField='id'\r\n                    className={cx(classNames)}\r\n                    info={info}\r\n                    infoClassName={cx({'c-error':error})}\r\n                    onInputChange={this.handleInputChange}\r\n                    sort={sort}\r\n                    onSort={this.handleSort} />\r\n            </div>\r\n            <footer className='c-flex'>\r\n                <PageNav pages={pages} current={page} className='center' onChange={this.gotoPage} />\r\n            </footer>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nExamples.SelectableTable = class extends React.Component {\r\n    state = {\r\n        search: null,\r\n        selected: {ids:[], eventInfo:null},\r\n        clicked: {id:null, eventInfo:null},\r\n        info: null,\r\n        error: false,\r\n        data: []\r\n    };\r\n\r\n    handleSearch = (search) => {\r\n        this.loadList({search})\r\n    };\r\n\r\n    handleSelect = (ids, eventInfo) => {\r\n        this.setState({selected:{ids, eventInfo}})\r\n    };\r\n\r\n    handleClick = (id, data) => {\r\n        this.setState({clicked:{id, data}})\r\n    };\r\n\r\n    loadList = (newState) => {\r\n        this.setState({...newState, data:[], info:'Loading...', error:false}, () => {\r\n            let {search} = this.state\r\n\r\n            $.get(`https://api.themoviedb.org/3/${search?'search':'discover'}/movie`,\r\n                {\r\n                    api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                    query: search\r\n                })\r\n                .done(({results:list=[], total_results:total=0}) => {\r\n                    if (total === 0) {\r\n                        this.setState({info:'No movies found!', pages:null})\r\n                        return\r\n                    }\r\n\r\n                    this.setState({info:null, data:list})\r\n                })\r\n                .fail(xhr => {\r\n                    this.setState({info:xhr.responseText, error:true})\r\n                })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        let {data, info, error} = this.state\r\n\r\n        return <div className='c-box noborder'>\r\n            <header className='c-flex'>\r\n                <Search className='end' onSearch={this.handleSearch} />\r\n            </header>\r\n            <div className='content'>\r\n                <Table\r\n                    id='selectable-table'\r\n                    className='fixed-header'\r\n                    data={data}\r\n                    fields={FIELDS}\r\n                    rowIdField='id'\r\n                    info={info}\r\n                    infoClassName={cx({'c-error':error})}\r\n                    defaultSort={{\r\n                        field: 'title',\r\n                        desc: false\r\n                    }}\r\n                    onRowClick={this.handleClick}\r\n                    selection={{\r\n                        enabled: true,\r\n                        toggleAll: true,\r\n                        multiSelect: true\r\n                    }}\r\n                    onSelectionChange={this.handleSelect} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.DataGrid = class extends React.Component {\r\n    state = {\r\n        info: null,\r\n        error: false,\r\n        data: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.addGridEvent()\r\n        this.loadList()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeGridEvent()\r\n    }\r\n\r\n    addGridEvent = () => {\r\n        this.removeGridEvent()\r\n        this.handle = subscribeGrid(this.node)\r\n            .on('row', () => {\r\n\r\n            })\r\n            .on('column', () => {\r\n\r\n            })\r\n    };\r\n\r\n    removeGridEvent = () => {\r\n        this.handle && this.handle.unsubscribe()\r\n    };\r\n\r\n    loadList = () => {\r\n        this.setState({data:[], info:'Loading...', error:false}, () => {\r\n            $.get('https://api.themoviedb.org/3/search/movie',\r\n                {\r\n                    api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                    query: 'blade'\r\n                })\r\n                .done(({results:list=[], total_results:total=0}) => {\r\n                    if (total === 0) {\r\n                        this.setState({info:'No movies found!', pages:null})\r\n                        return\r\n                    }\r\n\r\n                    this.setState({info:null, data:list})\r\n                })\r\n                .fail(xhr => {\r\n                    this.setState({info:xhr.responseText, error:true})\r\n                })\r\n        })\r\n    };\r\n\r\n    handleInputChange = (rid, field, value) => {\r\n        let {data} = this.state\r\n        let index = _.findIndex(data, ({id})=>id==rid)\r\n        this.setState({data:im.set(data, [index, field], value)})\r\n    };\r\n\r\n    render() {\r\n        let {data, info, error} = this.state\r\n\r\n        return <div className='c-box noborder' ref={ref=>{ this.node=ref }}>\r\n            <div className='content'>\r\n                <Table\r\n                    id='data-grid'\r\n                    data={data}\r\n                    fields={_.mapValues(FIELDS, (cfg, key)=>{\r\n                        return key==='id' ? cfg : {\r\n                            ...cfg,\r\n                            sortable: false,\r\n                            editor: Input\r\n                        }\r\n                    })}\r\n                    onInputChange={this.handleInputChange}\r\n                    className='fixed-header c-grid border-inner'\r\n                    rowIdField='id'\r\n                    info={info}\r\n                    infoClassName={cx({'c-error':error})}\r\n                    defaultSort={{\r\n                        field: 'title',\r\n                        desc: false\r\n                    }} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-table'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport cx from 'classnames'\r\n\r\nimport {Tabs, List} from 'core/components'\r\nimport Form from 'core/components/form'\r\n\r\nimport createExample from './example-factory'\r\n\r\nlet Examples = {}\r\n\r\nExamples.Tabs = class extends React.Component {\r\n    state = {\r\n        currentTab: 'directors',\r\n        settings: {\r\n            oldie: false\r\n        }\r\n    };\r\n\r\n    handleTabChange = (newTab) => {\r\n        this.setState({currentTab:newTab})\r\n    };\r\n\r\n    renderActors = () => {\r\n        return 'actor list'\r\n    };\r\n\r\n    renderDirectors = () => {\r\n        const directors = _(_.range(0, 100)).map(i=>`Director ${i}`).value() // 100 directors\r\n\r\n        return <List\r\n            id='directors'\r\n            list={directors}\r\n            itemClassName='aic'\r\n            selection={{enabled:true, multiSelect:false}} />\r\n    };\r\n\r\n    renderTabContent = () => {\r\n        const {currentTab} = this.state\r\n        if (currentTab === 'actors') {\r\n            return this.renderActors()\r\n        }\r\n        else { // 'directors'\r\n            return this.renderDirectors()\r\n        }\r\n    };\r\n\r\n    renderDemoSettings = () => {\r\n        const {settings} = this.state\r\n        return <Form\r\n            className='demo-settings'\r\n            fields={{\r\n                oldie: {\r\n                    label: 'Use Traditional Style Tab',\r\n                    className: 'inline aic',\r\n                    editor: 'Checkbox'\r\n                }\r\n            }}\r\n            value={settings}\r\n            onChange={newSettings=>{ this.setState({settings:newSettings}) }} />\r\n    };\r\n\r\n    render() {\r\n        const {currentTab, settings:{oldie}} = this.state\r\n        return <div>\r\n            {this.renderDemoSettings()}\r\n            <Tabs\r\n                id='imdb'\r\n                className={cx({oldie})}\r\n                menu={{\r\n                    actors: 'ACTORS',\r\n                    directors: 'DIRECTORS',\r\n                    tv: {title:'TV', disabled:true}\r\n                }}\r\n                current={currentTab}\r\n                onChange={this.handleTabChange}>\r\n                {\r\n                    this.renderTabContent()\r\n                }\r\n            </Tabs>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-tabs'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport _ from 'lodash'\r\n\r\nimport {Tiles, Image, ImageGallery, Popover} from 'core/components'\r\nimport ah from 'core/utils/ajax-helper'\r\n\r\nimport createExample from './example-factory'\r\n\r\nconst IMAGES = [\r\n    'bs', 'camera', 'car', 'drug', 'email', 'fb_messenger',\r\n    'goods', 'gun', 'home', 'ic_airplane', 'ic_alert_2', 'ic_bs',\r\n    'ic_cam_2', 'ic_cam_3', 'ic_car_2', 'ic_case', 'ic_creditcard', 'ic_database',\r\n    'ic_drug', 'ic_email', 'ic_etag', 'ic_etag_gate', 'ic_globe', 'ic_goods',\r\n    'ic_gun', 'ic_help', 'ic_home', 'ic_info', 'ic_ip', 'ip',\r\n    'landline', 'line', 'mobile', 'parking', 'person'\r\n]\r\n\r\nah.setupPrefix('https://api.themoviedb.org/')\r\n\r\nlet Examples = {}\r\n\r\nconst DivBase = ({id}) => <div className='c-padding'>\r\n    <b>Welcome To {id}'s World!</b>\r\n</div>\r\nDivBase.propTypes = {\r\n    id: PropTypes.string\r\n}\r\n\r\nExamples.FixedNumberedTiles = class extends React.Component {\r\n    state = {\r\n        selected: null,\r\n        max: null,\r\n        isLast: false,\r\n        hasMore: false\r\n    };\r\n\r\n    handleClick = (id, {max, total, isLast}) => {\r\n        this.setState({\r\n            selected: id,\r\n            max,\r\n            isLast,\r\n            hasMore: total>max\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <Tiles\r\n            id='fixed'\r\n            base={DivBase}\r\n            itemSize={{\r\n                width: 100,\r\n                height: 100\r\n            }}\r\n            items={_.map(_.range(20), i=>({id:i+''}))}\r\n            spacing={5}\r\n            unit='px'\r\n            max={6}\r\n            overlay={(max, total)=>{\r\n                return <div>{total-max} more items!</div>\r\n            }}\r\n            onClick={this.handleClick} />\r\n    }\r\n}\r\n\r\nExamples.AutoImageTiles = class extends React.Component {\r\n    state = {\r\n        selected: null,\r\n        max: null,\r\n        isLast: false,\r\n        hasMore: false\r\n    };\r\n\r\n    handleClick = (id, {max, total, isLast}) => {\r\n        this.setState({\r\n            selected: id,\r\n            max,\r\n            isLast,\r\n            hasMore: total>max\r\n        })\r\n    };\r\n\r\n    openPopover = (id, data, evt) => {\r\n        Popover.openId(\r\n            'my-popover-id',\r\n            evt,\r\n            <div className='c-box'>\r\n                <header>{id}</header>\r\n                <div className='content c-result aligned'>\r\n                    {\r\n                        _.map(data, (v, k)=><div key={k}>\r\n                            <label>{k}</label>\r\n                            <div>{v+''}</div>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            </div>,\r\n            {pointy:true}\r\n        )\r\n    };\r\n\r\n    closePopover = () => {\r\n        Popover.closeId('my-popover-id')\r\n    };\r\n\r\n    render() {\r\n        return <Tiles\r\n            id='auto'\r\n            base='img'\r\n            itemSize={{\r\n                width: 30,\r\n                height: 20\r\n            }}\r\n            unit='%'\r\n            spacing={5}\r\n            items={_.map(IMAGES, item=>({id:item, src:`/images/tiles/${item}.png`}))}\r\n            max='auto'\r\n            onClick={this.handleClick}\r\n            onMouseOver={this.openPopover}\r\n            onMouseOut={this.closePopover} />\r\n    }\r\n}\r\n\r\nExamples.Image = class extends React.Component {\r\n    render() {\r\n        return <div className='c-flex'>\r\n            <Image\r\n                src='http://image.tmdb.org/t/p/w92/rF5hnmNLfWSWMfpWGoMNptZOIhO.jpg'\r\n                error=':(' />\r\n            <Image\r\n                src='/images/missing.png'\r\n                error=':('\r\n                placeholder='/images/tiles/ic_alert_2.png' />\r\n        </div>\r\n    }\r\n}\r\n\r\nExamples.ImageGalleryStaticDataWithAutoPlayAndRepeat = class extends React.Component {\r\n    state = {\r\n        selected: null,\r\n        max: null,\r\n        total: null,\r\n        start: 3,\r\n        prevStart: null,\r\n        moveBackward: false,\r\n        step: null\r\n    };\r\n\r\n    handleClick = (id, {max, total}) => {\r\n        this.setState({\r\n            selected: id,\r\n            max,\r\n            total\r\n        })\r\n    };\r\n\r\n    handleMove = (start, {before:prevStart, backward:moveBackward, step}) => {\r\n        // start is uncontrolled\r\n        this.setState({\r\n            start,\r\n            prevStart,\r\n            moveBackward,\r\n            step\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {start} = this.state\r\n\r\n        return <ImageGallery\r\n            id='gallery-images'\r\n            items={_.map(['missing', ...IMAGES], item=>({id:item, src:`/images/tiles/${item}.png`}))}\r\n            itemProps={{error:'Load failed..', placeholder:'/images/tiles/ic_alert_2.png'}}\r\n            itemSize={{width:120, height:90}}\r\n            unit='px'\r\n            spacing={3}\r\n            defaultStart={start}\r\n            onMove={this.handleMove}\r\n            onClick={this.handleClick}\r\n            repeat\r\n            autoPlay={{\r\n                enabled: true,\r\n                interval: 3000\r\n            }} />\r\n    }\r\n}\r\n\r\nconst Poster = ({title, src}) => <div className='poster'>\r\n    <div className='img c-flex aic jcc'>\r\n        {src ? <Image\r\n            src={src}\r\n            error={\r\n                <div className='c-flex aic'>\r\n                    <i className='fg fg-alert-1' />\r\n                    Not Available\r\n                </div>\r\n            } /> : null}\r\n    </div>\r\n    <div className='title'>{title}</div>\r\n</div>\r\n\r\nPoster.propTypes = {\r\n    src: PropTypes.string,\r\n    title: PropTypes.node\r\n}\r\n\r\nExamples.PosterGalleryDynamicData = class extends React.Component {\r\n    state = {\r\n        query: 'ab',\r\n        info: null,\r\n        error: false,\r\n        pages: null,\r\n        total: null,\r\n        page: 1,\r\n        _data: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadList()\r\n    }\r\n\r\n    loadList = (newState) => {\r\n        const {query} = this.state\r\n        this.setState({...newState, /*_data:[], */info:'Loading...', error:false}, () => {\r\n            let {page} = this.state\r\n\r\n            ah.one({\r\n                url: '3/search/movie',\r\n                data: {\r\n                    api_key: 'cd31fe0421c3c911e54d8898541bbe74',\r\n                    query,\r\n                    page\r\n                }}, {showProgress:false})\r\n                .then(({results:list=[], total_results:total=0, total_pages:pages=null}) => {\r\n                    if (total === 0) {\r\n                        this.setState({info:'No movies found!', pages:null})\r\n                        return\r\n                    }\r\n\r\n                    this.setState({\r\n                        info: null,\r\n                        total,\r\n                        _data: _.map(list, ({id, title, poster_path})=>({\r\n                            id: id+'',\r\n                            title,\r\n                            src: `http://image.tmdb.org/t/p/w92${poster_path}`\r\n                        })),\r\n                        pages\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    console.error(err)\r\n                    this.setState({info:err.message, error:true})\r\n                })\r\n        })\r\n    };\r\n\r\n    handleMove = (start, {backward}) => {\r\n        const {page} = this.state\r\n        this.loadList({page:(backward?page-1:page+1)})\r\n    };\r\n\r\n    render() {\r\n        const {page, _data, total} = this.state\r\n\r\n        return <ImageGallery\r\n            id='gallery-posters'\r\n            base={Poster}\r\n            items={_data}\r\n            itemSize={{width:25, height:40}}\r\n            unit='%'\r\n            spacing={5}\r\n            start={0}\r\n            hasPrev={page>1}\r\n            hasNext={total-(page*20)>0}\r\n            onMove={this.handleMove} />\r\n    }\r\n}\r\n\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return <div id='example-tiles'>\r\n            {\r\n                _.map(Examples, (example, key)=>{\r\n                    return React.createElement(createExample(example, key), {key})\r\n                })\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}